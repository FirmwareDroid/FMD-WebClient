{"ast":null,"code":"import _get from 'lodash/get';\nimport _isFunction from 'lodash/isFunction';\nimport _memoize from 'lodash/memoize';\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { rgb } from 'd3-color';\n/**\n * Memoize both color generator & color generator result.\n */\n\nvar memoizedColorModifier = _memoize(function (method, _amount) {\n  var amount = parseFloat(_amount);\n  return _memoize(function (d) {\n    return rgb(d.color)[method](amount).toString();\n  }, function (d) {\n    return d.color;\n  });\n}, function (method, amount) {\n  return method + '.' + amount;\n});\n\nvar noneGenerator = function noneGenerator() {\n  return 'none';\n};\n\nvar inheritGenerator = function inheritGenerator(d) {\n  return d.color;\n};\n/**\n * @param {string|Function} instruction\n * @param {string}          [themeKey]\n * @return {Function}\n */\n\n\nexport var getInheritedColorGenerator = function getInheritedColorGenerator(instruction, themeKey) {\n  if (instruction === 'none') return noneGenerator;\n  if (_isFunction(instruction)) return instruction;\n\n  if (instruction === 'theme') {\n    if (!themeKey) {\n      throw new Error('Cannot use \\'theme\\' directive without providing \\'themeKey\\'');\n    }\n\n    return function (d, theme) {\n      return _get(theme, themeKey);\n    };\n  }\n\n  if (instruction === 'inherit') return inheritGenerator;\n  var inheritMatches = instruction.match(/inherit:(darker|brighter)\\(([0-9.]+)\\)/);\n\n  if (inheritMatches) {\n    var method = inheritMatches[1];\n    var amount = inheritMatches[2];\n    return memoizedColorModifier(method, amount);\n  }\n\n  return function () {\n    return instruction;\n  };\n};","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/lib/colors/inherit.js"],"names":["_get","_isFunction","_memoize","rgb","memoizedColorModifier","method","_amount","amount","parseFloat","d","color","toString","noneGenerator","inheritGenerator","getInheritedColorGenerator","instruction","themeKey","Error","theme","inheritMatches","match"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAAuC;;;;;;;;;AASvC,SAASC,GAAT,QAAoB,UAApB;AAEA;;;;AAGA,IAAIC,qBAAqB,GAAGF,QAAQ,CAAC,UAAUG,MAAV,EAAkBC,OAAlB,EAA2B;AAC5D,MAAIC,MAAM,GAAGC,UAAU,CAACF,OAAD,CAAvB;AAEA,SAAOJ,QAAQ,CAAC,UAAUO,CAAV,EAAa;AACzB,WAAON,GAAG,CAACM,CAAC,CAACC,KAAH,CAAH,CAAaL,MAAb,EAAqBE,MAArB,EAA6BI,QAA7B,EAAP;AACH,GAFc,EAEZ,UAAUF,CAAV,EAAa;AACZ,WAAOA,CAAC,CAACC,KAAT;AACH,GAJc,CAAf;AAKH,CARmC,EAQjC,UAAUL,MAAV,EAAkBE,MAAlB,EAA0B;AACzB,SAAOF,MAAM,GAAG,GAAT,GAAeE,MAAtB;AACH,CAVmC,CAApC;;AAYA,IAAIK,aAAa,GAAG,SAASA,aAAT,GAAyB;AACzC,SAAO,MAAP;AACH,CAFD;;AAGA,IAAIC,gBAAgB,GAAG,SAASA,gBAAT,CAA0BJ,CAA1B,EAA6B;AAChD,SAAOA,CAAC,CAACC,KAAT;AACH,CAFD;AAIA;;;;;;;AAKA,OAAO,IAAII,0BAA0B,GAAG,SAASA,0BAAT,CAAoCC,WAApC,EAAiDC,QAAjD,EAA2D;AAC/F,MAAID,WAAW,KAAK,MAApB,EAA4B,OAAOH,aAAP;AAE5B,MAAIX,WAAW,CAACc,WAAD,CAAf,EAA8B,OAAOA,WAAP;;AAE9B,MAAIA,WAAW,KAAK,OAApB,EAA6B;AACzB,QAAI,CAACC,QAAL,EAAe;AACX,YAAM,IAAIC,KAAJ,CAAU,+DAAV,CAAN;AACH;;AAED,WAAO,UAAUR,CAAV,EAAaS,KAAb,EAAoB;AACvB,aAAOlB,IAAI,CAACkB,KAAD,EAAQF,QAAR,CAAX;AACH,KAFD;AAGH;;AAED,MAAID,WAAW,KAAK,SAApB,EAA+B,OAAOF,gBAAP;AAE/B,MAAIM,cAAc,GAAGJ,WAAW,CAACK,KAAZ,CAAkB,wCAAlB,CAArB;;AACA,MAAID,cAAJ,EAAoB;AAChB,QAAId,MAAM,GAAGc,cAAc,CAAC,CAAD,CAA3B;AACA,QAAIZ,MAAM,GAAGY,cAAc,CAAC,CAAD,CAA3B;AAEA,WAAOf,qBAAqB,CAACC,MAAD,EAASE,MAAT,CAA5B;AACH;;AAED,SAAO,YAAY;AACf,WAAOQ,WAAP;AACH,GAFD;AAGH,CA5BM","sourcesContent":["import _get from 'lodash/get';\nimport _isFunction from 'lodash/isFunction';\nimport _memoize from 'lodash/memoize'; /*\n                                        * This file is part of the nivo project.\n                                        *\n                                        * Copyright 2016-present, Raphaël Benitte.\n                                        *\n                                        * For the full copyright and license information, please view the LICENSE\n                                        * file that was distributed with this source code.\n                                        */\n\nimport { rgb } from 'd3-color';\n\n/**\n * Memoize both color generator & color generator result.\n */\nvar memoizedColorModifier = _memoize(function (method, _amount) {\n    var amount = parseFloat(_amount);\n\n    return _memoize(function (d) {\n        return rgb(d.color)[method](amount).toString();\n    }, function (d) {\n        return d.color;\n    });\n}, function (method, amount) {\n    return method + '.' + amount;\n});\n\nvar noneGenerator = function noneGenerator() {\n    return 'none';\n};\nvar inheritGenerator = function inheritGenerator(d) {\n    return d.color;\n};\n\n/**\n * @param {string|Function} instruction\n * @param {string}          [themeKey]\n * @return {Function}\n */\nexport var getInheritedColorGenerator = function getInheritedColorGenerator(instruction, themeKey) {\n    if (instruction === 'none') return noneGenerator;\n\n    if (_isFunction(instruction)) return instruction;\n\n    if (instruction === 'theme') {\n        if (!themeKey) {\n            throw new Error('Cannot use \\'theme\\' directive without providing \\'themeKey\\'');\n        }\n\n        return function (d, theme) {\n            return _get(theme, themeKey);\n        };\n    }\n\n    if (instruction === 'inherit') return inheritGenerator;\n\n    var inheritMatches = instruction.match(/inherit:(darker|brighter)\\(([0-9.]+)\\)/);\n    if (inheritMatches) {\n        var method = inheritMatches[1];\n        var amount = inheritMatches[2];\n\n        return memoizedColorModifier(method, amount);\n    }\n\n    return function () {\n        return instruction;\n    };\n};"]},"metadata":{},"sourceType":"module"}