{"ast":null,"code":"/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Computes distance between two points.\n *\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @return {number}\n */\nexport var getDistance = function getDistance(x1, y1, x2, y2) {\n  var deltaX = x2 - x1;\n  var deltaY = y2 - y1;\n  deltaX *= deltaX;\n  deltaY *= deltaY;\n  return Math.sqrt(deltaX + deltaY);\n};\n/**\n * Computes angle (radians) between two points.\n *\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @return {number}\n */\n\nexport var getAngle = function getAngle(x1, y1, x2, y2) {\n  var angle = Math.atan2(y2 - y1, x2 - x1) - Math.PI / 2;\n  return angle > 0 ? angle : Math.PI * 2 + angle;\n};\n/**\n * Check if cursor is in given rectangle.\n *\n * @param {number} x\n * @param {number} y\n * @param {number} width\n * @param {number} height\n * @param {number} cursorX\n * @param {number} cursorY\n * @return {boolean}\n */\n\nexport var isCursorInRect = function isCursorInRect(x, y, width, height, cursorX, cursorY) {\n  return x <= cursorX && cursorX <= x + width && y <= cursorY && cursorY <= y + height;\n};\n/**\n * Check if cursor is in given ring.\n *\n * @param {number} centerX\n * @param {number} centerY\n * @param {number} radius\n * @param {number} innerRadius\n * @param {number} cursorX\n * @param {number} cursorY\n * @return {boolean}\n */\n\nexport var isCursorInRing = function isCursorInRing(centerX, centerY, radius, innerRadius, cursorX, cursorY) {\n  var distance = getDistance(cursorX, cursorY, centerX, centerY);\n  return distance < radius && distance > innerRadius;\n};\n/**\n * Search for an arc being under cursor.\n *\n * @param {number}         centerX\n * @param {number}         centerY\n * @param {number}         radius\n * @param {number}         innerRadius\n * @param {Array.<Object>} arcs\n * @param {number}         cursorX\n * @param {number}         cursorY\n * @return {*}\n */\n\nexport var getHoveredArc = function getHoveredArc(centerX, centerY, radius, innerRadius, arcs, cursorX, cursorY) {\n  if (!isCursorInRing(centerX, centerY, radius, innerRadius, cursorX, cursorY)) return null;\n  var cursorAngle = getAngle(cursorX, cursorY, centerX, centerY);\n  return arcs.find(function (_ref) {\n    var startAngle = _ref.startAngle,\n        endAngle = _ref.endAngle;\n    return cursorAngle >= startAngle && cursorAngle < endAngle;\n  });\n};","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/lib/interactivity/detect.js"],"names":["getDistance","x1","y1","x2","y2","deltaX","deltaY","Math","sqrt","getAngle","angle","atan2","PI","isCursorInRect","x","y","width","height","cursorX","cursorY","isCursorInRing","centerX","centerY","radius","innerRadius","distance","getHoveredArc","arcs","cursorAngle","find","_ref","startAngle","endAngle"],"mappings":"AAAA;;;;;;;;;AASA;;;;;;;;;AASA,OAAO,IAAIA,WAAW,GAAG,SAASA,WAAT,CAAqBC,EAArB,EAAyBC,EAAzB,EAA6BC,EAA7B,EAAiCC,EAAjC,EAAqC;AAC5D,MAAIC,MAAM,GAAGF,EAAE,GAAGF,EAAlB;AACA,MAAIK,MAAM,GAAGF,EAAE,GAAGF,EAAlB;AAEAG,EAAAA,MAAM,IAAIA,MAAV;AACAC,EAAAA,MAAM,IAAIA,MAAV;AAEA,SAAOC,IAAI,CAACC,IAAL,CAAUH,MAAM,GAAGC,MAAnB,CAAP;AACD,CARM;AAUP;;;;;;;;;;AASA,OAAO,IAAIG,QAAQ,GAAG,SAASA,QAAT,CAAkBR,EAAlB,EAAsBC,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkC;AACtD,MAAIM,KAAK,GAAGH,IAAI,CAACI,KAAL,CAAWP,EAAE,GAAGF,EAAhB,EAAoBC,EAAE,GAAGF,EAAzB,IAA+BM,IAAI,CAACK,EAAL,GAAU,CAArD;AAEA,SAAOF,KAAK,GAAG,CAAR,GAAYA,KAAZ,GAAoBH,IAAI,CAACK,EAAL,GAAU,CAAV,GAAcF,KAAzC;AACD,CAJM;AAMP;;;;;;;;;;;;AAWA,OAAO,IAAIG,cAAc,GAAG,SAASA,cAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA8BC,KAA9B,EAAqCC,MAArC,EAA6CC,OAA7C,EAAsDC,OAAtD,EAA+D;AACzF,SAAOL,CAAC,IAAII,OAAL,IAAgBA,OAAO,IAAIJ,CAAC,GAAGE,KAA/B,IAAwCD,CAAC,IAAII,OAA7C,IAAwDA,OAAO,IAAIJ,CAAC,GAAGE,MAA9E;AACD,CAFM;AAIP;;;;;;;;;;;;AAWA,OAAO,IAAIG,cAAc,GAAG,SAASA,cAAT,CAAwBC,OAAxB,EAAiCC,OAAjC,EAA0CC,MAA1C,EAAkDC,WAAlD,EAA+DN,OAA/D,EAAwEC,OAAxE,EAAiF;AAC3G,MAAIM,QAAQ,GAAGzB,WAAW,CAACkB,OAAD,EAAUC,OAAV,EAAmBE,OAAnB,EAA4BC,OAA5B,CAA1B;AAEA,SAAOG,QAAQ,GAAGF,MAAX,IAAqBE,QAAQ,GAAGD,WAAvC;AACD,CAJM;AAMP;;;;;;;;;;;;;AAYA,OAAO,IAAIE,aAAa,GAAG,SAASA,aAAT,CAAuBL,OAAvB,EAAgCC,OAAhC,EAAyCC,MAAzC,EAAiDC,WAAjD,EAA8DG,IAA9D,EAAoET,OAApE,EAA6EC,OAA7E,EAAsF;AAC/G,MAAI,CAACC,cAAc,CAACC,OAAD,EAAUC,OAAV,EAAmBC,MAAnB,EAA2BC,WAA3B,EAAwCN,OAAxC,EAAiDC,OAAjD,CAAnB,EAA8E,OAAO,IAAP;AAE9E,MAAIS,WAAW,GAAGnB,QAAQ,CAACS,OAAD,EAAUC,OAAV,EAAmBE,OAAnB,EAA4BC,OAA5B,CAA1B;AAEA,SAAOK,IAAI,CAACE,IAAL,CAAU,UAAUC,IAAV,EAAgB;AAC/B,QAAIC,UAAU,GAAGD,IAAI,CAACC,UAAtB;AAAA,QACIC,QAAQ,GAAGF,IAAI,CAACE,QADpB;AAEA,WAAOJ,WAAW,IAAIG,UAAf,IAA6BH,WAAW,GAAGI,QAAlD;AACD,GAJM,CAAP;AAKD,CAVM","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Computes distance between two points.\n *\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @return {number}\n */\nexport var getDistance = function getDistance(x1, y1, x2, y2) {\n  var deltaX = x2 - x1;\n  var deltaY = y2 - y1;\n\n  deltaX *= deltaX;\n  deltaY *= deltaY;\n\n  return Math.sqrt(deltaX + deltaY);\n};\n\n/**\n * Computes angle (radians) between two points.\n *\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @return {number}\n */\nexport var getAngle = function getAngle(x1, y1, x2, y2) {\n  var angle = Math.atan2(y2 - y1, x2 - x1) - Math.PI / 2;\n\n  return angle > 0 ? angle : Math.PI * 2 + angle;\n};\n\n/**\n * Check if cursor is in given rectangle.\n *\n * @param {number} x\n * @param {number} y\n * @param {number} width\n * @param {number} height\n * @param {number} cursorX\n * @param {number} cursorY\n * @return {boolean}\n */\nexport var isCursorInRect = function isCursorInRect(x, y, width, height, cursorX, cursorY) {\n  return x <= cursorX && cursorX <= x + width && y <= cursorY && cursorY <= y + height;\n};\n\n/**\n * Check if cursor is in given ring.\n *\n * @param {number} centerX\n * @param {number} centerY\n * @param {number} radius\n * @param {number} innerRadius\n * @param {number} cursorX\n * @param {number} cursorY\n * @return {boolean}\n */\nexport var isCursorInRing = function isCursorInRing(centerX, centerY, radius, innerRadius, cursorX, cursorY) {\n  var distance = getDistance(cursorX, cursorY, centerX, centerY);\n\n  return distance < radius && distance > innerRadius;\n};\n\n/**\n * Search for an arc being under cursor.\n *\n * @param {number}         centerX\n * @param {number}         centerY\n * @param {number}         radius\n * @param {number}         innerRadius\n * @param {Array.<Object>} arcs\n * @param {number}         cursorX\n * @param {number}         cursorY\n * @return {*}\n */\nexport var getHoveredArc = function getHoveredArc(centerX, centerY, radius, innerRadius, arcs, cursorX, cursorY) {\n  if (!isCursorInRing(centerX, centerY, radius, innerRadius, cursorX, cursorY)) return null;\n\n  var cursorAngle = getAngle(cursorX, cursorY, centerX, centerY);\n\n  return arcs.find(function (_ref) {\n    var startAngle = _ref.startAngle,\n        endAngle = _ref.endAngle;\n    return cursorAngle >= startAngle && cursorAngle < endAngle;\n  });\n};"]},"metadata":{},"sourceType":"module"}