{"ast":null,"code":"/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nexport var degreesToRadians = function degreesToRadians(degrees) {\n  return degrees * Math.PI / 180;\n};\nexport var radiansToDegrees = function radiansToDegrees(radians) {\n  return 180 * radians / Math.PI;\n};\nexport var midAngle = function midAngle(arc) {\n  return arc.startAngle + (arc.endAngle - arc.startAngle) / 2;\n};\nexport var positionFromAngle = function positionFromAngle(angle, distance) {\n  return {\n    x: Math.cos(angle) * distance,\n    y: Math.sin(angle) * distance\n  };\n};","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/lib/polar/utils.js"],"names":["degreesToRadians","degrees","Math","PI","radiansToDegrees","radians","midAngle","arc","startAngle","endAngle","positionFromAngle","angle","distance","x","cos","y","sin"],"mappings":"AAAA;;;;;;;;AAQA,OAAO,IAAIA,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,OAA1B,EAAmC;AAC/D,SAAOA,OAAO,GAAGC,IAAI,CAACC,EAAf,GAAoB,GAA3B;AACD,CAFM;AAIP,OAAO,IAAIC,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,OAA1B,EAAmC;AAC/D,SAAO,MAAMA,OAAN,GAAgBH,IAAI,CAACC,EAA5B;AACD,CAFM;AAIP,OAAO,IAAIG,QAAQ,GAAG,SAASA,QAAT,CAAkBC,GAAlB,EAAuB;AAC3C,SAAOA,GAAG,CAACC,UAAJ,GAAiB,CAACD,GAAG,CAACE,QAAJ,GAAeF,GAAG,CAACC,UAApB,IAAkC,CAA1D;AACD,CAFM;AAIP,OAAO,IAAIE,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,KAA3B,EAAkCC,QAAlC,EAA4C;AACzE,SAAO;AACLC,IAAAA,CAAC,EAAEX,IAAI,CAACY,GAAL,CAASH,KAAT,IAAkBC,QADhB;AAELG,IAAAA,CAAC,EAAEb,IAAI,CAACc,GAAL,CAASL,KAAT,IAAkBC;AAFhB,GAAP;AAID,CALM","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nexport var degreesToRadians = function degreesToRadians(degrees) {\n  return degrees * Math.PI / 180;\n};\n\nexport var radiansToDegrees = function radiansToDegrees(radians) {\n  return 180 * radians / Math.PI;\n};\n\nexport var midAngle = function midAngle(arc) {\n  return arc.startAngle + (arc.endAngle - arc.startAngle) / 2;\n};\n\nexport var positionFromAngle = function positionFromAngle(angle, distance) {\n  return {\n    x: Math.cos(angle) * distance,\n    y: Math.sin(angle) * distance\n  };\n};"]},"metadata":{},"sourceType":"module"}