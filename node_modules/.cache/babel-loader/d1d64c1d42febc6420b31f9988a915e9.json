{"ast":null,"code":"/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport setPropTypes from 'recompose/setPropTypes';\nimport defaultProps from 'recompose/defaultProps';\nimport withPropsOnChange from 'recompose/withPropsOnChange';\nimport { getColorsGenerator } from '../lib/colors';\n/**\n * This HOC watch colors related props change\n * and returns the corresponding color generator function.\n * Using it prevent from having a new ref each time\n * we pass through the component, useful for shallow comparison.\n */\n\nexport default (function () {\n  var _defaultProps, _setPropTypes;\n\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$colorsKey = _ref.colorsKey,\n      colorsKey = _ref$colorsKey === undefined ? 'colors' : _ref$colorsKey,\n      _ref$colorByKey = _ref.colorByKey,\n      colorByKey = _ref$colorByKey === undefined ? 'colorBy' : _ref$colorByKey,\n      _ref$destKey = _ref.destKey,\n      destKey = _ref$destKey === undefined ? 'getColor' : _ref$destKey,\n      _ref$defaultColors = _ref.defaultColors,\n      defaultColors = _ref$defaultColors === undefined ? 'nivo' : _ref$defaultColors,\n      _ref$defaultColorBy = _ref.defaultColorBy,\n      defaultColorBy = _ref$defaultColorBy === undefined ? 'id' : _ref$defaultColorBy;\n\n  return compose(defaultProps((_defaultProps = {}, _defaultProps[colorsKey] = defaultColors, _defaultProps[colorByKey] = defaultColorBy, _defaultProps)), setPropTypes((_setPropTypes = {}, _setPropTypes[colorsKey] = PropTypes.any.isRequired, _setPropTypes[colorByKey] = PropTypes.oneOfType([PropTypes.string, PropTypes.func]), _setPropTypes)), withPropsOnChange([colorsKey, colorByKey], function (props) {\n    var _ref2;\n\n    return _ref2 = {}, _ref2[destKey] = getColorsGenerator(props[colorsKey], props[colorByKey]), _ref2;\n  }));\n});","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/hocs/withColors.js"],"names":["PropTypes","compose","setPropTypes","defaultProps","withPropsOnChange","getColorsGenerator","_defaultProps","_setPropTypes","_ref","arguments","length","undefined","_ref$colorsKey","colorsKey","_ref$colorByKey","colorByKey","_ref$destKey","destKey","_ref$defaultColors","defaultColors","_ref$defaultColorBy","defaultColorBy","any","isRequired","oneOfType","string","func","props","_ref2"],"mappings":"AAAA;;;;;;;;AAQA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,SAASC,kBAAT,QAAmC,eAAnC;AAEA;;;;;;;AAMA,gBAAgB,YAAY;AACxB,MAAIC,aAAJ,EAAmBC,aAAnB;;AAEA,MAAIC,IAAI,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E;AAAA,MACIG,cAAc,GAAGJ,IAAI,CAACK,SAD1B;AAAA,MAEIA,SAAS,GAAGD,cAAc,KAAKD,SAAnB,GAA+B,QAA/B,GAA0CC,cAF1D;AAAA,MAGIE,eAAe,GAAGN,IAAI,CAACO,UAH3B;AAAA,MAIIA,UAAU,GAAGD,eAAe,KAAKH,SAApB,GAAgC,SAAhC,GAA4CG,eAJ7D;AAAA,MAKIE,YAAY,GAAGR,IAAI,CAACS,OALxB;AAAA,MAMIA,OAAO,GAAGD,YAAY,KAAKL,SAAjB,GAA6B,UAA7B,GAA0CK,YANxD;AAAA,MAOIE,kBAAkB,GAAGV,IAAI,CAACW,aAP9B;AAAA,MAQIA,aAAa,GAAGD,kBAAkB,KAAKP,SAAvB,GAAmC,MAAnC,GAA4CO,kBARhE;AAAA,MASIE,mBAAmB,GAAGZ,IAAI,CAACa,cAT/B;AAAA,MAUIA,cAAc,GAAGD,mBAAmB,KAAKT,SAAxB,GAAoC,IAApC,GAA2CS,mBAVhE;;AAYA,SAAOnB,OAAO,CAACE,YAAY,EAAEG,aAAa,GAAG,EAAhB,EAAoBA,aAAa,CAACO,SAAD,CAAb,GAA2BM,aAA/C,EAA8Db,aAAa,CAACS,UAAD,CAAb,GAA4BM,cAA1F,EAA0Gf,aAA5G,EAAb,EAA0IJ,YAAY,EAAEK,aAAa,GAAG,EAAhB,EAAoBA,aAAa,CAACM,SAAD,CAAb,GAA2Bb,SAAS,CAACsB,GAAV,CAAcC,UAA7D,EAAyEhB,aAAa,CAACQ,UAAD,CAAb,GAA4Bf,SAAS,CAACwB,SAAV,CAAoB,CAACxB,SAAS,CAACyB,MAAX,EAAmBzB,SAAS,CAAC0B,IAA7B,CAApB,CAArG,EAA8JnB,aAAhK,EAAtJ,EAAuUH,iBAAiB,CAAC,CAACS,SAAD,EAAYE,UAAZ,CAAD,EAA0B,UAAUY,KAAV,EAAiB;AAC7Y,QAAIC,KAAJ;;AAEA,WAAOA,KAAK,GAAG,EAAR,EAAYA,KAAK,CAACX,OAAD,CAAL,GAAiBZ,kBAAkB,CAACsB,KAAK,CAACd,SAAD,CAAN,EAAmBc,KAAK,CAACZ,UAAD,CAAxB,CAA/C,EAAsFa,KAA7F;AACH,GAJqW,CAAxV,CAAd;AAKH,CApBD","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport setPropTypes from 'recompose/setPropTypes';\nimport defaultProps from 'recompose/defaultProps';\nimport withPropsOnChange from 'recompose/withPropsOnChange';\nimport { getColorsGenerator } from '../lib/colors';\n\n/**\n * This HOC watch colors related props change\n * and returns the corresponding color generator function.\n * Using it prevent from having a new ref each time\n * we pass through the component, useful for shallow comparison.\n */\nexport default (function () {\n    var _defaultProps, _setPropTypes;\n\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$colorsKey = _ref.colorsKey,\n        colorsKey = _ref$colorsKey === undefined ? 'colors' : _ref$colorsKey,\n        _ref$colorByKey = _ref.colorByKey,\n        colorByKey = _ref$colorByKey === undefined ? 'colorBy' : _ref$colorByKey,\n        _ref$destKey = _ref.destKey,\n        destKey = _ref$destKey === undefined ? 'getColor' : _ref$destKey,\n        _ref$defaultColors = _ref.defaultColors,\n        defaultColors = _ref$defaultColors === undefined ? 'nivo' : _ref$defaultColors,\n        _ref$defaultColorBy = _ref.defaultColorBy,\n        defaultColorBy = _ref$defaultColorBy === undefined ? 'id' : _ref$defaultColorBy;\n\n    return compose(defaultProps((_defaultProps = {}, _defaultProps[colorsKey] = defaultColors, _defaultProps[colorByKey] = defaultColorBy, _defaultProps)), setPropTypes((_setPropTypes = {}, _setPropTypes[colorsKey] = PropTypes.any.isRequired, _setPropTypes[colorByKey] = PropTypes.oneOfType([PropTypes.string, PropTypes.func]), _setPropTypes)), withPropsOnChange([colorsKey, colorByKey], function (props) {\n        var _ref2;\n\n        return _ref2 = {}, _ref2[destKey] = getColorsGenerator(props[colorsKey], props[colorByKey]), _ref2;\n    }));\n});"]},"metadata":{},"sourceType":"module"}