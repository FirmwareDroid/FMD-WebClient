{"ast":null,"code":"import _isFunction from 'lodash/isFunction';\nimport _isArray from 'lodash/isArray';\nimport _last from 'lodash/last';\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { scaleQuantize } from 'd3-scale';\nimport { // Diverging\nschemeBrBG, schemePRGn, schemePiYG, schemePuOr, schemeRdBu, schemeRdGy, schemeRdYlBu, schemeRdYlGn, schemeSpectral // Sequential (Single Hue)\n, schemeBlues, schemeGreens, schemeGreys, schemeOranges, schemePurples, schemeReds // Sequential (Multi-Hue)\n, schemeBuGn, schemeBuPu, schemeGnBu, schemeOrRd, schemePuBuGn, schemePuBu, schemePuRd, schemeRdPu, schemeYlGnBu, schemeYlGn, schemeYlOrBr, schemeYlOrRd } from 'd3-scale-chromatic';\nexport var quantizeColorScales = {\n  nivo: ['#d76445', '#f47560', '#e8c1a0', '#97e3d5', '#61cdbb', '#00b0a7'],\n  // Diverging\n  BrBG: _last(schemeBrBG),\n  PRGn: _last(schemePRGn),\n  PiYG: _last(schemePiYG),\n  PuOr: _last(schemePuOr),\n  RdBu: _last(schemeRdBu),\n  RdGy: _last(schemeRdGy),\n  RdYlBu: _last(schemeRdYlBu),\n  RdYlGn: _last(schemeRdYlGn),\n  spectral: _last(schemeSpectral),\n  // Sequential (Single Hue)\n  blues: _last(schemeBlues),\n  greens: _last(schemeGreens),\n  greys: _last(schemeGreys),\n  oranges: _last(schemeOranges),\n  purples: _last(schemePurples),\n  reds: _last(schemeReds),\n  // Sequential (Multi-Hue)\n  BuGn: _last(schemeBuGn),\n  BuPu: _last(schemeBuPu),\n  GnBu: _last(schemeGnBu),\n  OrRd: _last(schemeOrRd),\n  PuBuGn: _last(schemePuBuGn),\n  PuBu: _last(schemePuBu),\n  PuRd: _last(schemePuRd),\n  RdPu: _last(schemeRdPu),\n  YlGnBu: _last(schemeYlGnBu),\n  YlGn: _last(schemeYlGn),\n  YlOrBr: _last(schemeYlOrBr),\n  YlOrRd: _last(schemeYlOrRd)\n};\nexport var quantizeColorScalesKeys = Object.keys(quantizeColorScales);\nexport var guessQuantizeColorScale = function guessQuantizeColorScale(colors) {\n  // colors is already a valid scale\n  if (_isFunction(colors)) {\n    if (!_isFunction(colors.domain)) {\n      throw new Error('Provided colors should be a valid quantize scale providing a \\'domain()\\' function');\n    }\n\n    return colors;\n  }\n\n  if (quantizeColorScales[colors]) {\n    // use predefined d3 quantize color scale\n    return scaleQuantize().range(quantizeColorScales[colors]);\n  } // user defined colors\n\n\n  if (_isArray(colors)) return scaleQuantize().range(colors);\n  throw new Error('Unable to guess quantize color scale from \\'' + colors + '\\',\\nmust be a function or one of:\\n\\'' + quantizeColorScalesKeys.join('\\', \\'') + '\\'');\n};","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/lib/colors/quantize.js"],"names":["_isFunction","_isArray","_last","scaleQuantize","schemeBrBG","schemePRGn","schemePiYG","schemePuOr","schemeRdBu","schemeRdGy","schemeRdYlBu","schemeRdYlGn","schemeSpectral","schemeBlues","schemeGreens","schemeGreys","schemeOranges","schemePurples","schemeReds","schemeBuGn","schemeBuPu","schemeGnBu","schemeOrRd","schemePuBuGn","schemePuBu","schemePuRd","schemeRdPu","schemeYlGnBu","schemeYlGn","schemeYlOrBr","schemeYlOrRd","quantizeColorScales","nivo","BrBG","PRGn","PiYG","PuOr","RdBu","RdGy","RdYlBu","RdYlGn","spectral","blues","greens","greys","oranges","purples","reds","BuGn","BuPu","GnBu","OrRd","PuBuGn","PuBu","PuRd","RdPu","YlGnBu","YlGn","YlOrBr","YlOrRd","quantizeColorScalesKeys","Object","keys","guessQuantizeColorScale","colors","domain","Error","range","join"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAAiC;;;;;;;;;AASjC,SAASC,aAAT,QAA8B,UAA9B;AACA,SACA;AACAC,UAFA,EAEYC,UAFZ,EAEwBC,UAFxB,EAEoCC,UAFpC,EAEgDC,UAFhD,EAE4DC,UAF5D,EAEwEC,YAFxE,EAEsFC,YAFtF,EAEoGC,cAFpG,CAIA;AAJA,EAKAC,WALA,EAKaC,YALb,EAK2BC,WAL3B,EAKwCC,aALxC,EAKuDC,aALvD,EAKsEC,UALtE,CAOA;AAPA,EAQAC,UARA,EAQYC,UARZ,EAQwBC,UARxB,EAQoCC,UARpC,EAQgDC,YARhD,EAQ8DC,UAR9D,EAQ0EC,UAR1E,EAQsFC,UARtF,EAQkGC,YARlG,EAQgHC,UARhH,EAQ4HC,YAR5H,EAQ0IC,YAR1I,QAQ8J,oBAR9J;AAUA,OAAO,IAAIC,mBAAmB,GAAG;AAC7BC,EAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,CADuB;AAG7B;AACAC,EAAAA,IAAI,EAAE/B,KAAK,CAACE,UAAD,CAJkB;AAK7B8B,EAAAA,IAAI,EAAEhC,KAAK,CAACG,UAAD,CALkB;AAM7B8B,EAAAA,IAAI,EAAEjC,KAAK,CAACI,UAAD,CANkB;AAO7B8B,EAAAA,IAAI,EAAElC,KAAK,CAACK,UAAD,CAPkB;AAQ7B8B,EAAAA,IAAI,EAAEnC,KAAK,CAACM,UAAD,CARkB;AAS7B8B,EAAAA,IAAI,EAAEpC,KAAK,CAACO,UAAD,CATkB;AAU7B8B,EAAAA,MAAM,EAAErC,KAAK,CAACQ,YAAD,CAVgB;AAW7B8B,EAAAA,MAAM,EAAEtC,KAAK,CAACS,YAAD,CAXgB;AAY7B8B,EAAAA,QAAQ,EAAEvC,KAAK,CAACU,cAAD,CAZc;AAc7B;AACA8B,EAAAA,KAAK,EAAExC,KAAK,CAACW,WAAD,CAfiB;AAgB7B8B,EAAAA,MAAM,EAAEzC,KAAK,CAACY,YAAD,CAhBgB;AAiB7B8B,EAAAA,KAAK,EAAE1C,KAAK,CAACa,WAAD,CAjBiB;AAkB7B8B,EAAAA,OAAO,EAAE3C,KAAK,CAACc,aAAD,CAlBe;AAmB7B8B,EAAAA,OAAO,EAAE5C,KAAK,CAACe,aAAD,CAnBe;AAoB7B8B,EAAAA,IAAI,EAAE7C,KAAK,CAACgB,UAAD,CApBkB;AAsB7B;AACA8B,EAAAA,IAAI,EAAE9C,KAAK,CAACiB,UAAD,CAvBkB;AAwB7B8B,EAAAA,IAAI,EAAE/C,KAAK,CAACkB,UAAD,CAxBkB;AAyB7B8B,EAAAA,IAAI,EAAEhD,KAAK,CAACmB,UAAD,CAzBkB;AA0B7B8B,EAAAA,IAAI,EAAEjD,KAAK,CAACoB,UAAD,CA1BkB;AA2B7B8B,EAAAA,MAAM,EAAElD,KAAK,CAACqB,YAAD,CA3BgB;AA4B7B8B,EAAAA,IAAI,EAAEnD,KAAK,CAACsB,UAAD,CA5BkB;AA6B7B8B,EAAAA,IAAI,EAAEpD,KAAK,CAACuB,UAAD,CA7BkB;AA8B7B8B,EAAAA,IAAI,EAAErD,KAAK,CAACwB,UAAD,CA9BkB;AA+B7B8B,EAAAA,MAAM,EAAEtD,KAAK,CAACyB,YAAD,CA/BgB;AAgC7B8B,EAAAA,IAAI,EAAEvD,KAAK,CAAC0B,UAAD,CAhCkB;AAiC7B8B,EAAAA,MAAM,EAAExD,KAAK,CAAC2B,YAAD,CAjCgB;AAkC7B8B,EAAAA,MAAM,EAAEzD,KAAK,CAAC4B,YAAD;AAlCgB,CAA1B;AAqCP,OAAO,IAAI8B,uBAAuB,GAAGC,MAAM,CAACC,IAAP,CAAY/B,mBAAZ,CAA9B;AAEP,OAAO,IAAIgC,uBAAuB,GAAG,SAASA,uBAAT,CAAiCC,MAAjC,EAAyC;AAC1E;AACA,MAAIhE,WAAW,CAACgE,MAAD,CAAf,EAAyB;AACrB,QAAI,CAAChE,WAAW,CAACgE,MAAM,CAACC,MAAR,CAAhB,EAAiC;AAC7B,YAAM,IAAIC,KAAJ,CAAU,oFAAV,CAAN;AACH;;AAED,WAAOF,MAAP;AACH;;AAED,MAAIjC,mBAAmB,CAACiC,MAAD,CAAvB,EAAiC;AAC7B;AACA,WAAO7D,aAAa,GAAGgE,KAAhB,CAAsBpC,mBAAmB,CAACiC,MAAD,CAAzC,CAAP;AACH,GAbyE,CAe1E;;;AACA,MAAI/D,QAAQ,CAAC+D,MAAD,CAAZ,EAAsB,OAAO7D,aAAa,GAAGgE,KAAhB,CAAsBH,MAAtB,CAAP;AAEtB,QAAM,IAAIE,KAAJ,CAAU,iDAAiDF,MAAjD,GAA0D,wCAA1D,GAAqGJ,uBAAuB,CAACQ,IAAxB,CAA6B,QAA7B,CAArG,GAA8I,IAAxJ,CAAN;AACH,CAnBM","sourcesContent":["import _isFunction from 'lodash/isFunction';\nimport _isArray from 'lodash/isArray';\nimport _last from 'lodash/last'; /*\n                                  * This file is part of the nivo project.\n                                  *\n                                  * Copyright 2016-present, Raphaël Benitte.\n                                  *\n                                  * For the full copyright and license information, please view the LICENSE\n                                  * file that was distributed with this source code.\n                                  */\n\nimport { scaleQuantize } from 'd3-scale';\nimport {\n// Diverging\nschemeBrBG, schemePRGn, schemePiYG, schemePuOr, schemeRdBu, schemeRdGy, schemeRdYlBu, schemeRdYlGn, schemeSpectral,\n\n// Sequential (Single Hue)\nschemeBlues, schemeGreens, schemeGreys, schemeOranges, schemePurples, schemeReds,\n\n// Sequential (Multi-Hue)\nschemeBuGn, schemeBuPu, schemeGnBu, schemeOrRd, schemePuBuGn, schemePuBu, schemePuRd, schemeRdPu, schemeYlGnBu, schemeYlGn, schemeYlOrBr, schemeYlOrRd } from 'd3-scale-chromatic';\n\nexport var quantizeColorScales = {\n    nivo: ['#d76445', '#f47560', '#e8c1a0', '#97e3d5', '#61cdbb', '#00b0a7'],\n\n    // Diverging\n    BrBG: _last(schemeBrBG),\n    PRGn: _last(schemePRGn),\n    PiYG: _last(schemePiYG),\n    PuOr: _last(schemePuOr),\n    RdBu: _last(schemeRdBu),\n    RdGy: _last(schemeRdGy),\n    RdYlBu: _last(schemeRdYlBu),\n    RdYlGn: _last(schemeRdYlGn),\n    spectral: _last(schemeSpectral),\n\n    // Sequential (Single Hue)\n    blues: _last(schemeBlues),\n    greens: _last(schemeGreens),\n    greys: _last(schemeGreys),\n    oranges: _last(schemeOranges),\n    purples: _last(schemePurples),\n    reds: _last(schemeReds),\n\n    // Sequential (Multi-Hue)\n    BuGn: _last(schemeBuGn),\n    BuPu: _last(schemeBuPu),\n    GnBu: _last(schemeGnBu),\n    OrRd: _last(schemeOrRd),\n    PuBuGn: _last(schemePuBuGn),\n    PuBu: _last(schemePuBu),\n    PuRd: _last(schemePuRd),\n    RdPu: _last(schemeRdPu),\n    YlGnBu: _last(schemeYlGnBu),\n    YlGn: _last(schemeYlGn),\n    YlOrBr: _last(schemeYlOrBr),\n    YlOrRd: _last(schemeYlOrRd)\n};\n\nexport var quantizeColorScalesKeys = Object.keys(quantizeColorScales);\n\nexport var guessQuantizeColorScale = function guessQuantizeColorScale(colors) {\n    // colors is already a valid scale\n    if (_isFunction(colors)) {\n        if (!_isFunction(colors.domain)) {\n            throw new Error('Provided colors should be a valid quantize scale providing a \\'domain()\\' function');\n        }\n\n        return colors;\n    }\n\n    if (quantizeColorScales[colors]) {\n        // use predefined d3 quantize color scale\n        return scaleQuantize().range(quantizeColorScales[colors]);\n    }\n\n    // user defined colors\n    if (_isArray(colors)) return scaleQuantize().range(colors);\n\n    throw new Error('Unable to guess quantize color scale from \\'' + colors + '\\',\\nmust be a function or one of:\\n\\'' + quantizeColorScalesKeys.join('\\', \\'') + '\\'');\n};"]},"metadata":{},"sourceType":"module"}