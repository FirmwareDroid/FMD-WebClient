{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n\nimport React from 'react';\nimport { TransitionMotion, spring } from 'react-motion';\nimport { colorMotionSpring, getInterpolatedColor } from '../../../lib/colors';\nimport Container from '../Container';\nimport enhance from './enhance';\nimport { nodeWillEnter, nodeWillLeave } from './motion';\nimport { getNodeHandlers } from './interactivity';\nimport SvgWrapper from '../SvgWrapper';\n\nvar TreeMap = function TreeMap(_ref) {\n  var nodes = _ref.nodes,\n      nodeComponent = _ref.nodeComponent,\n      margin = _ref.margin,\n      outerWidth = _ref.outerWidth,\n      outerHeight = _ref.outerHeight,\n      theme = _ref.theme,\n      borderWidth = _ref.borderWidth,\n      getBorderColor = _ref.getBorderColor,\n      defs = _ref.defs,\n      getLabelTextColor = _ref.getLabelTextColor,\n      orientLabel = _ref.orientLabel,\n      animate = _ref.animate,\n      motionStiffness = _ref.motionStiffness,\n      motionDamping = _ref.motionDamping,\n      isInteractive = _ref.isInteractive,\n      onClick = _ref.onClick;\n  var springConfig = {\n    stiffness: motionStiffness,\n    damping: motionDamping\n  };\n\n  var getHandlers = function getHandlers(node, showTooltip, hideTooltip) {\n    return getNodeHandlers(node, {\n      isInteractive: isInteractive,\n      onClick: onClick,\n      showTooltip: showTooltip,\n      hideTooltip: hideTooltip,\n      theme: theme\n    });\n  };\n\n  return React.createElement(Container, {\n    isInteractive: isInteractive,\n    theme: theme\n  }, function (_ref2) {\n    var showTooltip = _ref2.showTooltip,\n        hideTooltip = _ref2.hideTooltip;\n    return React.createElement(SvgWrapper, {\n      width: outerWidth,\n      height: outerHeight,\n      margin: margin,\n      defs: defs\n    }, !animate && React.createElement('g', null, nodes.map(function (node) {\n      return React.createElement(nodeComponent, {\n        key: node.path,\n        node: node,\n        style: {\n          fill: node.fill,\n          x: node.x0,\n          y: node.y0,\n          width: node.width,\n          height: node.height,\n          color: node.color,\n          borderWidth: borderWidth,\n          borderColor: getBorderColor(node),\n          labelTextColor: getLabelTextColor(node),\n          orientLabel: orientLabel\n        },\n        handlers: getHandlers(node, showTooltip, hideTooltip)\n      });\n    })), animate && React.createElement(TransitionMotion, {\n      willEnter: nodeWillEnter,\n      willLeave: nodeWillLeave(springConfig),\n      styles: nodes.map(function (node) {\n        return {\n          key: node.path,\n          data: node,\n          style: _extends({\n            x: spring(node.x, springConfig),\n            y: spring(node.y, springConfig),\n            width: spring(node.width, springConfig),\n            height: spring(node.height, springConfig)\n          }, colorMotionSpring(node.color, springConfig))\n        };\n      })\n    }, function (interpolatedStyles) {\n      return React.createElement('g', null, interpolatedStyles.map(function (_ref3) {\n        var style = _ref3.style,\n            node = _ref3.data;\n        style.color = getInterpolatedColor(style);\n        return React.createElement(nodeComponent, {\n          key: node.path,\n          node: node,\n          style: _extends({}, style, {\n            fill: node.fill,\n            borderWidth: borderWidth,\n            borderColor: getBorderColor(style),\n            labelTextColor: getLabelTextColor(style),\n            orientLabel: orientLabel\n          }),\n          handlers: getHandlers(node, showTooltip, hideTooltip)\n        });\n      }));\n    }));\n  });\n};\n\nTreeMap.displayName = 'TreeMap';\nexport default enhance(TreeMap);","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/components/charts/treemap/TreeMap.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","React","TransitionMotion","spring","colorMotionSpring","getInterpolatedColor","Container","enhance","nodeWillEnter","nodeWillLeave","getNodeHandlers","SvgWrapper","TreeMap","_ref","nodes","nodeComponent","margin","outerWidth","outerHeight","theme","borderWidth","getBorderColor","defs","getLabelTextColor","orientLabel","animate","motionStiffness","motionDamping","isInteractive","onClick","springConfig","stiffness","damping","getHandlers","node","showTooltip","hideTooltip","createElement","_ref2","width","height","map","path","style","fill","x","x0","y","y0","color","borderColor","labelTextColor","handlers","willEnter","willLeave","styles","data","interpolatedStyles","_ref3","displayName"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react';\nimport { TransitionMotion, spring } from 'react-motion';\nimport { colorMotionSpring, getInterpolatedColor } from '../../../lib/colors';\nimport Container from '../Container';\nimport enhance from './enhance';\nimport { nodeWillEnter, nodeWillLeave } from './motion';\nimport { getNodeHandlers } from './interactivity';\nimport SvgWrapper from '../SvgWrapper';\n\nvar TreeMap = function TreeMap(_ref) {\n    var nodes = _ref.nodes,\n        nodeComponent = _ref.nodeComponent,\n        margin = _ref.margin,\n        outerWidth = _ref.outerWidth,\n        outerHeight = _ref.outerHeight,\n        theme = _ref.theme,\n        borderWidth = _ref.borderWidth,\n        getBorderColor = _ref.getBorderColor,\n        defs = _ref.defs,\n        getLabelTextColor = _ref.getLabelTextColor,\n        orientLabel = _ref.orientLabel,\n        animate = _ref.animate,\n        motionStiffness = _ref.motionStiffness,\n        motionDamping = _ref.motionDamping,\n        isInteractive = _ref.isInteractive,\n        onClick = _ref.onClick;\n\n    var springConfig = {\n        stiffness: motionStiffness,\n        damping: motionDamping\n    };\n\n    var getHandlers = function getHandlers(node, showTooltip, hideTooltip) {\n        return getNodeHandlers(node, {\n            isInteractive: isInteractive,\n            onClick: onClick,\n            showTooltip: showTooltip,\n            hideTooltip: hideTooltip,\n            theme: theme\n        });\n    };\n\n    return React.createElement(\n        Container,\n        { isInteractive: isInteractive, theme: theme },\n        function (_ref2) {\n            var showTooltip = _ref2.showTooltip,\n                hideTooltip = _ref2.hideTooltip;\n            return React.createElement(\n                SvgWrapper,\n                { width: outerWidth, height: outerHeight, margin: margin, defs: defs },\n                !animate && React.createElement(\n                    'g',\n                    null,\n                    nodes.map(function (node) {\n                        return React.createElement(nodeComponent, {\n                            key: node.path,\n                            node: node,\n                            style: {\n                                fill: node.fill,\n                                x: node.x0,\n                                y: node.y0,\n                                width: node.width,\n                                height: node.height,\n                                color: node.color,\n                                borderWidth: borderWidth,\n                                borderColor: getBorderColor(node),\n                                labelTextColor: getLabelTextColor(node),\n                                orientLabel: orientLabel\n                            },\n                            handlers: getHandlers(node, showTooltip, hideTooltip)\n                        });\n                    })\n                ),\n                animate && React.createElement(\n                    TransitionMotion,\n                    {\n                        willEnter: nodeWillEnter,\n                        willLeave: nodeWillLeave(springConfig),\n                        styles: nodes.map(function (node) {\n                            return {\n                                key: node.path,\n                                data: node,\n                                style: _extends({\n                                    x: spring(node.x, springConfig),\n                                    y: spring(node.y, springConfig),\n                                    width: spring(node.width, springConfig),\n                                    height: spring(node.height, springConfig)\n                                }, colorMotionSpring(node.color, springConfig))\n                            };\n                        })\n                    },\n                    function (interpolatedStyles) {\n                        return React.createElement(\n                            'g',\n                            null,\n                            interpolatedStyles.map(function (_ref3) {\n                                var style = _ref3.style,\n                                    node = _ref3.data;\n\n                                style.color = getInterpolatedColor(style);\n\n                                return React.createElement(nodeComponent, {\n                                    key: node.path,\n                                    node: node,\n                                    style: _extends({}, style, {\n                                        fill: node.fill,\n                                        borderWidth: borderWidth,\n                                        borderColor: getBorderColor(style),\n                                        labelTextColor: getLabelTextColor(style),\n                                        orientLabel: orientLabel\n                                    }),\n                                    handlers: getHandlers(node, showTooltip, hideTooltip)\n                                });\n                            })\n                        );\n                    }\n                )\n            );\n        }\n    );\n};\n\nTreeMap.displayName = 'TreeMap';\n\nexport default enhance(TreeMap);"]},"metadata":{},"sourceType":"module"}