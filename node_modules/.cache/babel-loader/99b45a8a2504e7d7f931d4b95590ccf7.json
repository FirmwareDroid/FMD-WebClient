{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n\nimport React from 'react';\nimport { TransitionMotion, spring } from 'react-motion';\nimport pick from 'lodash/pick';\nimport { colorMotionSpring, getInterpolatedColor } from '../../../lib/colors';\nimport Container from '../Container';\nimport enhance from './enhance';\nimport { nodeWillEnter, nodeWillLeave } from './motion';\nimport { getNodeHandlers } from './interactivity';\nimport SvgWrapper from '../SvgWrapper';\n\nvar Bubble = function Bubble(_ref) {\n  var nodes = _ref.nodes,\n      nodeComponent = _ref.nodeComponent,\n      margin = _ref.margin,\n      outerWidth = _ref.outerWidth,\n      outerHeight = _ref.outerHeight,\n      theme = _ref.theme,\n      borderWidth = _ref.borderWidth,\n      getBorderColor = _ref.getBorderColor,\n      defs = _ref.defs,\n      getLabelTextColor = _ref.getLabelTextColor,\n      animate = _ref.animate,\n      motionStiffness = _ref.motionStiffness,\n      motionDamping = _ref.motionDamping,\n      isInteractive = _ref.isInteractive,\n      onClick = _ref.onClick,\n      tooltipFormat = _ref.tooltipFormat,\n      isZoomable = _ref.isZoomable,\n      zoomToNode = _ref.zoomToNode;\n  var springConfig = {\n    stiffness: motionStiffness,\n    damping: motionDamping\n  };\n\n  var getHandlers = function getHandlers(node, showTooltip, hideTooltip) {\n    return getNodeHandlers(node, {\n      isInteractive: isInteractive,\n      onClick: onClick,\n      showTooltip: showTooltip,\n      hideTooltip: hideTooltip,\n      isZoomable: isZoomable,\n      zoomToNode: zoomToNode,\n      theme: theme,\n      tooltipFormat: tooltipFormat\n    });\n  };\n\n  return React.createElement(Container, {\n    isInteractive: isInteractive,\n    theme: theme\n  }, function (_ref2) {\n    var showTooltip = _ref2.showTooltip,\n        hideTooltip = _ref2.hideTooltip;\n    return React.createElement(SvgWrapper, {\n      width: outerWidth,\n      height: outerHeight,\n      margin: margin,\n      defs: defs\n    }, !animate && React.createElement('g', null, nodes.map(function (node) {\n      return React.createElement(nodeComponent, {\n        key: node.path,\n        node: node,\n        style: _extends({}, pick(node, ['scale', 'r', 'x', 'y', 'color']), {\n          fill: node.fill,\n          borderWidth: borderWidth,\n          borderColor: getBorderColor(node),\n          labelTextColor: getLabelTextColor(node)\n        }),\n        handlers: getHandlers(node, showTooltip, hideTooltip)\n      });\n    })), animate && React.createElement(TransitionMotion, {\n      willEnter: nodeWillEnter,\n      willLeave: nodeWillLeave(springConfig),\n      styles: nodes.map(function (node) {\n        return {\n          key: node.path,\n          data: node,\n          style: _extends({\n            scale: spring(1, springConfig),\n            r: spring(node.r, springConfig),\n            x: spring(node.x, springConfig),\n            y: spring(node.y, springConfig),\n            opacity: spring(1, springConfig)\n          }, colorMotionSpring(node.color, springConfig))\n        };\n      })\n    }, function (interpolatedStyles) {\n      return React.createElement('g', null, interpolatedStyles.map(function (_ref3) {\n        var style = _ref3.style,\n            node = _ref3.data;\n        style.color = getInterpolatedColor(style);\n        return React.createElement(nodeComponent, {\n          key: node.path,\n          node: node,\n          style: _extends({}, style, {\n            fill: node.fill,\n            borderWidth: borderWidth,\n            borderColor: getBorderColor(style),\n            labelTextColor: getLabelTextColor(style)\n          }),\n          handlers: getHandlers(node, showTooltip, hideTooltip)\n        });\n      }));\n    }));\n  });\n};\n\nBubble.displayName = 'Bubble';\nexport default enhance(Bubble);","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/components/charts/bubble/Bubble.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","React","TransitionMotion","spring","pick","colorMotionSpring","getInterpolatedColor","Container","enhance","nodeWillEnter","nodeWillLeave","getNodeHandlers","SvgWrapper","Bubble","_ref","nodes","nodeComponent","margin","outerWidth","outerHeight","theme","borderWidth","getBorderColor","defs","getLabelTextColor","animate","motionStiffness","motionDamping","isInteractive","onClick","tooltipFormat","isZoomable","zoomToNode","springConfig","stiffness","damping","getHandlers","node","showTooltip","hideTooltip","createElement","_ref2","width","height","map","path","style","fill","borderColor","labelTextColor","handlers","willEnter","willLeave","styles","data","scale","r","x","y","opacity","color","interpolatedStyles","_ref3","displayName"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react';\nimport { TransitionMotion, spring } from 'react-motion';\nimport pick from 'lodash/pick';\nimport { colorMotionSpring, getInterpolatedColor } from '../../../lib/colors';\nimport Container from '../Container';\nimport enhance from './enhance';\nimport { nodeWillEnter, nodeWillLeave } from './motion';\nimport { getNodeHandlers } from './interactivity';\nimport SvgWrapper from '../SvgWrapper';\n\nvar Bubble = function Bubble(_ref) {\n    var nodes = _ref.nodes,\n        nodeComponent = _ref.nodeComponent,\n        margin = _ref.margin,\n        outerWidth = _ref.outerWidth,\n        outerHeight = _ref.outerHeight,\n        theme = _ref.theme,\n        borderWidth = _ref.borderWidth,\n        getBorderColor = _ref.getBorderColor,\n        defs = _ref.defs,\n        getLabelTextColor = _ref.getLabelTextColor,\n        animate = _ref.animate,\n        motionStiffness = _ref.motionStiffness,\n        motionDamping = _ref.motionDamping,\n        isInteractive = _ref.isInteractive,\n        onClick = _ref.onClick,\n        tooltipFormat = _ref.tooltipFormat,\n        isZoomable = _ref.isZoomable,\n        zoomToNode = _ref.zoomToNode;\n\n    var springConfig = {\n        stiffness: motionStiffness,\n        damping: motionDamping\n    };\n\n    var getHandlers = function getHandlers(node, showTooltip, hideTooltip) {\n        return getNodeHandlers(node, {\n            isInteractive: isInteractive,\n            onClick: onClick,\n            showTooltip: showTooltip,\n            hideTooltip: hideTooltip,\n            isZoomable: isZoomable,\n            zoomToNode: zoomToNode,\n            theme: theme,\n            tooltipFormat: tooltipFormat\n        });\n    };\n\n    return React.createElement(\n        Container,\n        { isInteractive: isInteractive, theme: theme },\n        function (_ref2) {\n            var showTooltip = _ref2.showTooltip,\n                hideTooltip = _ref2.hideTooltip;\n            return React.createElement(\n                SvgWrapper,\n                { width: outerWidth, height: outerHeight, margin: margin, defs: defs },\n                !animate && React.createElement(\n                    'g',\n                    null,\n                    nodes.map(function (node) {\n                        return React.createElement(nodeComponent, {\n                            key: node.path,\n                            node: node,\n                            style: _extends({}, pick(node, ['scale', 'r', 'x', 'y', 'color']), {\n                                fill: node.fill,\n                                borderWidth: borderWidth,\n                                borderColor: getBorderColor(node),\n                                labelTextColor: getLabelTextColor(node)\n                            }),\n                            handlers: getHandlers(node, showTooltip, hideTooltip)\n                        });\n                    })\n                ),\n                animate && React.createElement(\n                    TransitionMotion,\n                    {\n                        willEnter: nodeWillEnter,\n                        willLeave: nodeWillLeave(springConfig),\n                        styles: nodes.map(function (node) {\n                            return {\n                                key: node.path,\n                                data: node,\n                                style: _extends({\n                                    scale: spring(1, springConfig),\n                                    r: spring(node.r, springConfig),\n                                    x: spring(node.x, springConfig),\n                                    y: spring(node.y, springConfig),\n                                    opacity: spring(1, springConfig)\n                                }, colorMotionSpring(node.color, springConfig))\n                            };\n                        })\n                    },\n                    function (interpolatedStyles) {\n                        return React.createElement(\n                            'g',\n                            null,\n                            interpolatedStyles.map(function (_ref3) {\n                                var style = _ref3.style,\n                                    node = _ref3.data;\n\n                                style.color = getInterpolatedColor(style);\n\n                                return React.createElement(nodeComponent, {\n                                    key: node.path,\n                                    node: node,\n                                    style: _extends({}, style, {\n                                        fill: node.fill,\n                                        borderWidth: borderWidth,\n                                        borderColor: getBorderColor(style),\n                                        labelTextColor: getLabelTextColor(style)\n                                    }),\n                                    handlers: getHandlers(node, showTooltip, hideTooltip)\n                                });\n                            })\n                        );\n                    }\n                )\n            );\n        }\n    );\n};\n\nBubble.displayName = 'Bubble';\n\nexport default enhance(Bubble);"]},"metadata":{},"sourceType":"module"}