{"ast":null,"code":"var _jsxFileName=\"/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/src/components/Diagrams/PieChart.jsx\";import React from'react';import ChartistGraph from\"react-chartist\";import Legend from\"chartist-plugin-legend\";import{Spinner}from\"react-bootstrap\";import create_labels_and_series from\"./diagram_common\";/**\n * Creates a ChartistGraph pie chart.\n * @param data: the data to generate the chart from.\n * @param labelOffset: offset of the labels.\n * @param legendPosition: Position of the chart legend. Examples: 'top', 'bottom'\n * @returns {*}\n * @constructor\n */function PieChart({data,labelOffset,legendPosition}){if(!data||data.length===0)return/*#__PURE__*/React.createElement(Spinner,{animation:\"border\",variant:\"primary\",size:\"mg\",__self:this,__source:{fileName:_jsxFileName,lineNumber:17,columnNumber:42}});const pieData=create_labels_and_series(data);const plugins=[Legend({position:legendPosition})];const sum=function(a,b){return a+b;};const total=pieData.series.reduce(sum);return/*#__PURE__*/React.createElement(ChartistGraph,{options:{chartPadding:0,labelOffset:labelOffset,labelDirection:'explode',plugins,labelInterpolationFnc:function(label){const index=pieData.labels.indexOf(label);console.log(\"pieData.series\",pieData.series,\"labels\",pieData.labels,\"total\",total,\"index\",index);//return Math.round(pieData.series[index].value / total * 100) + '%';\nreturn(pieData.series[index].value/total*100).toFixed(2)+'%';}},data:pieData,type:\"Pie\",__self:this,__source:{fileName:_jsxFileName,lineNumber:23,columnNumber:10}});}export default PieChart;","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/src/components/Diagrams/PieChart.jsx"],"names":["React","ChartistGraph","Legend","Spinner","create_labels_and_series","PieChart","data","labelOffset","legendPosition","length","pieData","plugins","position","sum","a","b","total","series","reduce","chartPadding","labelDirection","labelInterpolationFnc","label","index","labels","indexOf","console","log","value","toFixed"],"mappings":"wIAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,gBAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,OAASC,OAAT,KAAwB,iBAAxB,CACA,MAAOC,CAAAA,wBAAP,KAAqC,kBAArC,CAGA;;;;;;;GAQA,QAASC,CAAAA,QAAT,CAAkB,CAACC,IAAD,CAAOC,WAAP,CAAoBC,cAApB,CAAlB,CAAuD,CACrD,GAAI,CAACF,IAAD,EAASA,IAAI,CAACG,MAAL,GAAgB,CAA7B,CAAgC,mBAAO,oBAAC,OAAD,EAAS,SAAS,CAAC,QAAnB,CAA4B,OAAO,CAAC,SAApC,CAA8C,IAAI,CAAC,IAAnD,6EAAP,CAChC,KAAMC,CAAAA,OAAO,CAAGN,wBAAwB,CAACE,IAAD,CAAxC,CACA,KAAMK,CAAAA,OAAO,CAAG,CAACT,MAAM,CAAC,CAACU,QAAQ,CAAEJ,cAAX,CAAD,CAAP,CAAhB,CACA,KAAMK,CAAAA,GAAG,CAAG,SAASC,CAAT,CAAYC,CAAZ,CAAe,CAAE,MAAOD,CAAAA,CAAC,CAAGC,CAAX,CAAc,CAA3C,CACA,KAAMC,CAAAA,KAAK,CAAGN,OAAO,CAACO,MAAR,CAAeC,MAAf,CAAsBL,GAAtB,CAAd,CAEA,mBAAO,oBAAC,aAAD,EACG,OAAO,CACP,CACEM,YAAY,CAAE,CADhB,CAEEZ,WAAW,CAAEA,WAFf,CAGEa,cAAc,CAAE,SAHlB,CAIET,OAJF,CAKEU,qBAAqB,CAAE,SAASC,KAAT,CAAgB,CACrC,KAAMC,CAAAA,KAAK,CAAGb,OAAO,CAACc,MAAR,CAAeC,OAAf,CAAuBH,KAAvB,CAAd,CACAI,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA8BjB,OAAO,CAACO,MAAtC,CAA8C,QAA9C,CAAwDP,OAAO,CAACc,MAAhE,CAAwE,OAAxE,CAAiFR,KAAjF,CAAwF,OAAxF,CAAiGO,KAAjG,EACA;AACA,MAAO,CAACb,OAAO,CAACO,MAAR,CAAeM,KAAf,EAAsBK,KAAtB,CAA8BZ,KAA9B,CAAsC,GAAvC,EAA4Ca,OAA5C,CAAoD,CAApD,EAAyD,GAAhE,CACD,CAVH,CAFH,CAeG,IAAI,CAAEnB,OAfT,CAgBG,IAAI,CAAC,KAhBR,6EAAP,CAiBD,CAED,cAAeL,CAAAA,QAAf","sourcesContent":["import React from 'react';\nimport ChartistGraph from \"react-chartist\";\nimport Legend from \"chartist-plugin-legend\";\nimport { Spinner } from \"react-bootstrap\";\nimport create_labels_and_series from \"./diagram_common\"\n\n\n/**\n * Creates a ChartistGraph pie chart.\n * @param data: the data to generate the chart from.\n * @param labelOffset: offset of the labels.\n * @param legendPosition: Position of the chart legend. Examples: 'top', 'bottom'\n * @returns {*}\n * @constructor\n */\nfunction PieChart({data, labelOffset, legendPosition}) {\n  if (!data || data.length === 0) return <Spinner animation=\"border\" variant=\"primary\" size=\"mg\"/>;\n  const pieData = create_labels_and_series(data);\n  const plugins = [Legend({position: legendPosition})];\n  const sum = function(a, b) { return a + b };\n  const total = pieData.series.reduce(sum);\n\n  return <ChartistGraph\n            options={\n            {\n              chartPadding: 0,\n              labelOffset: labelOffset,\n              labelDirection: 'explode',\n              plugins,\n              labelInterpolationFnc: function(label) {\n                const index = pieData.labels.indexOf(label);\n                console.log(\"pieData.series\", pieData.series, \"labels\", pieData.labels, \"total\", total, \"index\", index);\n                //return Math.round(pieData.series[index].value / total * 100) + '%';\n                return (pieData.series[index].value / total * 100).toFixed(2) + '%';\n              }\n            }\n          }\n            data={pieData}\n            type=\"Pie\"/>;\n}\n\nexport default PieChart;\n"]},"metadata":{},"sourceType":"module"}