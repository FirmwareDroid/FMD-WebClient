{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar TreeMapNode = function TreeMapNode(_ref) {\n  var style = _ref.style,\n      node = _ref.node,\n      handlers = _ref.handlers;\n  if (style.width <= 0 || style.height <= 0) return null;\n  var rotate = node.label && style.orientLabel && style.height > style.width;\n  return React.createElement('g', {\n    transform: 'translate(' + style.x + ',' + style.y + ')'\n  }, React.createElement('rect', _extends({\n    width: style.width,\n    height: style.height,\n    fill: style.fill ? style.fill : style.color,\n    strokeWidth: style.borderWidth,\n    stroke: style.borderColor\n  }, handlers)), node.label && React.createElement('text', {\n    textAnchor: 'middle',\n    alignmentBaseline: 'central',\n    style: {\n      fill: style.labelTextColor,\n      pointerEvents: 'none'\n    },\n    transform: 'translate(' + style.width / 2 + ',' + style.height / 2 + ') rotate(' + (rotate ? -90 : 0) + ')'\n  }, node.label));\n};\n\nTreeMapNode.propTypes = {\n  node: PropTypes.object.isRequired,\n  style: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    labelTextColor: PropTypes.string.isRequired,\n    orientLabel: PropTypes.bool.isRequired\n  }).isRequired,\n  handlers: PropTypes.object.isRequired\n};\nexport default TreeMapNode;","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/components/charts/treemap/TreeMapNode.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","React","PropTypes","TreeMapNode","_ref","style","node","handlers","width","height","rotate","label","orientLabel","createElement","transform","x","y","fill","color","strokeWidth","borderWidth","stroke","borderColor","textAnchor","alignmentBaseline","labelTextColor","pointerEvents","propTypes","object","isRequired","shape","number","string","bool"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar TreeMapNode = function TreeMapNode(_ref) {\n    var style = _ref.style,\n        node = _ref.node,\n        handlers = _ref.handlers;\n\n    if (style.width <= 0 || style.height <= 0) return null;\n\n    var rotate = node.label && style.orientLabel && style.height > style.width;\n\n    return React.createElement(\n        'g',\n        { transform: 'translate(' + style.x + ',' + style.y + ')' },\n        React.createElement('rect', _extends({\n            width: style.width,\n            height: style.height,\n            fill: style.fill ? style.fill : style.color,\n            strokeWidth: style.borderWidth,\n            stroke: style.borderColor\n        }, handlers)),\n        node.label && React.createElement(\n            'text',\n            {\n                textAnchor: 'middle',\n                alignmentBaseline: 'central',\n                style: { fill: style.labelTextColor, pointerEvents: 'none' },\n                transform: 'translate(' + style.width / 2 + ',' + style.height / 2 + ') rotate(' + (rotate ? -90 : 0) + ')'\n            },\n            node.label\n        )\n    );\n};\n\nTreeMapNode.propTypes = {\n    node: PropTypes.object.isRequired,\n    style: PropTypes.shape({\n        x: PropTypes.number.isRequired,\n        y: PropTypes.number.isRequired,\n        width: PropTypes.number.isRequired,\n        height: PropTypes.number.isRequired,\n        color: PropTypes.string.isRequired,\n        borderWidth: PropTypes.number.isRequired,\n        borderColor: PropTypes.string.isRequired,\n        labelTextColor: PropTypes.string.isRequired,\n        orientLabel: PropTypes.bool.isRequired\n    }).isRequired,\n    handlers: PropTypes.object.isRequired\n};\n\nexport default TreeMapNode;"]},"metadata":{},"sourceType":"module"}