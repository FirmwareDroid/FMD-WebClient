{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n\nimport { spring } from 'react-motion';\nimport { colorMotionSpring } from '../../../lib/colors';\nexport var nodeWillEnter = function nodeWillEnter(_ref) {\n  var node = _ref.data;\n  return _extends({\n    x: node.x,\n    y: node.y,\n    width: node.width,\n    height: node.height\n  }, colorMotionSpring(node.color));\n};\nexport var nodeWillLeave = function nodeWillLeave(springConfig) {\n  return function (_ref2) {\n    var node = _ref2.data;\n    return _extends({\n      x: spring(node.x + node.width / 2, springConfig),\n      y: spring(node.y + node.height / 2, springConfig),\n      width: spring(0, springConfig),\n      height: spring(0, springConfig)\n    }, colorMotionSpring(node.color, springConfig));\n  };\n};","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/components/charts/treemap/motion.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","spring","colorMotionSpring","nodeWillEnter","_ref","node","data","x","y","width","height","color","nodeWillLeave","springConfig","_ref2"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,SAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,SAAOL,MAAP;AAAgB,CAAhQ;AAEA;;;;;;;;;;AAQA,SAASS,MAAT,QAAuB,cAAvB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAEA,OAAO,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;AACpD,MAAIC,IAAI,GAAGD,IAAI,CAACE,IAAhB;AACA,SAAOjB,QAAQ,CAAC;AACZkB,IAAAA,CAAC,EAAEF,IAAI,CAACE,CADI;AAEZC,IAAAA,CAAC,EAAEH,IAAI,CAACG,CAFI;AAGZC,IAAAA,KAAK,EAAEJ,IAAI,CAACI,KAHA;AAIZC,IAAAA,MAAM,EAAEL,IAAI,CAACK;AAJD,GAAD,EAKZR,iBAAiB,CAACG,IAAI,CAACM,KAAN,CALL,CAAf;AAMH,CARM;AAUP,OAAO,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,YAAvB,EAAqC;AAC5D,SAAO,UAAUC,KAAV,EAAiB;AACpB,QAAIT,IAAI,GAAGS,KAAK,CAACR,IAAjB;AACA,WAAOjB,QAAQ,CAAC;AACZkB,MAAAA,CAAC,EAAEN,MAAM,CAACI,IAAI,CAACE,CAAL,GAASF,IAAI,CAACI,KAAL,GAAa,CAAvB,EAA0BI,YAA1B,CADG;AAEZL,MAAAA,CAAC,EAAEP,MAAM,CAACI,IAAI,CAACG,CAAL,GAASH,IAAI,CAACK,MAAL,GAAc,CAAxB,EAA2BG,YAA3B,CAFG;AAGZJ,MAAAA,KAAK,EAAER,MAAM,CAAC,CAAD,EAAIY,YAAJ,CAHD;AAIZH,MAAAA,MAAM,EAAET,MAAM,CAAC,CAAD,EAAIY,YAAJ;AAJF,KAAD,EAKZX,iBAAiB,CAACG,IAAI,CAACM,KAAN,EAAaE,YAAb,CALL,CAAf;AAMH,GARD;AASH,CAVM","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { spring } from 'react-motion';\nimport { colorMotionSpring } from '../../../lib/colors';\n\nexport var nodeWillEnter = function nodeWillEnter(_ref) {\n    var node = _ref.data;\n    return _extends({\n        x: node.x,\n        y: node.y,\n        width: node.width,\n        height: node.height\n    }, colorMotionSpring(node.color));\n};\n\nexport var nodeWillLeave = function nodeWillLeave(springConfig) {\n    return function (_ref2) {\n        var node = _ref2.data;\n        return _extends({\n            x: spring(node.x + node.width / 2, springConfig),\n            y: spring(node.y + node.height / 2, springConfig),\n            width: spring(0, springConfig),\n            height: spring(0, springConfig)\n        }, colorMotionSpring(node.color, springConfig));\n    };\n};"]},"metadata":{},"sourceType":"module"}