{"ast":null,"code":"var _jsxFileName=\"/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/src/components/Tables/Table.jsx\";import BootstrapTable from'react-bootstrap-table-next';import{Spinner}from\"react-bootstrap\";import React from'react';function add_column(columns,dataField,text){columns.push({dataField:dataField,text:text,sort:true,headerTitle:true});}function create_data_arrays(data,columnTitles){let table_data=[];let first_datafield=columnTitles[0];let second_datafield=columnTitles[1];for(let key in data){if(data.hasOwnProperty(key)){let row={};row[first_datafield]=key;row[second_datafield]=data[key];table_data.push(row);}}return table_data;}function Table({data,columnTitles}){if(!data||data===undefined||data.length===0)return/*#__PURE__*/React.createElement(Spinner,{animation:\"border\",variant:\"primary\",size:\"mg\",__self:this,__source:{fileName:_jsxFileName,lineNumber:32,columnNumber:63}});console.log(\"tableData\",data);let columns=[];let table_data=[];columnTitles.forEach(element=>add_column(columns,element,element));if(columnTitles.length===2){table_data=create_data_arrays(data,columnTitles);}return/*#__PURE__*/React.createElement(BootstrapTable,{keyField:columnTitles[0],data:table_data,columns:columns,headerClasses:\"thead-dark\",striped:true,hover:true,condensed:true,__self:this,__source:{fileName:_jsxFileName,lineNumber:41,columnNumber:10}});}export default Table;","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/src/components/Tables/Table.jsx"],"names":["BootstrapTable","Spinner","React","add_column","columns","dataField","text","push","sort","headerTitle","create_data_arrays","data","columnTitles","table_data","first_datafield","second_datafield","key","hasOwnProperty","row","Table","undefined","length","console","log","forEach","element"],"mappings":"mIAAA,MAAOA,CAAAA,cAAP,KAA2B,4BAA3B,CACA,OAASC,OAAT,KAAwB,iBAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAGA,QAASC,CAAAA,UAAT,CAAoBC,OAApB,CAA6BC,SAA7B,CAAwCC,IAAxC,CAA6C,CAC3CF,OAAO,CAACG,IAAR,CAAa,CACXF,SAAS,CAAEA,SADA,CAEXC,IAAI,CAAEA,IAFK,CAGXE,IAAI,CAAE,IAHK,CAIXC,WAAW,CAAE,IAJF,CAAb,EAMD,CAED,QAASC,CAAAA,kBAAT,CAA4BC,IAA5B,CAAkCC,YAAlC,CAA+C,CAC7C,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAIC,CAAAA,eAAe,CAAGF,YAAY,CAAC,CAAD,CAAlC,CACA,GAAIG,CAAAA,gBAAgB,CAAGH,YAAY,CAAC,CAAD,CAAnC,CACA,IAAK,GAAII,CAAAA,GAAT,GAAgBL,CAAAA,IAAhB,CAAsB,CACpB,GAAIA,IAAI,CAACM,cAAL,CAAoBD,GAApB,CAAJ,CAA8B,CAC5B,GAAIE,CAAAA,GAAG,CAAG,EAAV,CACAA,GAAG,CAACJ,eAAD,CAAH,CAAuBE,GAAvB,CACAE,GAAG,CAACH,gBAAD,CAAH,CAAwBJ,IAAI,CAACK,GAAD,CAA5B,CACAH,UAAU,CAACN,IAAX,CAAgBW,GAAhB,EACD,CACF,CAED,MAAOL,CAAAA,UAAP,CACD,CAED,QAASM,CAAAA,KAAT,CAAe,CAACR,IAAD,CAAOC,YAAP,CAAf,CAAqC,CACnC,GAAG,CAACD,IAAD,EAASA,IAAI,GAAKS,SAAlB,EAA+BT,IAAI,CAACU,MAAL,GAAgB,CAAlD,CAAqD,mBAAO,oBAAC,OAAD,EAAS,SAAS,CAAC,QAAnB,CAA4B,OAAO,CAAC,SAApC,CAA8C,IAAI,CAAC,IAAnD,6EAAP,CACrDC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAyBZ,IAAzB,EACA,GAAIP,CAAAA,OAAO,CAAG,EAAd,CACA,GAAIS,CAAAA,UAAU,CAAG,EAAjB,CACAD,YAAY,CAACY,OAAb,CAAqBC,OAAO,EAAItB,UAAU,CAACC,OAAD,CAAUqB,OAAV,CAAmBA,OAAnB,CAA1C,EACA,GAAIb,YAAY,CAACS,MAAb,GAAwB,CAA5B,CAA8B,CAC5BR,UAAU,CAAGH,kBAAkB,CAACC,IAAD,CAAOC,YAAP,CAA/B,CACD,CAED,mBAAO,oBAAC,cAAD,EAAgB,QAAQ,CAAEA,YAAY,CAAC,CAAD,CAAtC,CACgB,IAAI,CAAGC,UADvB,CAEgB,OAAO,CAAGT,OAF1B,CAGgB,aAAa,CAAC,YAH9B,CAIgB,OAAO,KAJvB,CAKgB,KAAK,KALrB,CAMgB,SAAS,KANzB,6EAAP,CAOD,CAED,cAAee,CAAAA,KAAf","sourcesContent":["import BootstrapTable from 'react-bootstrap-table-next';\nimport { Spinner } from \"react-bootstrap\";\nimport React from 'react';\n\n\nfunction add_column(columns, dataField, text){\n  columns.push({\n    dataField: dataField,\n    text: text,\n    sort: true,\n    headerTitle: true,\n  })\n}\n\nfunction create_data_arrays(data, columnTitles){\n  let table_data = [];\n  let first_datafield = columnTitles[0];\n  let second_datafield = columnTitles[1];\n  for (let key in data) {\n    if (data.hasOwnProperty(key)) {\n      let row = {};\n      row[first_datafield] = key;\n      row[second_datafield] = data[key];\n      table_data.push(row);\n    }\n  }\n\n  return table_data\n}\n\nfunction Table({data, columnTitles}) {\n  if(!data || data === undefined || data.length === 0) return <Spinner animation=\"border\" variant=\"primary\" size=\"mg\"/>;\n  console.log(\"tableData\", data);\n  let columns = [];\n  let table_data = [];\n  columnTitles.forEach(element => add_column(columns, element, element));\n  if (columnTitles.length === 2){\n    table_data = create_data_arrays(data, columnTitles)\n  }\n\n  return <BootstrapTable keyField={columnTitles[0]}\n                         data={ table_data }\n                         columns={ columns }\n                         headerClasses=\"thead-dark\"\n                         striped\n                         hover\n                         condensed/>\n}\n\nexport default Table;\n\n\n"]},"metadata":{},"sourceType":"module"}