{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport pure from 'recompose/pure';\nimport { degreesToRadians } from '../../../lib/polar';\nexport var PatternLines = pure(function (_ref) {\n  var id = _ref.id,\n      _spacing = _ref.spacing,\n      _rotation = _ref.rotation,\n      background = _ref.background,\n      color = _ref.color,\n      lineWidth = _ref.lineWidth;\n  var rotation = Math.round(_rotation) % 360;\n  var spacing = Math.abs(_spacing);\n  if (rotation > 180) rotation = rotation - 360;else if (rotation > 90) rotation = rotation - 180;else if (rotation < -180) rotation = rotation + 360;else if (rotation < -90) rotation = rotation + 180;\n  var width = spacing;\n  var height = spacing;\n  var path = void 0;\n\n  if (rotation === 0) {\n    path = '\\n                M 0 0 L ' + width + ' 0\\n                M 0 ' + height + ' L ' + width + ' ' + height + '\\n            ';\n  } else if (rotation === 90) {\n    path = '\\n                M 0 0 L 0 ' + height + '\\n                M ' + width + ' 0 L ' + width + ' ' + height + '\\n            ';\n  } else {\n    width = Math.abs(spacing / Math.sin(degreesToRadians(rotation)));\n    height = spacing / Math.sin(degreesToRadians(90 - rotation));\n\n    if (rotation > 0) {\n      path = '\\n                    M 0 ' + -height + ' L ' + width * 2 + ' ' + height + '\\n                    M ' + -width + ' ' + -height + ' L ' + width + ' ' + height + '\\n                    M ' + -width + ' 0 L ' + width + ' ' + height * 2 + '\\n                ';\n    } else {\n      path = '\\n                    M ' + -width + ' ' + height + ' L ' + width + ' ' + -height + '\\n                    M ' + -width + ' ' + height * 2 + ' L ' + width * 2 + ' ' + -height + '\\n                    M 0 ' + height * 2 + ' L ' + width * 2 + ' 0\\n                ';\n    }\n  }\n\n  return React.createElement('pattern', {\n    id: id,\n    width: width,\n    height: height,\n    patternUnits: 'userSpaceOnUse'\n  }, React.createElement('rect', {\n    width: width,\n    height: height,\n    fill: background,\n    stroke: 'rgba(255, 0, 0, 0.1)',\n    strokeWidth: 0\n  }), React.createElement('path', {\n    d: path,\n    strokeWidth: lineWidth,\n    stroke: color,\n    strokeLinecap: 'square'\n  }));\n});\nPatternLines.propTypes = {\n  id: PropTypes.string.isRequired,\n  spacing: PropTypes.number.isRequired,\n  rotation: PropTypes.number.isRequired,\n  background: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n  lineWidth: PropTypes.number.isRequired\n};\nPatternLines.defaultProps = {\n  spacing: 5,\n  rotation: 0,\n  color: '#000000',\n  background: '#ffffff',\n  lineWidth: 2\n};\nexport var patternLinesDef = function patternLinesDef(id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return _extends({\n    id: id,\n    type: 'patternLines'\n  }, options);\n};","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/components/defs/patterns/PatternLines.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","React","PropTypes","pure","degreesToRadians","PatternLines","_ref","id","_spacing","spacing","_rotation","rotation","background","color","lineWidth","Math","round","abs","width","height","path","sin","createElement","patternUnits","fill","stroke","strokeWidth","d","strokeLinecap","propTypes","string","isRequired","number","defaultProps","patternLinesDef","options","undefined","type"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport pure from 'recompose/pure';\nimport { degreesToRadians } from '../../../lib/polar';\n\nexport var PatternLines = pure(function (_ref) {\n    var id = _ref.id,\n        _spacing = _ref.spacing,\n        _rotation = _ref.rotation,\n        background = _ref.background,\n        color = _ref.color,\n        lineWidth = _ref.lineWidth;\n\n    var rotation = Math.round(_rotation) % 360;\n    var spacing = Math.abs(_spacing);\n\n    if (rotation > 180) rotation = rotation - 360;else if (rotation > 90) rotation = rotation - 180;else if (rotation < -180) rotation = rotation + 360;else if (rotation < -90) rotation = rotation + 180;\n\n    var width = spacing;\n    var height = spacing;\n    var path = void 0;\n\n    if (rotation === 0) {\n        path = '\\n                M 0 0 L ' + width + ' 0\\n                M 0 ' + height + ' L ' + width + ' ' + height + '\\n            ';\n    } else if (rotation === 90) {\n        path = '\\n                M 0 0 L 0 ' + height + '\\n                M ' + width + ' 0 L ' + width + ' ' + height + '\\n            ';\n    } else {\n        width = Math.abs(spacing / Math.sin(degreesToRadians(rotation)));\n        height = spacing / Math.sin(degreesToRadians(90 - rotation));\n\n        if (rotation > 0) {\n            path = '\\n                    M 0 ' + -height + ' L ' + width * 2 + ' ' + height + '\\n                    M ' + -width + ' ' + -height + ' L ' + width + ' ' + height + '\\n                    M ' + -width + ' 0 L ' + width + ' ' + height * 2 + '\\n                ';\n        } else {\n            path = '\\n                    M ' + -width + ' ' + height + ' L ' + width + ' ' + -height + '\\n                    M ' + -width + ' ' + height * 2 + ' L ' + width * 2 + ' ' + -height + '\\n                    M 0 ' + height * 2 + ' L ' + width * 2 + ' 0\\n                ';\n        }\n    }\n\n    return React.createElement(\n        'pattern',\n        { id: id, width: width, height: height, patternUnits: 'userSpaceOnUse' },\n        React.createElement('rect', {\n            width: width,\n            height: height,\n            fill: background,\n            stroke: 'rgba(255, 0, 0, 0.1)',\n            strokeWidth: 0\n        }),\n        React.createElement('path', { d: path, strokeWidth: lineWidth, stroke: color, strokeLinecap: 'square' })\n    );\n});\n\nPatternLines.propTypes = {\n    id: PropTypes.string.isRequired,\n    spacing: PropTypes.number.isRequired,\n    rotation: PropTypes.number.isRequired,\n    background: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n    lineWidth: PropTypes.number.isRequired\n};\n\nPatternLines.defaultProps = {\n    spacing: 5,\n    rotation: 0,\n    color: '#000000',\n    background: '#ffffff',\n    lineWidth: 2\n};\n\nexport var patternLinesDef = function patternLinesDef(id) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return _extends({\n        id: id,\n        type: 'patternLines'\n    }, options);\n};"]},"metadata":{},"sourceType":"module"}