{"ast":null,"code":"var _jsxFileName=\"/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/src/components/Diagrams/PieChart.jsx\";import React from'react';import useSWR from'swr';import ChartistGraph from\"react-chartist\";import Legend from\"chartist-plugin-legend\";import{Spinner}from\"react-bootstrap\";/*\n * Creates a data object for ChartistGraph Pie chart.\n * @param: data: json\n */function createPieChartData(data){let total_samples=0;for(let key in data){if(data.hasOwnProperty(key)){total_samples=total_samples+data[key];}}let labels=[];let series=[];for(let key in data){if(data.hasOwnProperty(key)){labels.push(key);let value=total_samples/100*data[key];value=Math.round((value+Number.EPSILON)*100)/100;series.push(value);}}console.log(\"labels\",JSON.stringify(labels));console.log(\"Series\",JSON.stringify(series));return{labels:labels,series:series};}function create_labels_and_series(data){let labels=[];let series=[];for(let key in data){if(data.hasOwnProperty(key)){labels.push(key);series.push(data[key]);}}console.log(\"Labels\",labels,\"Series\",series);return{labels:labels,series:series};}function PieChart({dataUrl}){const{data,error}=useSWR(dataUrl);if(error)return/*#__PURE__*/React.createElement(\"h1\",{__self:this,__source:{fileName:_jsxFileName,lineNumber:50,columnNumber:21}},\"Something went wrong!\");if(!data)return/*#__PURE__*/React.createElement(Spinner,{animation:\"border\",variant:\"primary\",size:\"mg\",__self:this,__source:{fileName:_jsxFileName,lineNumber:51,columnNumber:21}});console.log(\"PieData\",data.number_of_firmware_by_android_version);const pieData=create_labels_and_series(data.number_of_firmware_by_android_version);let plugins=[Legend()];let sum=function(a,b){return a+b;};return/*#__PURE__*/React.createElement(ChartistGraph,{options:{plugins,labelInterpolationFnc:function(label){const index=pieData.labels.indexOf(label);console.log(\"Test\",index);console.log(\"value\",pieData.series[index]);return Math.round(pieData.series[index].value/pieData.series.reduce(sum)*100)+'%';}},data:pieData,type:\"Pie\",__self:this,__source:{fileName:_jsxFileName,lineNumber:56,columnNumber:10}});}export default PieChart;","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/src/components/Diagrams/PieChart.jsx"],"names":["React","useSWR","ChartistGraph","Legend","Spinner","createPieChartData","data","total_samples","key","hasOwnProperty","labels","series","push","value","Math","round","Number","EPSILON","console","log","JSON","stringify","create_labels_and_series","PieChart","dataUrl","error","number_of_firmware_by_android_version","pieData","plugins","sum","a","b","labelInterpolationFnc","label","index","indexOf","reduce"],"mappings":"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","sourcesContent":["import React from 'react';\nimport useSWR from 'swr';\nimport ChartistGraph from \"react-chartist\";\nimport Legend from \"chartist-plugin-legend\";\nimport { Spinner } from \"react-bootstrap\";\n\n\n/*\n * Creates a data object for ChartistGraph Pie chart.\n * @param: data: json\n */\nfunction createPieChartData(data){\n  let total_samples = 0;\n  for (let key in data) {\n    if (data.hasOwnProperty(key)) {\n      total_samples = total_samples + data[key];\n    }\n  }\n  let labels = [];\n  let series = [];\n  for (let key in data) {\n    if (data.hasOwnProperty(key)) {\n      labels.push(key);\n      let value = (total_samples/100) * data[key];\n      value = Math.round((value + Number.EPSILON) * 100) / 100;\n      series.push(value);\n    }\n  }\n  console.log(\"labels\", JSON.stringify(labels));\n  console.log(\"Series\", JSON.stringify(series));\n  return {labels: labels, series: series}\n}\n\n\nfunction create_labels_and_series(data){\n  let labels = [];\n  let series = [];\n  for (let key in data) {\n    if (data.hasOwnProperty(key)) {\n      labels.push(key);\n      series.push(data[key]);\n    }\n  }\n  console.log(\"Labels\", labels, \"Series\", series);\n  return {labels: labels, series: series}\n}\n\nfunction PieChart({dataUrl}) {\n  const { data, error } = useSWR(dataUrl);\n  if (error) return <h1>Something went wrong!</h1>;\n  if (!data) return <Spinner animation=\"border\" variant=\"primary\" size=\"mg\"/>;\n  console.log(\"PieData\", data.number_of_firmware_by_android_version);\n  const pieData = create_labels_and_series(data.number_of_firmware_by_android_version);\n  let plugins = [Legend()];\n  let sum = function(a, b) { return a + b };\n  return <ChartistGraph options={{plugins,\n                        labelInterpolationFnc: function(label) {\n                          const index = pieData.labels.indexOf(label);\n                          console.log(\"Test\", index);\n                          console.log(\"value\", pieData.series[index]);\n                          return Math.round(pieData.series[index].value / pieData.series.reduce(sum) * 100) + '%';\n                        }}}\n                        data={pieData}\n                        type=\"Pie\"/>;\n}\n\nexport default PieChart;\n"]},"metadata":{},"sourceType":"module"}