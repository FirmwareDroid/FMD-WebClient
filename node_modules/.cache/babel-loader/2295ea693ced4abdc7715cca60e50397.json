{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionMotion, spring } from 'react-motion';\nimport pure from 'recompose/pure';\nimport { motionPropTypes } from '../../../props';\nimport { positionFromAngle, radiansToDegrees } from '../../../lib/polar';\n\nvar textAnchorFromAngle = function textAnchorFromAngle(_angle) {\n  var angle = radiansToDegrees(_angle) + 90;\n  if (angle <= 10 || angle >= 350 || angle >= 170 && angle <= 190) return 'middle';\n  if (angle > 180) return 'end';\n  return 'start';\n};\n\nvar RadarGridLabels = function RadarGridLabels(_ref) {\n  var radius = _ref.radius,\n      angles = _ref.angles,\n      indices = _ref.indices,\n      labelOffset = _ref.labelOffset,\n      theme = _ref.theme,\n      animate = _ref.animate,\n      motionStiffness = _ref.motionStiffness,\n      motionDamping = _ref.motionDamping;\n  var springConfig = {\n    motionDamping: motionDamping,\n    motionStiffness: motionStiffness\n  };\n  var labels = indices.map(function (index, i) {\n    var position = positionFromAngle(angles[i], radius + labelOffset);\n    var textAnchor = textAnchorFromAngle(angles[i]);\n    return _extends({\n      key: 'label.' + i,\n      label: index,\n      textAnchor: textAnchor\n    }, position);\n  });\n\n  if (animate !== true) {\n    return React.createElement('g', null, labels.map(function (label) {\n      return React.createElement('text', _extends({\n        style: {\n          fill: theme.axis.textColor,\n          fontSize: theme.axis.fontSize\n        },\n        dy: '0.5em'\n      }, label), label.label);\n    }));\n  }\n\n  return React.createElement(TransitionMotion, {\n    styles: labels.map(function (label) {\n      return {\n        key: label.key,\n        data: {\n          label: label.label,\n          textAnchor: label.textAnchor\n        },\n        style: {\n          x: spring(label.x, springConfig),\n          y: spring(label.y, springConfig)\n        }\n      };\n    })\n  }, function (interpolatedStyles) {\n    return React.createElement('g', null, interpolatedStyles.map(function (_ref2) {\n      var key = _ref2.key,\n          style = _ref2.style,\n          data = _ref2.data;\n      return React.createElement('text', _extends({\n        key: key,\n        dy: '0.5em',\n        textAnchor: data.textAnchor,\n        style: {\n          fill: theme.axis.textColor,\n          fontSize: theme.axis.fontSize\n        }\n      }, style), data.label);\n    }));\n  });\n};\n\nRadarGridLabels.propTypes = _extends({\n  radius: PropTypes.number.isRequired,\n  angles: PropTypes.arrayOf(PropTypes.number).isRequired,\n  indices: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired,\n  labelOffset: PropTypes.number.isRequired,\n  theme: PropTypes.object.isRequired\n}, motionPropTypes);\nexport default pure(RadarGridLabels);","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/components/charts/radar/RadarGridLabels.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","React","PropTypes","TransitionMotion","spring","pure","motionPropTypes","positionFromAngle","radiansToDegrees","textAnchorFromAngle","_angle","angle","RadarGridLabels","_ref","radius","angles","indices","labelOffset","theme","animate","motionStiffness","motionDamping","springConfig","labels","map","index","position","textAnchor","label","createElement","style","fill","axis","textColor","fontSize","dy","styles","data","x","y","interpolatedStyles","_ref2","propTypes","number","isRequired","arrayOf","oneOfType","string","object"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionMotion, spring } from 'react-motion';\nimport pure from 'recompose/pure';\nimport { motionPropTypes } from '../../../props';\nimport { positionFromAngle, radiansToDegrees } from '../../../lib/polar';\n\nvar textAnchorFromAngle = function textAnchorFromAngle(_angle) {\n    var angle = radiansToDegrees(_angle) + 90;\n    if (angle <= 10 || angle >= 350 || angle >= 170 && angle <= 190) return 'middle';\n    if (angle > 180) return 'end';\n    return 'start';\n};\n\nvar RadarGridLabels = function RadarGridLabels(_ref) {\n    var radius = _ref.radius,\n        angles = _ref.angles,\n        indices = _ref.indices,\n        labelOffset = _ref.labelOffset,\n        theme = _ref.theme,\n        animate = _ref.animate,\n        motionStiffness = _ref.motionStiffness,\n        motionDamping = _ref.motionDamping;\n\n    var springConfig = {\n        motionDamping: motionDamping,\n        motionStiffness: motionStiffness\n    };\n\n    var labels = indices.map(function (index, i) {\n        var position = positionFromAngle(angles[i], radius + labelOffset);\n        var textAnchor = textAnchorFromAngle(angles[i]);\n\n        return _extends({\n            key: 'label.' + i,\n            label: index,\n            textAnchor: textAnchor\n        }, position);\n    });\n\n    if (animate !== true) {\n        return React.createElement(\n            'g',\n            null,\n            labels.map(function (label) {\n                return React.createElement(\n                    'text',\n                    _extends({\n                        style: {\n                            fill: theme.axis.textColor,\n                            fontSize: theme.axis.fontSize\n                        },\n                        dy: '0.5em'\n                    }, label),\n                    label.label\n                );\n            })\n        );\n    }\n\n    return React.createElement(\n        TransitionMotion,\n        {\n            styles: labels.map(function (label) {\n                return {\n                    key: label.key,\n                    data: {\n                        label: label.label,\n                        textAnchor: label.textAnchor\n                    },\n                    style: {\n                        x: spring(label.x, springConfig),\n                        y: spring(label.y, springConfig)\n                    }\n                };\n            })\n        },\n        function (interpolatedStyles) {\n            return React.createElement(\n                'g',\n                null,\n                interpolatedStyles.map(function (_ref2) {\n                    var key = _ref2.key,\n                        style = _ref2.style,\n                        data = _ref2.data;\n                    return React.createElement(\n                        'text',\n                        _extends({\n                            key: key,\n                            dy: '0.5em',\n                            textAnchor: data.textAnchor,\n                            style: {\n                                fill: theme.axis.textColor,\n                                fontSize: theme.axis.fontSize\n                            }\n                        }, style),\n                        data.label\n                    );\n                })\n            );\n        }\n    );\n};\n\nRadarGridLabels.propTypes = _extends({\n    radius: PropTypes.number.isRequired,\n    angles: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n    indices: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired,\n    labelOffset: PropTypes.number.isRequired,\n\n    theme: PropTypes.object.isRequired\n\n}, motionPropTypes);\n\nexport default pure(RadarGridLabels);"]},"metadata":{},"sourceType":"module"}