{"ast":null,"code":"var _jsxFileName=\"/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/src/components/CustomCheckbox/CustomCheckbox.jsx\";/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/import React,{Component}from\"react\";class CustomCheckbox extends Component{constructor(props){super(props);this.state={is_checked:props.isChecked?true:false};this.handleClick=this.handleClick.bind(this);}handleClick(){this.setState({is_checked:!this.state.is_checked});}render(){const{isChecked,number,label,inline,...rest}=this.props;const classes=inline!==undefined?\"checkbox checkbox-inline\":\"checkbox\";return/*#__PURE__*/React.createElement(\"div\",{className:classes,__self:this,__source:{fileName:_jsxFileName,lineNumber:36,columnNumber:7}},/*#__PURE__*/React.createElement(\"input\",Object.assign({id:number,type:\"checkbox\",onChange:this.handleClick,checked:this.state.is_checked},rest,{__self:this,__source:{fileName:_jsxFileName,lineNumber:37,columnNumber:9}})),/*#__PURE__*/React.createElement(\"label\",{htmlFor:number,__self:this,__source:{fileName:_jsxFileName,lineNumber:44,columnNumber:9}},label));}}export default CustomCheckbox;","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/src/components/CustomCheckbox/CustomCheckbox.jsx"],"names":["React","Component","CustomCheckbox","constructor","props","state","is_checked","isChecked","handleClick","bind","setState","render","number","label","inline","rest","classes","undefined"],"mappings":"oJAAA;;;;;;;;;;;;;;;;EAiBA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,KAAMC,CAAAA,cAAN,QAA6BD,CAAAA,SAAU,CACrCE,WAAW,CAACC,KAAD,CAAQ,CACjB,MAAMA,KAAN,EACA,KAAKC,KAAL,CAAa,CACXC,UAAU,CAAEF,KAAK,CAACG,SAAN,CAAkB,IAAlB,CAAyB,KAD1B,CAAb,CAGA,KAAKC,WAAL,CAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB,CACD,CACDD,WAAW,EAAG,CACZ,KAAKE,QAAL,CAAc,CAAEJ,UAAU,CAAE,CAAC,KAAKD,KAAL,CAAWC,UAA1B,CAAd,EACD,CACDK,MAAM,EAAG,CACP,KAAM,CAAEJ,SAAF,CAAaK,MAAb,CAAqBC,KAArB,CAA4BC,MAA5B,CAAoC,GAAGC,IAAvC,EAAgD,KAAKX,KAA3D,CACA,KAAMY,CAAAA,OAAO,CACXF,MAAM,GAAKG,SAAX,CAAuB,0BAAvB,CAAoD,UADtD,CAEA,mBACE,2BAAK,SAAS,CAAED,OAAhB,yFACE,2CACE,EAAE,CAAEJ,MADN,CAEE,IAAI,CAAC,UAFP,CAGE,QAAQ,CAAE,KAAKJ,WAHjB,CAIE,OAAO,CAAE,KAAKH,KAAL,CAAWC,UAJtB,EAKMS,IALN,8EADF,cAQE,6BAAO,OAAO,CAAEH,MAAhB,4EAAyBC,KAAzB,CARF,CADF,CAYD,CA3BoC,CA8BvC,cAAeX,CAAAA,cAAf","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\n\nclass CustomCheckbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      is_checked: props.isChecked ? true : false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick() {\n    this.setState({ is_checked: !this.state.is_checked });\n  }\n  render() {\n    const { isChecked, number, label, inline, ...rest } = this.props;\n    const classes =\n      inline !== undefined ? \"checkbox checkbox-inline\" : \"checkbox\";\n    return (\n      <div className={classes}>\n        <input\n          id={number}\n          type=\"checkbox\"\n          onChange={this.handleClick}\n          checked={this.state.is_checked}\n          {...rest}\n        />\n        <label htmlFor={number}>{label}</label>\n      </div>\n    );\n  }\n}\n\nexport default CustomCheckbox;\n"]},"metadata":{},"sourceType":"module"}