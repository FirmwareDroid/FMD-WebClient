{"ast":null,"code":"import _uniq from 'lodash/uniq';\nimport _sumBy from 'lodash/sumBy';\nimport _max from 'lodash/max';\nimport _min from 'lodash/min';\nimport _range from 'lodash/range';\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { scalePoint, scaleLinear } from 'd3-scale';\n/**\n * Generates X scale.\n *\n * @param {Array.<Object>} data\n * @param {number}         width\n * @returns {Function}\n */\n\nexport var getXScale = function getXScale(data, width) {\n  var xLengths = _uniq(data.map(function (_ref) {\n    var data = _ref.data;\n    return data.length;\n  }));\n\n  if (xLengths.length > 1) {\n    throw new Error(['Found inconsitent data for x,', 'expecting all series to have same length', 'but found: ' + xLengths.join(', ')].join(' '));\n  }\n\n  return scalePoint().range([0, width]).domain(data[0].data.map(function (_ref2) {\n    var x = _ref2.x;\n    return x;\n  }));\n};\n/**\n * Generates Y scale for line chart.\n *\n * @param {Array.<Object>} data\n * @param {number}         height\n * @param {number|string}  minValue\n * @param {number|string}  maxValue\n * @returns {Function}\n */\n\nexport var getYScale = function getYScale(data, height, minValue, maxValue) {\n  var minY = minValue;\n\n  if (minValue === 'auto') {\n    minY = _min(data.map(function (serie) {\n      return _min(serie.data.map(function (d) {\n        return d.y;\n      }));\n    }));\n  }\n\n  var maxY = maxValue;\n\n  if (maxValue === 'auto') {\n    maxY = _max(data.map(function (serie) {\n      return _max(serie.data.map(function (d) {\n        return d.y;\n      }));\n    }));\n  }\n\n  return scaleLinear().rangeRound([height, 0]).domain([minY, maxY]);\n};\n/**\n * Generates Y scale for stacked line chart.\n *\n * @param {Array.<Object>} data\n * @param {Object}         xScale\n * @param {number}         height\n * @param {number|string}  minValue\n * @param {number|string}  maxValue\n * @returns {Function}\n */\n\nexport var getStackedYScale = function getStackedYScale(data, xScale, height, minValue, maxValue) {\n  var minY = minValue;\n\n  if (minValue === 'auto') {\n    minY = _min(data.map(function (serie) {\n      return _min(serie.data.map(function (d) {\n        return d.y;\n      }));\n    }));\n  }\n\n  var maxY = maxValue;\n\n  if (maxValue === 'auto') {\n    maxY = _max(_range(xScale.domain().length).map(function (i) {\n      return _sumBy(data, function (serie) {\n        return serie.data[i].y;\n      });\n    }));\n  }\n\n  return scaleLinear().rangeRound([height, 0]).domain([minY, maxY]);\n};\n/**\n * Generates stacked x/y scales.\n *\n * @param {Array}         data\n * @param {number}        width\n * @param {number}        height\n * @param {number|string} minY\n * @param {number|string} maxY\n * @return {{ xScale: Function, yScale: Function }}\n */\n\nexport var getStackedScales = function getStackedScales(_ref3) {\n  var data = _ref3.data,\n      width = _ref3.width,\n      height = _ref3.height,\n      minY = _ref3.minY,\n      maxY = _ref3.maxY;\n  var xScale = getXScale(data, width);\n  var yScale = getStackedYScale(data, xScale, height, minY, maxY);\n  return {\n    xScale: xScale,\n    yScale: yScale\n  };\n};\n/**\n * Generates non stacked x/ scales\n *\n * @param {Array}         data\n * @param {number}        width\n * @param {number}        height\n * @param {number|string} minY\n * @param {number|string} maxY\n * @return {{ xScale: Function, yScale: Function }}\n */\n\nexport var getScales = function getScales(_ref4) {\n  var data = _ref4.data,\n      width = _ref4.width,\n      height = _ref4.height,\n      minY = _ref4.minY,\n      maxY = _ref4.maxY;\n  var xScale = getXScale(data, width);\n  var yScale = getYScale(data, height, minY, maxY);\n  return {\n    xScale: xScale,\n    yScale: yScale\n  };\n};\n/**\n * Generates x/y scales & lines for line chart.\n *\n * @param {Array.<Object>} data\n * @param {Function}       xScale\n * @param {Function}       yScale\n * @param {Function}       color\n * @return {{ xScale: Function, yScale: Function, lines: Array.<Object> }}\n */\n\nexport var generateLines = function generateLines(data, xScale, yScale, color) {\n  return data.map(function (serie) {\n    var id = serie.id,\n        serieData = serie.data;\n    return {\n      id: id,\n      color: color(serie),\n      data: serie,\n      points: serieData.map(function (d) {\n        return Object.assign({}, d, {\n          value: d.y,\n          x: xScale(d.x),\n          y: yScale(d.y)\n        });\n      })\n    };\n  });\n};\n/**\n * Generates x/y scales & lines for stacked line chart.\n *\n * @param {Array.<Object>} data\n * @param {Function}       xScale\n * @param {Function}       yScale\n * @param {Function}       color\n * @return {{ xScale: Function, yScale: Function, lines: Array.<Object> }}\n */\n\nexport var generateStackedLines = function generateStackedLines(data, xScale, yScale, color) {\n  return data.reduce(function (acc, serie, serieIndex) {\n    var previousPoints = serieIndex === 0 ? null : acc[serieIndex - 1].points;\n    var id = serie.id,\n        serieData = serie.data;\n    return [].concat(acc, [{\n      id: id,\n      color: color(serie),\n      data: serie,\n      points: serieData.map(function (d, i) {\n        if (!previousPoints) {\n          return Object.assign({}, d, {\n            value: d.y,\n            x: d.x,\n            y: d.y\n          });\n        }\n\n        return Object.assign({}, d, {\n          value: d.y,\n          x: d.x,\n          y: d.y + previousPoints[i].accY\n        });\n      }).map(function (d) {\n        return {\n          key: d.x,\n          value: d.value,\n          accY: d.y,\n          x: xScale(d.x),\n          y: yScale(d.y)\n        };\n      })\n    }]);\n  }, []);\n};","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/lib/charts/line/index.js"],"names":["_uniq","_sumBy","_max","_min","_range","scalePoint","scaleLinear","getXScale","data","width","xLengths","map","_ref","length","Error","join","range","domain","_ref2","x","getYScale","height","minValue","maxValue","minY","serie","d","y","maxY","rangeRound","getStackedYScale","xScale","i","getStackedScales","_ref3","yScale","getScales","_ref4","generateLines","color","id","serieData","points","Object","assign","value","generateStackedLines","reduce","acc","serieIndex","previousPoints","concat","accY","key"],"mappings":"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","sourcesContent":["import _uniq from 'lodash/uniq';\nimport _sumBy from 'lodash/sumBy';\nimport _max from 'lodash/max';\nimport _min from 'lodash/min';\nimport _range from 'lodash/range'; /*\n                                    * This file is part of the nivo project.\n                                    *\n                                    * Copyright 2016-present, RaphaÃ«l Benitte.\n                                    *\n                                    * For the full copyright and license information, please view the LICENSE\n                                    * file that was distributed with this source code.\n                                    */\n\nimport { scalePoint, scaleLinear } from 'd3-scale';\n\n/**\n * Generates X scale.\n *\n * @param {Array.<Object>} data\n * @param {number}         width\n * @returns {Function}\n */\nexport var getXScale = function getXScale(data, width) {\n    var xLengths = _uniq(data.map(function (_ref) {\n        var data = _ref.data;\n        return data.length;\n    }));\n    if (xLengths.length > 1) {\n        throw new Error(['Found inconsitent data for x,', 'expecting all series to have same length', 'but found: ' + xLengths.join(', ')].join(' '));\n    }\n\n    return scalePoint().range([0, width]).domain(data[0].data.map(function (_ref2) {\n        var x = _ref2.x;\n        return x;\n    }));\n};\n\n/**\n * Generates Y scale for line chart.\n *\n * @param {Array.<Object>} data\n * @param {number}         height\n * @param {number|string}  minValue\n * @param {number|string}  maxValue\n * @returns {Function}\n */\nexport var getYScale = function getYScale(data, height, minValue, maxValue) {\n    var minY = minValue;\n    if (minValue === 'auto') {\n        minY = _min(data.map(function (serie) {\n            return _min(serie.data.map(function (d) {\n                return d.y;\n            }));\n        }));\n    }\n\n    var maxY = maxValue;\n    if (maxValue === 'auto') {\n        maxY = _max(data.map(function (serie) {\n            return _max(serie.data.map(function (d) {\n                return d.y;\n            }));\n        }));\n    }\n\n    return scaleLinear().rangeRound([height, 0]).domain([minY, maxY]);\n};\n\n/**\n * Generates Y scale for stacked line chart.\n *\n * @param {Array.<Object>} data\n * @param {Object}         xScale\n * @param {number}         height\n * @param {number|string}  minValue\n * @param {number|string}  maxValue\n * @returns {Function}\n */\nexport var getStackedYScale = function getStackedYScale(data, xScale, height, minValue, maxValue) {\n    var minY = minValue;\n    if (minValue === 'auto') {\n        minY = _min(data.map(function (serie) {\n            return _min(serie.data.map(function (d) {\n                return d.y;\n            }));\n        }));\n    }\n\n    var maxY = maxValue;\n    if (maxValue === 'auto') {\n        maxY = _max(_range(xScale.domain().length).map(function (i) {\n            return _sumBy(data, function (serie) {\n                return serie.data[i].y;\n            });\n        }));\n    }\n\n    return scaleLinear().rangeRound([height, 0]).domain([minY, maxY]);\n};\n\n/**\n * Generates stacked x/y scales.\n *\n * @param {Array}         data\n * @param {number}        width\n * @param {number}        height\n * @param {number|string} minY\n * @param {number|string} maxY\n * @return {{ xScale: Function, yScale: Function }}\n */\nexport var getStackedScales = function getStackedScales(_ref3) {\n    var data = _ref3.data,\n        width = _ref3.width,\n        height = _ref3.height,\n        minY = _ref3.minY,\n        maxY = _ref3.maxY;\n\n    var xScale = getXScale(data, width);\n    var yScale = getStackedYScale(data, xScale, height, minY, maxY);\n\n    return { xScale: xScale, yScale: yScale };\n};\n\n/**\n * Generates non stacked x/ scales\n *\n * @param {Array}         data\n * @param {number}        width\n * @param {number}        height\n * @param {number|string} minY\n * @param {number|string} maxY\n * @return {{ xScale: Function, yScale: Function }}\n */\nexport var getScales = function getScales(_ref4) {\n    var data = _ref4.data,\n        width = _ref4.width,\n        height = _ref4.height,\n        minY = _ref4.minY,\n        maxY = _ref4.maxY;\n\n    var xScale = getXScale(data, width);\n    var yScale = getYScale(data, height, minY, maxY);\n\n    return { xScale: xScale, yScale: yScale };\n};\n\n/**\n * Generates x/y scales & lines for line chart.\n *\n * @param {Array.<Object>} data\n * @param {Function}       xScale\n * @param {Function}       yScale\n * @param {Function}       color\n * @return {{ xScale: Function, yScale: Function, lines: Array.<Object> }}\n */\nexport var generateLines = function generateLines(data, xScale, yScale, color) {\n    return data.map(function (serie) {\n        var id = serie.id,\n            serieData = serie.data;\n\n\n        return {\n            id: id,\n            color: color(serie),\n            data: serie,\n            points: serieData.map(function (d) {\n                return Object.assign({}, d, {\n                    value: d.y,\n                    x: xScale(d.x),\n                    y: yScale(d.y)\n                });\n            })\n        };\n    });\n};\n\n/**\n * Generates x/y scales & lines for stacked line chart.\n *\n * @param {Array.<Object>} data\n * @param {Function}       xScale\n * @param {Function}       yScale\n * @param {Function}       color\n * @return {{ xScale: Function, yScale: Function, lines: Array.<Object> }}\n */\nexport var generateStackedLines = function generateStackedLines(data, xScale, yScale, color) {\n    return data.reduce(function (acc, serie, serieIndex) {\n        var previousPoints = serieIndex === 0 ? null : acc[serieIndex - 1].points;\n\n        var id = serie.id,\n            serieData = serie.data;\n\n\n        return [].concat(acc, [{\n            id: id,\n            color: color(serie),\n            data: serie,\n            points: serieData.map(function (d, i) {\n                if (!previousPoints) {\n                    return Object.assign({}, d, {\n                        value: d.y,\n                        x: d.x,\n                        y: d.y\n                    });\n                }\n\n                return Object.assign({}, d, {\n                    value: d.y,\n                    x: d.x,\n                    y: d.y + previousPoints[i].accY\n                });\n            }).map(function (d) {\n                return {\n                    key: d.x,\n                    value: d.value,\n                    accY: d.y,\n                    x: xScale(d.x),\n                    y: yScale(d.y)\n                };\n            })\n        }]);\n    }, []);\n};"]},"metadata":{},"sourceType":"module"}