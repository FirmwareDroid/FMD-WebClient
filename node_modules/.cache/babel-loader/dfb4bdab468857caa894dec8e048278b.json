{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nexport var LinearGradient = function LinearGradient(_ref) {\n  var id = _ref.id,\n      colors = _ref.colors;\n  return React.createElement('linearGradient', {\n    id: id,\n    x1: 0,\n    x2: 0,\n    y1: 0,\n    y2: 1\n  }, colors.map(function (_ref2) {\n    var offset = _ref2.offset,\n        color = _ref2.color,\n        opacity = _ref2.opacity;\n    return React.createElement('stop', {\n      key: offset,\n      offset: offset + '%',\n      stopColor: color,\n      stopOpacity: opacity !== undefined ? opacity : 1\n    });\n  }));\n};\nLinearGradient.propTypes = {\n  id: PropTypes.string.isRequired,\n  colors: PropTypes.arrayOf(PropTypes.shape({\n    offset: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired\n  })).isRequired\n};\nexport var linearGradientDef = function linearGradientDef(id, colors) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return _extends({\n    id: id,\n    type: 'linearGradient',\n    colors: colors\n  }, options);\n};","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/components/defs/gradients/LinearGradient.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","React","PropTypes","LinearGradient","_ref","id","colors","createElement","x1","x2","y1","y2","map","_ref2","offset","color","opacity","stopColor","stopOpacity","undefined","propTypes","string","isRequired","arrayOf","shape","number","linearGradientDef","options","type"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,SAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,SAAOL,MAAP;AAAgB,CAAhQ;AAEA;;;;;;;;;;AAQA,OAAOS,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,IAAxB,EAA8B;AACtD,MAAIC,EAAE,GAAGD,IAAI,CAACC,EAAd;AAAA,MACIC,MAAM,GAAGF,IAAI,CAACE,MADlB;AAEA,SAAOL,KAAK,CAACM,aAAN,CACH,gBADG,EAEH;AAAEF,IAAAA,EAAE,EAAEA,EAAN;AAAUG,IAAAA,EAAE,EAAE,CAAd;AAAiBC,IAAAA,EAAE,EAAE,CAArB;AAAwBC,IAAAA,EAAE,EAAE,CAA5B;AAA+BC,IAAAA,EAAE,EAAE;AAAnC,GAFG,EAGHL,MAAM,CAACM,GAAP,CAAW,UAAUC,KAAV,EAAiB;AACxB,QAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AAAA,QACIC,KAAK,GAAGF,KAAK,CAACE,KADlB;AAAA,QAEIC,OAAO,GAAGH,KAAK,CAACG,OAFpB;AAGA,WAAOf,KAAK,CAACM,aAAN,CAAoB,MAApB,EAA4B;AAC/BV,MAAAA,GAAG,EAAEiB,MAD0B;AAE/BA,MAAAA,MAAM,EAAEA,MAAM,GAAG,GAFc;AAG/BG,MAAAA,SAAS,EAAEF,KAHoB;AAI/BG,MAAAA,WAAW,EAAEF,OAAO,KAAKG,SAAZ,GAAwBH,OAAxB,GAAkC;AAJhB,KAA5B,CAAP;AAMH,GAVD,CAHG,CAAP;AAeH,CAlBM;AAoBPb,cAAc,CAACiB,SAAf,GAA2B;AACvBf,EAAAA,EAAE,EAAEH,SAAS,CAACmB,MAAV,CAAiBC,UADE;AAEvBhB,EAAAA,MAAM,EAAEJ,SAAS,CAACqB,OAAV,CAAkBrB,SAAS,CAACsB,KAAV,CAAgB;AACtCV,IAAAA,MAAM,EAAEZ,SAAS,CAACuB,MAAV,CAAiBH,UADa;AAEtCP,IAAAA,KAAK,EAAEb,SAAS,CAACmB,MAAV,CAAiBC;AAFc,GAAhB,CAAlB,EAGJA;AALmB,CAA3B;AAQA,OAAO,IAAII,iBAAiB,GAAG,SAASA,iBAAT,CAA2BrB,EAA3B,EAA+BC,MAA/B,EAAuC;AAClE,MAAIqB,OAAO,GAAGjC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiByB,SAAzC,GAAqDzB,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,SAAOL,QAAQ,CAAC;AACZgB,IAAAA,EAAE,EAAEA,EADQ;AAEZuB,IAAAA,IAAI,EAAE,gBAFM;AAGZtB,IAAAA,MAAM,EAAEA;AAHI,GAAD,EAIZqB,OAJY,CAAf;AAKH,CAPM","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport var LinearGradient = function LinearGradient(_ref) {\n    var id = _ref.id,\n        colors = _ref.colors;\n    return React.createElement(\n        'linearGradient',\n        { id: id, x1: 0, x2: 0, y1: 0, y2: 1 },\n        colors.map(function (_ref2) {\n            var offset = _ref2.offset,\n                color = _ref2.color,\n                opacity = _ref2.opacity;\n            return React.createElement('stop', {\n                key: offset,\n                offset: offset + '%',\n                stopColor: color,\n                stopOpacity: opacity !== undefined ? opacity : 1\n            });\n        })\n    );\n};\n\nLinearGradient.propTypes = {\n    id: PropTypes.string.isRequired,\n    colors: PropTypes.arrayOf(PropTypes.shape({\n        offset: PropTypes.number.isRequired,\n        color: PropTypes.string.isRequired\n    })).isRequired\n};\n\nexport var linearGradientDef = function linearGradientDef(id, colors) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return _extends({\n        id: id,\n        type: 'linearGradient',\n        colors: colors\n    }, options);\n};"]},"metadata":{},"sourceType":"module"}