{"ast":null,"code":"/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport defaultProps from 'recompose/defaultProps';\nimport setPropTypes from 'recompose/setPropTypes';\nimport withPropsOnChange from 'recompose/withPropsOnChange';\nimport { hierarchy } from 'd3-hierarchy';\nimport { getAccessorFor } from '../lib/propertiesConverters';\n/**\n * This HOC watch hierarchical data props change\n * and returns the corresponding summed hierarchy.\n * Using it prevent from having a new ref each time\n * we pass through the component, useful for shallow comparison.\n */\n\nexport default (function () {\n  var _defaultProps, _setPropTypes;\n\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$srcKey = _ref.srcKey,\n      srcKey = _ref$srcKey === undefined ? 'root' : _ref$srcKey,\n      _ref$destKey = _ref.destKey,\n      destKey = _ref$destKey === undefined ? 'root' : _ref$destKey,\n      _ref$valueKey = _ref.valueKey,\n      valueKey = _ref$valueKey === undefined ? 'value' : _ref$valueKey,\n      _ref$valueDefault = _ref.valueDefault,\n      valueDefault = _ref$valueDefault === undefined ? 'value' : _ref$valueDefault;\n\n  return compose(defaultProps((_defaultProps = {}, _defaultProps[valueKey] = valueDefault, _defaultProps)), setPropTypes((_setPropTypes = {}, _setPropTypes[srcKey] = PropTypes.object.isRequired, _setPropTypes[valueKey] = PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired, _setPropTypes)), withPropsOnChange([srcKey, valueKey], function (props) {\n    var _ref2;\n\n    return _ref2 = {}, _ref2[destKey] = hierarchy(props[srcKey]).sum(getAccessorFor(props[valueKey])), _ref2;\n  }));\n});","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/hocs/withHierarchy.js"],"names":["PropTypes","compose","defaultProps","setPropTypes","withPropsOnChange","hierarchy","getAccessorFor","_defaultProps","_setPropTypes","_ref","arguments","length","undefined","_ref$srcKey","srcKey","_ref$destKey","destKey","_ref$valueKey","valueKey","_ref$valueDefault","valueDefault","object","isRequired","oneOfType","string","func","props","_ref2","sum"],"mappings":"AAAA;;;;;;;;AAQA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,cAAT,QAA+B,6BAA/B;AAEA;;;;;;;AAMA,gBAAgB,YAAY;AACxB,MAAIC,aAAJ,EAAmBC,aAAnB;;AAEA,MAAIC,IAAI,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E;AAAA,MACIG,WAAW,GAAGJ,IAAI,CAACK,MADvB;AAAA,MAEIA,MAAM,GAAGD,WAAW,KAAKD,SAAhB,GAA4B,MAA5B,GAAqCC,WAFlD;AAAA,MAGIE,YAAY,GAAGN,IAAI,CAACO,OAHxB;AAAA,MAIIA,OAAO,GAAGD,YAAY,KAAKH,SAAjB,GAA6B,MAA7B,GAAsCG,YAJpD;AAAA,MAKIE,aAAa,GAAGR,IAAI,CAACS,QALzB;AAAA,MAMIA,QAAQ,GAAGD,aAAa,KAAKL,SAAlB,GAA8B,OAA9B,GAAwCK,aANvD;AAAA,MAOIE,iBAAiB,GAAGV,IAAI,CAACW,YAP7B;AAAA,MAQIA,YAAY,GAAGD,iBAAiB,KAAKP,SAAtB,GAAkC,OAAlC,GAA4CO,iBAR/D;;AAUA,SAAOlB,OAAO,CAACC,YAAY,EAAEK,aAAa,GAAG,EAAhB,EAAoBA,aAAa,CAACW,QAAD,CAAb,GAA0BE,YAA9C,EAA4Db,aAA9D,EAAb,EAA4FJ,YAAY,EAAEK,aAAa,GAAG,EAAhB,EAAoBA,aAAa,CAACM,MAAD,CAAb,GAAwBd,SAAS,CAACqB,MAAV,CAAiBC,UAA7D,EAAyEd,aAAa,CAACU,QAAD,CAAb,GAA0BlB,SAAS,CAACuB,SAAV,CAAoB,CAACvB,SAAS,CAACwB,MAAX,EAAmBxB,SAAS,CAACyB,IAA7B,CAApB,EAAwDH,UAA3J,EAAuKd,aAAzK,EAAxG,EAAkSJ,iBAAiB,CAAC,CAACU,MAAD,EAASI,QAAT,CAAD,EAAqB,UAAUQ,KAAV,EAAiB;AACnW,QAAIC,KAAJ;;AAEA,WAAOA,KAAK,GAAG,EAAR,EAAYA,KAAK,CAACX,OAAD,CAAL,GAAiBX,SAAS,CAACqB,KAAK,CAACZ,MAAD,CAAN,CAAT,CAAyBc,GAAzB,CAA6BtB,cAAc,CAACoB,KAAK,CAACR,QAAD,CAAN,CAA3C,CAA7B,EAA4FS,KAAnG;AACH,GAJgU,CAAnT,CAAd;AAKH,CAlBD","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport defaultProps from 'recompose/defaultProps';\nimport setPropTypes from 'recompose/setPropTypes';\nimport withPropsOnChange from 'recompose/withPropsOnChange';\nimport { hierarchy } from 'd3-hierarchy';\nimport { getAccessorFor } from '../lib/propertiesConverters';\n\n/**\n * This HOC watch hierarchical data props change\n * and returns the corresponding summed hierarchy.\n * Using it prevent from having a new ref each time\n * we pass through the component, useful for shallow comparison.\n */\nexport default (function () {\n    var _defaultProps, _setPropTypes;\n\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$srcKey = _ref.srcKey,\n        srcKey = _ref$srcKey === undefined ? 'root' : _ref$srcKey,\n        _ref$destKey = _ref.destKey,\n        destKey = _ref$destKey === undefined ? 'root' : _ref$destKey,\n        _ref$valueKey = _ref.valueKey,\n        valueKey = _ref$valueKey === undefined ? 'value' : _ref$valueKey,\n        _ref$valueDefault = _ref.valueDefault,\n        valueDefault = _ref$valueDefault === undefined ? 'value' : _ref$valueDefault;\n\n    return compose(defaultProps((_defaultProps = {}, _defaultProps[valueKey] = valueDefault, _defaultProps)), setPropTypes((_setPropTypes = {}, _setPropTypes[srcKey] = PropTypes.object.isRequired, _setPropTypes[valueKey] = PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired, _setPropTypes)), withPropsOnChange([srcKey, valueKey], function (props) {\n        var _ref2;\n\n        return _ref2 = {}, _ref2[destKey] = hierarchy(props[srcKey]).sum(getAccessorFor(props[valueKey])), _ref2;\n    }));\n});"]},"metadata":{},"sourceType":"module"}