{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n\nimport PropTypes from 'prop-types';\nimport noop from '../../../lib/noop';\nimport { treeMapTilePropType, defsPropTypes } from '../../../props';\nimport TreeMapNode from './TreeMapNode';\nimport TreeMapHtmlNode from './TreeMapHtmlNode';\n/*—————————————————————————————————————————————————————————————————————————————\n\n  Prop types\n\n—————————————————————————————————————————————————————————————————————————————*/\n\nvar commonPropTypes = {\n  // data\n  // `root` managed by `withHierarchy()` HOC\n  identity: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  // dimensions managed by `withDimensions()` HOC\n  // styling\n  // theme managed by `withTheme()` HOC\n  // colors managed by `withColors()` HOC\n  leavesOnly: PropTypes.bool.isRequired,\n  tile: treeMapTilePropType.isRequired,\n  innerPadding: PropTypes.number.isRequired,\n  outerPadding: PropTypes.number.isRequired,\n  // labels\n  enableLabel: PropTypes.bool.isRequired,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  labelFormat: PropTypes.string,\n  labelSkipSize: PropTypes.number.isRequired,\n  orientLabel: PropTypes.bool.isRequired,\n  // border\n  borderWidth: PropTypes.number.isRequired,\n  borderColor: PropTypes.any.isRequired,\n  // interactivity\n  isInteractive: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired\n};\nexport var TreeMapPropTypes = _extends({}, commonPropTypes, {\n  nodeComponent: PropTypes.func.isRequired\n}, defsPropTypes);\nexport var TreeMapPlaceholdersPropTypes = TreeMapPropTypes;\nexport var TreeMapHtmlPropTypes = _extends({}, commonPropTypes, {\n  nodeComponent: PropTypes.func.isRequired\n});\nexport var TreeMapHtmlCanvasPropTypes = _extends({}, commonPropTypes, {\n  pixelRatio: PropTypes.number.isRequired\n  /*—————————————————————————————————————————————————————————————————————————————\n  \n    Default props\n  \n  —————————————————————————————————————————————————————————————————————————————*/\n\n});\nvar commonDefaultProps = {\n  // data\n  identity: 'id',\n  tile: 'squarify',\n  leavesOnly: false,\n  // labels\n  enableLabel: true,\n  label: 'id',\n  labelSkipSize: 0,\n  labelTextColor: 'inherit:darker(1)',\n  orientLabel: true,\n  innerPadding: 0,\n  outerPadding: 0,\n  borderWidth: 0,\n  borderColor: 'inherit',\n  // interactivity\n  isInteractive: true,\n  onClick: noop\n};\nexport var TreeMapDefaultProps = _extends({}, commonDefaultProps, {\n  nodeComponent: TreeMapNode,\n  defs: [],\n  fill: []\n});\nexport var TreeMapPlaceholdersDefaultProps = TreeMapDefaultProps;\nexport var TreeMapHtmlDefaultProps = _extends({}, commonDefaultProps, {\n  nodeComponent: TreeMapHtmlNode\n});\nexport var TreeMapCanvasDefaultProps = _extends({}, commonDefaultProps, {\n  pixelRatio: global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1\n});","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/components/charts/treemap/props.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","PropTypes","noop","treeMapTilePropType","defsPropTypes","TreeMapNode","TreeMapHtmlNode","commonPropTypes","identity","oneOfType","string","func","isRequired","leavesOnly","bool","tile","innerPadding","number","outerPadding","enableLabel","label","labelFormat","labelSkipSize","orientLabel","borderWidth","borderColor","any","isInteractive","onClick","TreeMapPropTypes","nodeComponent","TreeMapPlaceholdersPropTypes","TreeMapHtmlPropTypes","TreeMapHtmlCanvasPropTypes","pixelRatio","commonDefaultProps","labelTextColor","TreeMapDefaultProps","defs","fill","TreeMapPlaceholdersDefaultProps","TreeMapHtmlDefaultProps","TreeMapCanvasDefaultProps","global","window","devicePixelRatio"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types';\nimport noop from '../../../lib/noop';\nimport { treeMapTilePropType, defsPropTypes } from '../../../props';\nimport TreeMapNode from './TreeMapNode';\nimport TreeMapHtmlNode from './TreeMapHtmlNode';\n\n/*—————————————————————————————————————————————————————————————————————————————\n\n  Prop types\n\n—————————————————————————————————————————————————————————————————————————————*/\n\nvar commonPropTypes = {\n    // data\n    // `root` managed by `withHierarchy()` HOC\n    identity: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n\n    // dimensions managed by `withDimensions()` HOC\n\n    // styling\n    // theme managed by `withTheme()` HOC\n    // colors managed by `withColors()` HOC\n\n    leavesOnly: PropTypes.bool.isRequired,\n    tile: treeMapTilePropType.isRequired,\n    innerPadding: PropTypes.number.isRequired,\n    outerPadding: PropTypes.number.isRequired,\n\n    // labels\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelFormat: PropTypes.string,\n    labelSkipSize: PropTypes.number.isRequired,\n    orientLabel: PropTypes.bool.isRequired,\n\n    // border\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.any.isRequired,\n\n    // interactivity\n    isInteractive: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nexport var TreeMapPropTypes = _extends({}, commonPropTypes, {\n    nodeComponent: PropTypes.func.isRequired\n}, defsPropTypes);\n\nexport var TreeMapPlaceholdersPropTypes = TreeMapPropTypes;\n\nexport var TreeMapHtmlPropTypes = _extends({}, commonPropTypes, {\n    nodeComponent: PropTypes.func.isRequired\n});\n\nexport var TreeMapHtmlCanvasPropTypes = _extends({}, commonPropTypes, {\n    pixelRatio: PropTypes.number.isRequired\n\n    /*—————————————————————————————————————————————————————————————————————————————\n    \n      Default props\n    \n    —————————————————————————————————————————————————————————————————————————————*/\n\n});var commonDefaultProps = {\n    // data\n    identity: 'id',\n\n    tile: 'squarify',\n    leavesOnly: false,\n\n    // labels\n    enableLabel: true,\n    label: 'id',\n    labelSkipSize: 0,\n    labelTextColor: 'inherit:darker(1)',\n    orientLabel: true,\n\n    innerPadding: 0,\n    outerPadding: 0,\n\n    borderWidth: 0,\n    borderColor: 'inherit',\n\n    // interactivity\n    isInteractive: true,\n    onClick: noop\n};\n\nexport var TreeMapDefaultProps = _extends({}, commonDefaultProps, {\n    nodeComponent: TreeMapNode,\n    defs: [],\n    fill: []\n});\n\nexport var TreeMapPlaceholdersDefaultProps = TreeMapDefaultProps;\n\nexport var TreeMapHtmlDefaultProps = _extends({}, commonDefaultProps, {\n    nodeComponent: TreeMapHtmlNode\n});\n\nexport var TreeMapCanvasDefaultProps = _extends({}, commonDefaultProps, {\n    pixelRatio: global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1\n});"]},"metadata":{},"sourceType":"module"}