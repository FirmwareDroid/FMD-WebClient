{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n\nimport React from 'react';\nimport Container from '../Container';\nimport SvgWrapper from '../SvgWrapper';\nimport enhance from './enhance';\nimport { ChordPropTypes } from './props';\nimport ChordRibbons from './ChordRibbons';\nimport ChordArcs from './ChordArcs';\nimport ChordLabels from './ChordLabels';\n\nvar Chord = function Chord(_ref) {\n  var margin = _ref.margin,\n      width = _ref.width,\n      height = _ref.height,\n      outerWidth = _ref.outerWidth,\n      outerHeight = _ref.outerHeight,\n      arcBorderWidth = _ref.arcBorderWidth,\n      getArcBorderColor = _ref.getArcBorderColor,\n      ribbonBorderWidth = _ref.ribbonBorderWidth,\n      getRibbonBorderColor = _ref.getRibbonBorderColor,\n      enableLabel = _ref.enableLabel,\n      getLabel = _ref.getLabel,\n      labelOffset = _ref.labelOffset,\n      labelRotation = _ref.labelRotation,\n      getLabelTextColor = _ref.getLabelTextColor,\n      arcGenerator = _ref.arcGenerator,\n      ribbonGenerator = _ref.ribbonGenerator,\n      theme = _ref.theme,\n      isInteractive = _ref.isInteractive,\n      tooltipFormat = _ref.tooltipFormat,\n      animate = _ref.animate,\n      motionDamping = _ref.motionDamping,\n      motionStiffness = _ref.motionStiffness,\n      ribbons = _ref.ribbons,\n      arcs = _ref.arcs,\n      radius = _ref.radius,\n      setCurrentArc = _ref.setCurrentArc,\n      setCurrentRibbon = _ref.setCurrentRibbon,\n      getArcOpacity = _ref.getArcOpacity,\n      getRibbonOpacity = _ref.getRibbonOpacity;\n  var centerX = width / 2;\n  var centerY = height / 2;\n  var motionProps = {\n    animate: animate,\n    motionDamping: motionDamping,\n    motionStiffness: motionStiffness\n  };\n  return React.createElement(Container, {\n    isInteractive: isInteractive,\n    theme: theme\n  }, function (_ref2) {\n    var showTooltip = _ref2.showTooltip,\n        hideTooltip = _ref2.hideTooltip;\n    return React.createElement(SvgWrapper, {\n      width: outerWidth,\n      height: outerHeight,\n      margin: margin\n    }, React.createElement('g', {\n      transform: 'translate(' + centerX + ', ' + centerY + ')'\n    }, React.createElement(ChordRibbons, _extends({\n      ribbons: ribbons,\n      shapeGenerator: ribbonGenerator,\n      borderWidth: ribbonBorderWidth,\n      getBorderColor: getRibbonBorderColor,\n      getOpacity: getRibbonOpacity,\n      setCurrent: setCurrentRibbon,\n      theme: theme,\n      tooltipFormat: tooltipFormat,\n      showTooltip: showTooltip,\n      hideTooltip: hideTooltip\n    }, motionProps)), React.createElement(ChordArcs, _extends({\n      arcs: arcs,\n      shapeGenerator: arcGenerator,\n      borderWidth: arcBorderWidth,\n      getBorderColor: getArcBorderColor,\n      getOpacity: getArcOpacity,\n      setCurrent: setCurrentArc,\n      theme: theme,\n      tooltipFormat: tooltipFormat,\n      showTooltip: showTooltip,\n      hideTooltip: hideTooltip\n    }, motionProps)), enableLabel && React.createElement(ChordLabels, _extends({\n      arcs: arcs,\n      radius: radius + labelOffset,\n      rotation: labelRotation,\n      getLabel: getLabel,\n      getColor: getLabelTextColor,\n      theme: theme\n    }, motionProps))));\n  });\n};\n\nChord.propTypes = ChordPropTypes;\nexport default enhance(Chord);","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/components/charts/chord/Chord.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","React","Container","SvgWrapper","enhance","ChordPropTypes","ChordRibbons","ChordArcs","ChordLabels","Chord","_ref","margin","width","height","outerWidth","outerHeight","arcBorderWidth","getArcBorderColor","ribbonBorderWidth","getRibbonBorderColor","enableLabel","getLabel","labelOffset","labelRotation","getLabelTextColor","arcGenerator","ribbonGenerator","theme","isInteractive","tooltipFormat","animate","motionDamping","motionStiffness","ribbons","arcs","radius","setCurrentArc","setCurrentRibbon","getArcOpacity","getRibbonOpacity","centerX","centerY","motionProps","createElement","_ref2","showTooltip","hideTooltip","transform","shapeGenerator","borderWidth","getBorderColor","getOpacity","setCurrent","rotation","getColor","propTypes"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react';\nimport Container from '../Container';\nimport SvgWrapper from '../SvgWrapper';\nimport enhance from './enhance';\nimport { ChordPropTypes } from './props';\nimport ChordRibbons from './ChordRibbons';\nimport ChordArcs from './ChordArcs';\nimport ChordLabels from './ChordLabels';\n\nvar Chord = function Chord(_ref) {\n    var margin = _ref.margin,\n        width = _ref.width,\n        height = _ref.height,\n        outerWidth = _ref.outerWidth,\n        outerHeight = _ref.outerHeight,\n        arcBorderWidth = _ref.arcBorderWidth,\n        getArcBorderColor = _ref.getArcBorderColor,\n        ribbonBorderWidth = _ref.ribbonBorderWidth,\n        getRibbonBorderColor = _ref.getRibbonBorderColor,\n        enableLabel = _ref.enableLabel,\n        getLabel = _ref.getLabel,\n        labelOffset = _ref.labelOffset,\n        labelRotation = _ref.labelRotation,\n        getLabelTextColor = _ref.getLabelTextColor,\n        arcGenerator = _ref.arcGenerator,\n        ribbonGenerator = _ref.ribbonGenerator,\n        theme = _ref.theme,\n        isInteractive = _ref.isInteractive,\n        tooltipFormat = _ref.tooltipFormat,\n        animate = _ref.animate,\n        motionDamping = _ref.motionDamping,\n        motionStiffness = _ref.motionStiffness,\n        ribbons = _ref.ribbons,\n        arcs = _ref.arcs,\n        radius = _ref.radius,\n        setCurrentArc = _ref.setCurrentArc,\n        setCurrentRibbon = _ref.setCurrentRibbon,\n        getArcOpacity = _ref.getArcOpacity,\n        getRibbonOpacity = _ref.getRibbonOpacity;\n\n    var centerX = width / 2;\n    var centerY = height / 2;\n\n    var motionProps = {\n        animate: animate,\n        motionDamping: motionDamping,\n        motionStiffness: motionStiffness\n    };\n\n    return React.createElement(\n        Container,\n        { isInteractive: isInteractive, theme: theme },\n        function (_ref2) {\n            var showTooltip = _ref2.showTooltip,\n                hideTooltip = _ref2.hideTooltip;\n\n            return React.createElement(\n                SvgWrapper,\n                { width: outerWidth, height: outerHeight, margin: margin },\n                React.createElement(\n                    'g',\n                    { transform: 'translate(' + centerX + ', ' + centerY + ')' },\n                    React.createElement(ChordRibbons, _extends({\n                        ribbons: ribbons,\n                        shapeGenerator: ribbonGenerator,\n                        borderWidth: ribbonBorderWidth,\n                        getBorderColor: getRibbonBorderColor,\n                        getOpacity: getRibbonOpacity,\n                        setCurrent: setCurrentRibbon,\n                        theme: theme,\n                        tooltipFormat: tooltipFormat,\n                        showTooltip: showTooltip,\n                        hideTooltip: hideTooltip\n                    }, motionProps)),\n                    React.createElement(ChordArcs, _extends({\n                        arcs: arcs,\n                        shapeGenerator: arcGenerator,\n                        borderWidth: arcBorderWidth,\n                        getBorderColor: getArcBorderColor,\n                        getOpacity: getArcOpacity,\n                        setCurrent: setCurrentArc,\n                        theme: theme,\n                        tooltipFormat: tooltipFormat,\n                        showTooltip: showTooltip,\n                        hideTooltip: hideTooltip\n                    }, motionProps)),\n                    enableLabel && React.createElement(ChordLabels, _extends({\n                        arcs: arcs,\n                        radius: radius + labelOffset,\n                        rotation: labelRotation,\n                        getLabel: getLabel,\n                        getColor: getLabelTextColor,\n                        theme: theme\n                    }, motionProps))\n                )\n            );\n        }\n    );\n};\n\nChord.propTypes = ChordPropTypes;\n\nexport default enhance(Chord);"]},"metadata":{},"sourceType":"module"}