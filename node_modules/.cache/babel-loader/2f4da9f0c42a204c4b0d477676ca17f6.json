{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n\nimport { treemap as d3Treemap } from 'd3-hierarchy';\nimport cloneDeep from 'lodash/cloneDeep';\nimport compose from 'recompose/compose';\nimport defaultProps from 'recompose/defaultProps';\nimport withPropsOnChange from 'recompose/withPropsOnChange';\nimport pure from 'recompose/pure';\nimport { withHierarchy, withDimensions, withTheme, withMotion, withColors } from '../../../hocs';\nimport { getAccessorFor, getLabelGenerator } from '../../../lib/propertiesConverters';\nimport { treeMapTileFromProp } from '../../../props';\nimport { getInheritedColorGenerator } from '../../../lib/colors';\nimport { computeNodePath } from '../../../lib/hierarchy';\nimport { bindDefs } from '../../../lib/defs';\nimport * as props from './props';\nvar commonEnhancers = [withHierarchy(), withDimensions(), withColors({\n  defaultColorBy: 'depth'\n}), withTheme(), withMotion(), withPropsOnChange(['identity'], function (_ref) {\n  var identity = _ref.identity;\n  return {\n    getIdentity: getAccessorFor(identity)\n  };\n}), withPropsOnChange(['borderColor'], function (_ref2) {\n  var borderColor = _ref2.borderColor;\n  return {\n    getBorderColor: getInheritedColorGenerator(borderColor)\n  };\n}), withPropsOnChange(['label', 'labelFormat'], function (_ref3) {\n  var label = _ref3.label,\n      labelFormat = _ref3.labelFormat;\n  return {\n    getLabel: getLabelGenerator(label, labelFormat)\n  };\n}), withPropsOnChange(['labelTextColor'], function (_ref4) {\n  var labelTextColor = _ref4.labelTextColor;\n  return {\n    getLabelTextColor: getInheritedColorGenerator(labelTextColor)\n  };\n}), withPropsOnChange(['width', 'height', 'tile', 'innerPadding', 'outerPadding'], function (_ref5) {\n  var width = _ref5.width,\n      height = _ref5.height,\n      tile = _ref5.tile,\n      innerPadding = _ref5.innerPadding,\n      outerPadding = _ref5.outerPadding;\n  return {\n    treemap: d3Treemap().size([width, height]).tile(treeMapTileFromProp(tile)).round(true).paddingInner(innerPadding).paddingOuter(outerPadding)\n  };\n}), withPropsOnChange(['root', 'treemap', 'leavesOnly', 'getIdentity', 'getColor'], function (_ref6) {\n  var _root = _ref6.root,\n      treemap = _ref6.treemap,\n      leavesOnly = _ref6.leavesOnly,\n      getIdentity = _ref6.getIdentity,\n      getColor = _ref6.getColor;\n  var root = cloneDeep(_root);\n  treemap(root);\n  var nodes = leavesOnly ? root.leaves() : root.descendants();\n  nodes = nodes.map(function (d) {\n    d.path = computeNodePath(d, getIdentity);\n    d.nodeHeight = d.height;\n    d.x = d.x0;\n    d.y = d.y0;\n    d.width = d.x1 - d.x0;\n    d.height = d.y1 - d.y0;\n    d.data.color = d.color = getColor(_extends({}, d.data, {\n      depth: d.depth\n    }));\n    d.data.id = d.id = getIdentity(d.data);\n    d.data.value = d.value;\n    return d;\n  });\n  return {\n    nodes: nodes\n  };\n}), withPropsOnChange(['enableLabel', 'nodes', 'getLabel', 'labelSkipSize'], function (_ref7) {\n  var enableLabel = _ref7.enableLabel,\n      nodes = _ref7.nodes,\n      getLabel = _ref7.getLabel,\n      labelSkipSize = _ref7.labelSkipSize;\n  if (!enableLabel) return;\n  var nodesWithLabel = nodes.map(function (node) {\n    if (node.nodeHeight > 0 || labelSkipSize !== 0 && Math.min(node.width, node.height) <= labelSkipSize) return node;\n    return _extends({}, node, {\n      label: getLabel(node.data)\n    });\n  });\n  return {\n    nodes: nodesWithLabel\n  };\n})];\nvar svgEnhancers = [withPropsOnChange(['nodes', 'defs', 'fill'], function (_ref8) {\n  var nodes = _ref8.nodes,\n      defs = _ref8.defs,\n      fill = _ref8.fill;\n  return {\n    defs: bindDefs(defs, nodes, fill, {\n      targetKey: 'fill'\n    })\n  };\n})];\nexport default (function (Component) {\n  var implPropTypes = props[Component.displayName + 'PropTypes'];\n  var implDefaultProps = props[Component.displayName + 'DefaultProps'];\n  Component.propTypes = implPropTypes;\n\n  switch (Component.displayName) {\n    case 'TreeMap':\n    case 'TreeMapPlaceholders':\n      return compose.apply(undefined, [defaultProps(implDefaultProps)].concat(commonEnhancers, svgEnhancers, [withMotion(), pure]))(Component);\n\n    case 'TreeMapHtml':\n      return compose.apply(undefined, [defaultProps(implDefaultProps)].concat(commonEnhancers, [withMotion(), pure]))(Component);\n\n    case 'TreeMapCanvas':\n      return compose.apply(undefined, [defaultProps(implDefaultProps)].concat(commonEnhancers, [pure]))(Component);\n  }\n\n  return Component;\n});","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/components/charts/treemap/enhance.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","treemap","d3Treemap","cloneDeep","compose","defaultProps","withPropsOnChange","pure","withHierarchy","withDimensions","withTheme","withMotion","withColors","getAccessorFor","getLabelGenerator","treeMapTileFromProp","getInheritedColorGenerator","computeNodePath","bindDefs","props","commonEnhancers","defaultColorBy","_ref","identity","getIdentity","_ref2","borderColor","getBorderColor","_ref3","label","labelFormat","getLabel","_ref4","labelTextColor","getLabelTextColor","_ref5","width","height","tile","innerPadding","outerPadding","size","round","paddingInner","paddingOuter","_ref6","_root","root","leavesOnly","getColor","nodes","leaves","descendants","map","d","path","nodeHeight","x","x0","y","y0","x1","y1","data","color","depth","id","value","_ref7","enableLabel","labelSkipSize","nodesWithLabel","node","Math","min","svgEnhancers","_ref8","defs","fill","targetKey","Component","implPropTypes","displayName","implDefaultProps","propTypes","apply","undefined","concat"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { treemap as d3Treemap } from 'd3-hierarchy';\nimport cloneDeep from 'lodash/cloneDeep';\nimport compose from 'recompose/compose';\nimport defaultProps from 'recompose/defaultProps';\nimport withPropsOnChange from 'recompose/withPropsOnChange';\nimport pure from 'recompose/pure';\nimport { withHierarchy, withDimensions, withTheme, withMotion, withColors } from '../../../hocs';\nimport { getAccessorFor, getLabelGenerator } from '../../../lib/propertiesConverters';\nimport { treeMapTileFromProp } from '../../../props';\nimport { getInheritedColorGenerator } from '../../../lib/colors';\nimport { computeNodePath } from '../../../lib/hierarchy';\nimport { bindDefs } from '../../../lib/defs';\nimport * as props from './props';\n\nvar commonEnhancers = [withHierarchy(), withDimensions(), withColors({ defaultColorBy: 'depth' }), withTheme(), withMotion(), withPropsOnChange(['identity'], function (_ref) {\n    var identity = _ref.identity;\n    return {\n        getIdentity: getAccessorFor(identity)\n    };\n}), withPropsOnChange(['borderColor'], function (_ref2) {\n    var borderColor = _ref2.borderColor;\n    return {\n        getBorderColor: getInheritedColorGenerator(borderColor)\n    };\n}), withPropsOnChange(['label', 'labelFormat'], function (_ref3) {\n    var label = _ref3.label,\n        labelFormat = _ref3.labelFormat;\n    return {\n        getLabel: getLabelGenerator(label, labelFormat)\n    };\n}), withPropsOnChange(['labelTextColor'], function (_ref4) {\n    var labelTextColor = _ref4.labelTextColor;\n    return {\n        getLabelTextColor: getInheritedColorGenerator(labelTextColor)\n    };\n}), withPropsOnChange(['width', 'height', 'tile', 'innerPadding', 'outerPadding'], function (_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        tile = _ref5.tile,\n        innerPadding = _ref5.innerPadding,\n        outerPadding = _ref5.outerPadding;\n    return {\n        treemap: d3Treemap().size([width, height]).tile(treeMapTileFromProp(tile)).round(true).paddingInner(innerPadding).paddingOuter(outerPadding)\n    };\n}), withPropsOnChange(['root', 'treemap', 'leavesOnly', 'getIdentity', 'getColor'], function (_ref6) {\n    var _root = _ref6.root,\n        treemap = _ref6.treemap,\n        leavesOnly = _ref6.leavesOnly,\n        getIdentity = _ref6.getIdentity,\n        getColor = _ref6.getColor;\n\n    var root = cloneDeep(_root);\n\n    treemap(root);\n\n    var nodes = leavesOnly ? root.leaves() : root.descendants();\n    nodes = nodes.map(function (d) {\n        d.path = computeNodePath(d, getIdentity);\n\n        d.nodeHeight = d.height;\n\n        d.x = d.x0;\n        d.y = d.y0;\n        d.width = d.x1 - d.x0;\n        d.height = d.y1 - d.y0;\n        d.data.color = d.color = getColor(_extends({}, d.data, { depth: d.depth }));\n\n        d.data.id = d.id = getIdentity(d.data);\n        d.data.value = d.value;\n\n        return d;\n    });\n\n    return { nodes: nodes };\n}), withPropsOnChange(['enableLabel', 'nodes', 'getLabel', 'labelSkipSize'], function (_ref7) {\n    var enableLabel = _ref7.enableLabel,\n        nodes = _ref7.nodes,\n        getLabel = _ref7.getLabel,\n        labelSkipSize = _ref7.labelSkipSize;\n\n    if (!enableLabel) return;\n\n    var nodesWithLabel = nodes.map(function (node) {\n        if (node.nodeHeight > 0 || labelSkipSize !== 0 && Math.min(node.width, node.height) <= labelSkipSize) return node;\n        return _extends({}, node, { label: getLabel(node.data) });\n    });\n\n    return { nodes: nodesWithLabel };\n})];\n\nvar svgEnhancers = [withPropsOnChange(['nodes', 'defs', 'fill'], function (_ref8) {\n    var nodes = _ref8.nodes,\n        defs = _ref8.defs,\n        fill = _ref8.fill;\n\n    return {\n        defs: bindDefs(defs, nodes, fill, { targetKey: 'fill' })\n    };\n})];\n\nexport default (function (Component) {\n    var implPropTypes = props[Component.displayName + 'PropTypes'];\n    var implDefaultProps = props[Component.displayName + 'DefaultProps'];\n\n    Component.propTypes = implPropTypes;\n\n    switch (Component.displayName) {\n        case 'TreeMap':\n        case 'TreeMapPlaceholders':\n            return compose.apply(undefined, [defaultProps(implDefaultProps)].concat(commonEnhancers, svgEnhancers, [withMotion(), pure]))(Component);\n\n        case 'TreeMapHtml':\n            return compose.apply(undefined, [defaultProps(implDefaultProps)].concat(commonEnhancers, [withMotion(), pure]))(Component);\n\n        case 'TreeMapCanvas':\n            return compose.apply(undefined, [defaultProps(implDefaultProps)].concat(commonEnhancers, [pure]))(Component);\n    }\n\n    return Component;\n});"]},"metadata":{},"sourceType":"module"}