{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n\nimport React, { Component } from 'react';\nimport { degreesToRadians } from '../../../lib/polar';\nimport { getRelativeCursor, isCursorInRect } from '../../../lib/interactivity';\nimport Container from '../Container';\nimport enhance from './enhance';\nimport TreeMapNodeTooltip from './TreeMapNodeTooltip';\n\nvar findNodeUnderCursor = function findNodeUnderCursor(nodes, margin, x, y) {\n  return nodes.find(function (node) {\n    return isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y);\n  });\n};\n\nvar TreeMapCanvas = function (_Component) {\n  _inherits(TreeMapCanvas, _Component);\n\n  function TreeMapCanvas() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, TreeMapCanvas);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleMouseHover = function (showTooltip, hideTooltip) {\n      return function (event) {\n        var _this$props = _this.props,\n            isInteractive = _this$props.isInteractive,\n            nodes = _this$props.nodes,\n            margin = _this$props.margin,\n            theme = _this$props.theme;\n        if (!isInteractive) return;\n\n        var _getRelativeCursor = getRelativeCursor(_this.surface, event),\n            x = _getRelativeCursor[0],\n            y = _getRelativeCursor[1];\n\n        var node = findNodeUnderCursor(nodes, margin, x, y);\n\n        if (node !== undefined) {\n          showTooltip(React.createElement(TreeMapNodeTooltip, {\n            node: node,\n            theme: theme\n          }), event);\n        } else {\n          hideTooltip();\n        }\n      };\n    }, _this.handleMouseLeave = function (hideTooltip) {\n      return function () {\n        hideTooltip();\n      };\n    }, _this.handleClick = function (event) {\n      var _this$props2 = _this.props,\n          isInteractive = _this$props2.isInteractive,\n          nodes = _this$props2.nodes,\n          margin = _this$props2.margin,\n          onClick = _this$props2.onClick;\n      if (!isInteractive) return;\n\n      var _getRelativeCursor2 = getRelativeCursor(_this.surface, event),\n          x = _getRelativeCursor2[0],\n          y = _getRelativeCursor2[1];\n\n      var node = findNodeUnderCursor(nodes, margin, x, y);\n      if (node !== undefined) onClick(node, event);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  TreeMapCanvas.prototype.componentDidMount = function componentDidMount() {\n    this.ctx = this.surface.getContext('2d');\n    this.draw(this.props);\n  };\n\n  TreeMapCanvas.prototype.componentDidUpdate = function componentDidUpdate() {\n    this.ctx = this.surface.getContext('2d');\n    this.draw(this.props);\n  };\n\n  TreeMapCanvas.prototype.draw = function draw(props) {\n    var _this2 = this;\n\n    var nodes = props.nodes,\n        pixelRatio = props.pixelRatio,\n        margin = props.margin,\n        outerWidth = props.outerWidth,\n        outerHeight = props.outerHeight,\n        borderWidth = props.borderWidth,\n        getBorderColor = props.getBorderColor,\n        enableLabel = props.enableLabel,\n        getLabelTextColor = props.getLabelTextColor,\n        orientLabel = props.orientLabel;\n    this.surface.width = outerWidth * pixelRatio;\n    this.surface.height = outerHeight * pixelRatio;\n    this.ctx.scale(pixelRatio, pixelRatio);\n    this.ctx.clearRect(0, 0, outerWidth, outerHeight);\n    this.ctx.translate(margin.left, margin.top);\n    nodes.forEach(function (node) {\n      _this2.ctx.fillStyle = node.color;\n\n      _this2.ctx.fillRect(node.x, node.y, node.width, node.height);\n\n      if (borderWidth > 0) {\n        _this2.ctx.strokeStyle = getBorderColor(node);\n        _this2.ctx.lineWidth = borderWidth;\n\n        _this2.ctx.strokeRect(node.x, node.y, node.width, node.height);\n      }\n    });\n\n    if (enableLabel) {\n      this.ctx.textAlign = 'center';\n      this.ctx.textBaseline = 'middle'; // draw labels on top\n\n      nodes.filter(function (_ref) {\n        var label = _ref.label;\n        return label !== undefined;\n      }).forEach(function (node) {\n        var labelTextColor = getLabelTextColor(node);\n        var rotate = orientLabel && node.height > node.width;\n\n        _this2.ctx.save();\n\n        _this2.ctx.translate(node.x + node.width / 2, node.y + node.height / 2);\n\n        _this2.ctx.rotate(degreesToRadians(rotate ? -90 : 0));\n\n        _this2.ctx.fillStyle = labelTextColor;\n\n        _this2.ctx.fillText(node.label, 0, 0);\n\n        _this2.ctx.restore();\n      });\n    }\n  };\n\n  TreeMapCanvas.prototype.render = function render() {\n    var _this3 = this;\n\n    var _props = this.props,\n        outerWidth = _props.outerWidth,\n        outerHeight = _props.outerHeight,\n        pixelRatio = _props.pixelRatio,\n        isInteractive = _props.isInteractive,\n        theme = _props.theme;\n    return React.createElement(Container, {\n      isInteractive: isInteractive,\n      theme: theme\n    }, function (_ref2) {\n      var showTooltip = _ref2.showTooltip,\n          hideTooltip = _ref2.hideTooltip;\n      return React.createElement('canvas', {\n        ref: function ref(surface) {\n          _this3.surface = surface;\n        },\n        width: outerWidth * pixelRatio,\n        height: outerHeight * pixelRatio,\n        style: {\n          width: outerWidth,\n          height: outerHeight\n        },\n        onMouseEnter: _this3.handleMouseHover(showTooltip, hideTooltip),\n        onMouseMove: _this3.handleMouseHover(showTooltip, hideTooltip),\n        onMouseLeave: _this3.handleMouseLeave(hideTooltip),\n        onClick: _this3.handleClick\n      });\n    });\n  };\n\n  return TreeMapCanvas;\n}(Component);\n\nTreeMapCanvas.displayName = 'TreeMapCanvas';\nexport default enhance(TreeMapCanvas);","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/components/charts/treemap/TreeMapCanvas.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","Component","degreesToRadians","getRelativeCursor","isCursorInRect","Container","enhance","TreeMapNodeTooltip","findNodeUnderCursor","nodes","margin","x","y","find","node","left","top","width","height","TreeMapCanvas","_Component","_temp","_this","_ret","_len","arguments","length","args","Array","_key","apply","concat","handleMouseHover","showTooltip","hideTooltip","event","_this$props","props","isInteractive","theme","_getRelativeCursor","surface","undefined","createElement","handleMouseLeave","handleClick","_this$props2","onClick","_getRelativeCursor2","componentDidMount","ctx","getContext","draw","componentDidUpdate","_this2","pixelRatio","outerWidth","outerHeight","borderWidth","getBorderColor","enableLabel","getLabelTextColor","orientLabel","scale","clearRect","translate","forEach","fillStyle","color","fillRect","strokeStyle","lineWidth","strokeRect","textAlign","textBaseline","filter","_ref","label","labelTextColor","rotate","save","fillText","restore","render","_this3","_props","_ref2","ref","style","onMouseEnter","onMouseMove","onMouseLeave","displayName"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react';\nimport { degreesToRadians } from '../../../lib/polar';\nimport { getRelativeCursor, isCursorInRect } from '../../../lib/interactivity';\nimport Container from '../Container';\nimport enhance from './enhance';\nimport TreeMapNodeTooltip from './TreeMapNodeTooltip';\n\nvar findNodeUnderCursor = function findNodeUnderCursor(nodes, margin, x, y) {\n    return nodes.find(function (node) {\n        return isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y);\n    });\n};\n\nvar TreeMapCanvas = function (_Component) {\n    _inherits(TreeMapCanvas, _Component);\n\n    function TreeMapCanvas() {\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, TreeMapCanvas);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleMouseHover = function (showTooltip, hideTooltip) {\n            return function (event) {\n                var _this$props = _this.props,\n                    isInteractive = _this$props.isInteractive,\n                    nodes = _this$props.nodes,\n                    margin = _this$props.margin,\n                    theme = _this$props.theme;\n\n\n                if (!isInteractive) return;\n\n                var _getRelativeCursor = getRelativeCursor(_this.surface, event),\n                    x = _getRelativeCursor[0],\n                    y = _getRelativeCursor[1];\n\n                var node = findNodeUnderCursor(nodes, margin, x, y);\n\n                if (node !== undefined) {\n                    showTooltip(React.createElement(TreeMapNodeTooltip, { node: node, theme: theme }), event);\n                } else {\n                    hideTooltip();\n                }\n            };\n        }, _this.handleMouseLeave = function (hideTooltip) {\n            return function () {\n                hideTooltip();\n            };\n        }, _this.handleClick = function (event) {\n            var _this$props2 = _this.props,\n                isInteractive = _this$props2.isInteractive,\n                nodes = _this$props2.nodes,\n                margin = _this$props2.margin,\n                onClick = _this$props2.onClick;\n\n\n            if (!isInteractive) return;\n\n            var _getRelativeCursor2 = getRelativeCursor(_this.surface, event),\n                x = _getRelativeCursor2[0],\n                y = _getRelativeCursor2[1];\n\n            var node = findNodeUnderCursor(nodes, margin, x, y);\n            if (node !== undefined) onClick(node, event);\n        }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    TreeMapCanvas.prototype.componentDidMount = function componentDidMount() {\n        this.ctx = this.surface.getContext('2d');\n        this.draw(this.props);\n    };\n\n    TreeMapCanvas.prototype.componentDidUpdate = function componentDidUpdate() {\n        this.ctx = this.surface.getContext('2d');\n        this.draw(this.props);\n    };\n\n    TreeMapCanvas.prototype.draw = function draw(props) {\n        var _this2 = this;\n\n        var nodes = props.nodes,\n            pixelRatio = props.pixelRatio,\n            margin = props.margin,\n            outerWidth = props.outerWidth,\n            outerHeight = props.outerHeight,\n            borderWidth = props.borderWidth,\n            getBorderColor = props.getBorderColor,\n            enableLabel = props.enableLabel,\n            getLabelTextColor = props.getLabelTextColor,\n            orientLabel = props.orientLabel;\n\n\n        this.surface.width = outerWidth * pixelRatio;\n        this.surface.height = outerHeight * pixelRatio;\n\n        this.ctx.scale(pixelRatio, pixelRatio);\n        this.ctx.clearRect(0, 0, outerWidth, outerHeight);\n        this.ctx.translate(margin.left, margin.top);\n\n        nodes.forEach(function (node) {\n            _this2.ctx.fillStyle = node.color;\n            _this2.ctx.fillRect(node.x, node.y, node.width, node.height);\n\n            if (borderWidth > 0) {\n                _this2.ctx.strokeStyle = getBorderColor(node);\n                _this2.ctx.lineWidth = borderWidth;\n                _this2.ctx.strokeRect(node.x, node.y, node.width, node.height);\n            }\n        });\n\n        if (enableLabel) {\n            this.ctx.textAlign = 'center';\n            this.ctx.textBaseline = 'middle';\n\n            // draw labels on top\n            nodes.filter(function (_ref) {\n                var label = _ref.label;\n                return label !== undefined;\n            }).forEach(function (node) {\n                var labelTextColor = getLabelTextColor(node);\n\n                var rotate = orientLabel && node.height > node.width;\n\n                _this2.ctx.save();\n                _this2.ctx.translate(node.x + node.width / 2, node.y + node.height / 2);\n                _this2.ctx.rotate(degreesToRadians(rotate ? -90 : 0));\n\n                _this2.ctx.fillStyle = labelTextColor;\n                _this2.ctx.fillText(node.label, 0, 0);\n\n                _this2.ctx.restore();\n            });\n        }\n    };\n\n    TreeMapCanvas.prototype.render = function render() {\n        var _this3 = this;\n\n        var _props = this.props,\n            outerWidth = _props.outerWidth,\n            outerHeight = _props.outerHeight,\n            pixelRatio = _props.pixelRatio,\n            isInteractive = _props.isInteractive,\n            theme = _props.theme;\n\n\n        return React.createElement(\n            Container,\n            { isInteractive: isInteractive, theme: theme },\n            function (_ref2) {\n                var showTooltip = _ref2.showTooltip,\n                    hideTooltip = _ref2.hideTooltip;\n                return React.createElement('canvas', {\n                    ref: function ref(surface) {\n                        _this3.surface = surface;\n                    },\n                    width: outerWidth * pixelRatio,\n                    height: outerHeight * pixelRatio,\n                    style: {\n                        width: outerWidth,\n                        height: outerHeight\n                    },\n                    onMouseEnter: _this3.handleMouseHover(showTooltip, hideTooltip),\n                    onMouseMove: _this3.handleMouseHover(showTooltip, hideTooltip),\n                    onMouseLeave: _this3.handleMouseLeave(hideTooltip),\n                    onClick: _this3.handleClick\n                });\n            }\n        );\n    };\n\n    return TreeMapCanvas;\n}(Component);\n\nTreeMapCanvas.displayName = 'TreeMapCanvas';\n\nexport default enhance(TreeMapCanvas);"]},"metadata":{},"sourceType":"module"}