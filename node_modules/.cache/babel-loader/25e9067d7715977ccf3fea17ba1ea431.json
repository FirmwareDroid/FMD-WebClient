{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { useCallback, useContext, useEffect, useLayoutEffect, useState, useRef, useMemo } from 'react';\nimport defaultConfig, { CACHE_REVALIDATORS, CONCURRENT_PROMISES, CONCURRENT_PROMISES_TS, FOCUS_REVALIDATORS, MUTATION_TS, cache } from './config';\nimport isDocumentVisible from './libs/is-document-visible';\nimport isOnline from './libs/is-online';\nimport throttle from './libs/throttle';\nimport SWRConfigContext from './swr-config-context';\nvar IS_SERVER = typeof window === 'undefined'; // React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\n\nvar useIsomorphicLayoutEffect = IS_SERVER ? useEffect : useLayoutEffect;\n\nvar trigger = function (_key, shouldRevalidate) {\n  if (shouldRevalidate === void 0) {\n    shouldRevalidate = true;\n  } // we are ignoring the second argument which correspond to the arguments\n  // the fetcher will receive when key is an array\n\n\n  var _a = cache.serializeKey(_key),\n      key = _a[0],\n      keyErr = _a[2];\n\n  if (!key) return Promise.resolve();\n  var updaters = CACHE_REVALIDATORS[key];\n\n  if (key && updaters) {\n    var currentData = cache.get(key);\n    var currentError = cache.get(keyErr);\n    var promises = [];\n\n    for (var i = 0; i < updaters.length; ++i) {\n      promises.push(updaters[i](shouldRevalidate, currentData, currentError, i > 0));\n    } // return new updated value\n\n\n    return Promise.all(promises).then(function () {\n      return cache.get(key);\n    });\n  }\n\n  return Promise.resolve(cache.get(key));\n};\n\nvar broadcastState = function (key, data, error) {\n  var updaters = CACHE_REVALIDATORS[key];\n\n  if (key && updaters) {\n    for (var i = 0; i < updaters.length; ++i) {\n      updaters[i](false, data, error);\n    }\n  }\n};\n\nvar mutate = function (_key, _data, shouldRevalidate) {\n  if (shouldRevalidate === void 0) {\n    shouldRevalidate = true;\n  }\n\n  return __awaiter(void 0, void 0, void 0, function () {\n    var key, data, error, beforeMutationTs, beforeConcurrentPromisesTs, err_1, err_2, updaters, promises, i;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          key = cache.serializeKey(_key)[0];\n          if (!key) return [2\n          /*return*/\n          ]; // if there is no new data, call revalidate against the key\n\n          if (typeof _data === 'undefined') return [2\n          /*return*/\n          , trigger(_key, shouldRevalidate) // update timestamp\n          ]; // update timestamp\n\n          MUTATION_TS[key] = Date.now() - 1;\n          beforeMutationTs = MUTATION_TS[key];\n          beforeConcurrentPromisesTs = CONCURRENT_PROMISES_TS[key];\n          if (!(_data && typeof _data === 'function')) return [3\n          /*break*/\n          , 5];\n          _a.label = 1;\n\n        case 1:\n          _a.trys.push([1, 3,, 4]);\n\n          return [4\n          /*yield*/\n          , _data(cache.get(key))];\n\n        case 2:\n          data = _a.sent();\n          return [3\n          /*break*/\n          , 4];\n\n        case 3:\n          err_1 = _a.sent();\n          error = err_1;\n          return [3\n          /*break*/\n          , 4];\n\n        case 4:\n          return [3\n          /*break*/\n          , 11];\n\n        case 5:\n          if (!(_data && typeof _data.then === 'function')) return [3\n          /*break*/\n          , 10];\n          _a.label = 6;\n\n        case 6:\n          _a.trys.push([6, 8,, 9]);\n\n          return [4\n          /*yield*/\n          , _data];\n\n        case 7:\n          data = _a.sent();\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          err_2 = _a.sent();\n          error = err_2;\n          return [3\n          /*break*/\n          , 9];\n\n        case 9:\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          data = _data;\n          _a.label = 11;\n\n        case 11:\n          // Check if other mutations have occurred since we've started awaiting, if so then do not persist this change\n          if (beforeMutationTs !== MUTATION_TS[key] || beforeConcurrentPromisesTs !== CONCURRENT_PROMISES_TS[key]) {\n            if (error) throw error;\n            return [2\n            /*return*/\n            , data];\n          }\n\n          if (typeof data !== 'undefined') {\n            // update cached data, avoid notifying from the cache\n            cache.set(key, data, false);\n          }\n\n          updaters = CACHE_REVALIDATORS[key];\n\n          if (updaters) {\n            promises = [];\n\n            for (i = 0; i < updaters.length; ++i) {\n              promises.push(updaters[i](!!shouldRevalidate, data, error, i > 0));\n            } // return new updated value\n\n\n            return [2\n            /*return*/\n            , Promise.all(promises).then(function () {\n              return cache.get(key);\n            })];\n          } // throw error or return data to be used by caller of mutate\n\n\n          if (error) throw error;\n          return [2\n          /*return*/\n          , data];\n      }\n    });\n  });\n};\n\nfunction useSWR() {\n  var _this = this;\n\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var _key,\n      fn,\n      config = {};\n\n  if (args.length >= 1) {\n    _key = args[0];\n  }\n\n  if (args.length > 2) {\n    fn = args[1];\n    config = args[2];\n  } else {\n    if (typeof args[1] === 'function') {\n      fn = args[1];\n    } else if (typeof args[1] === 'object') {\n      config = args[1];\n    }\n  } // we assume `key` as the identifier of the request\n  // `key` can change but `fn` shouldn't\n  // (because `revalidate` only depends on `key`)\n  // `keyErr` is the cache key for error objects\n\n\n  var _a = cache.serializeKey(_key),\n      key = _a[0],\n      fnArgs = _a[1],\n      keyErr = _a[2];\n\n  config = Object.assign({}, defaultConfig, useContext(SWRConfigContext), config);\n\n  if (typeof fn === 'undefined') {\n    // use a global fetcher\n    fn = config.fetcher;\n  }\n\n  var initialData = cache.get(key) || config.initialData;\n  var initialError = cache.get(keyErr); // if a state is accessed (data, error or isValidating),\n  // we add the state to dependencies so if the state is\n  // updated in the future, we can trigger a rerender\n\n  var stateDependencies = useRef({\n    data: false,\n    error: false,\n    isValidating: false\n  });\n  var stateRef = useRef({\n    data: initialData,\n    error: initialError,\n    isValidating: false\n  });\n  var rerender = useState(null)[1];\n  var dispatch = useCallback(function (payload) {\n    var shouldUpdateState = false;\n\n    for (var k in payload) {\n      stateRef.current[k] = payload[k];\n\n      if (stateDependencies.current[k]) {\n        shouldUpdateState = true;\n      }\n    }\n\n    if (shouldUpdateState || config.suspense) {\n      rerender({});\n    }\n  }, []); // error ref inside revalidate (is last request errored?)\n\n  var unmountedRef = useRef(false);\n  var keyRef = useRef(key); // do unmount check for callbacks\n\n  var eventsRef = useRef({\n    emit: function (event) {\n      var params = [];\n\n      for (var _i = 1; _i < arguments.length; _i++) {\n        params[_i - 1] = arguments[_i];\n      }\n\n      if (unmountedRef.current) return;\n      config[event].apply(config, params);\n    }\n  });\n  var boundMutate = useCallback(function (data, shouldRevalidate) {\n    return mutate(key, data, shouldRevalidate);\n  }, [key]); // start a revalidation\n\n  var revalidate = useCallback(function (revalidateOpts) {\n    if (revalidateOpts === void 0) {\n      revalidateOpts = {};\n    }\n\n    return __awaiter(_this, void 0, void 0, function () {\n      var loading, shouldDeduping, newData, startAt, newState, err_3, retryCount;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!key || !fn) return [2\n            /*return*/\n            , false];\n            if (unmountedRef.current) return [2\n            /*return*/\n            , false];\n            revalidateOpts = Object.assign({\n              dedupe: false\n            }, revalidateOpts);\n            loading = true;\n            shouldDeduping = typeof CONCURRENT_PROMISES[key] !== 'undefined' && revalidateOpts.dedupe;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 6,, 7]);\n\n            dispatch({\n              isValidating: true\n            });\n            newData = void 0;\n            startAt = void 0;\n            if (!shouldDeduping) return [3\n            /*break*/\n            , 3]; // there's already an ongoing request,\n            // this one needs to be deduplicated.\n\n            startAt = CONCURRENT_PROMISES_TS[key];\n            return [4\n            /*yield*/\n            , CONCURRENT_PROMISES[key]];\n\n          case 2:\n            newData = _a.sent();\n            return [3\n            /*break*/\n            , 5];\n\n          case 3:\n            // if not deduping the request (hard revalidate) but\n            // there're other ongoing request(s) at the same time,\n            // we need to ignore the other result(s) to avoid\n            // possible race conditions:\n            // req1------------------>res1\n            //      req2-------->res2\n            // in that case, the second response should not be overridden\n            // by the first one.\n            if (CONCURRENT_PROMISES[key]) {\n              // we can mark it as a mutation to ignore\n              // all requests which are fired before this one\n              MUTATION_TS[key] = Date.now() - 1;\n            } // if no cache being rendered currently (it shows a blank page),\n            // we trigger the loading slow event.\n\n\n            if (config.loadingTimeout && !cache.get(key)) {\n              setTimeout(function () {\n                if (loading) eventsRef.current.emit('onLoadingSlow', key, config);\n              }, config.loadingTimeout);\n            }\n\n            if (fnArgs !== null) {\n              CONCURRENT_PROMISES[key] = fn.apply(void 0, fnArgs);\n            } else {\n              CONCURRENT_PROMISES[key] = fn(key);\n            }\n\n            CONCURRENT_PROMISES_TS[key] = startAt = Date.now();\n            return [4\n            /*yield*/\n            , CONCURRENT_PROMISES[key]];\n\n          case 4:\n            newData = _a.sent();\n            setTimeout(function () {\n              delete CONCURRENT_PROMISES[key];\n              delete CONCURRENT_PROMISES_TS[key];\n            }, config.dedupingInterval); // trigger the success event,\n            // only do this for the original request.\n\n            eventsRef.current.emit('onSuccess', newData, key, config);\n            _a.label = 5;\n\n          case 5:\n            // if the revalidation happened earlier than the local mutation,\n            // we have to ignore the result because it could override.\n            // meanwhile, a new revalidation should be triggered by the mutation.\n            if (MUTATION_TS[key] && startAt <= MUTATION_TS[key]) {\n              dispatch({\n                isValidating: false\n              });\n              return [2\n              /*return*/\n              , false];\n            }\n\n            cache.set(key, newData, false);\n            cache.set(keyErr, undefined, false);\n            newState = {\n              isValidating: false\n            };\n\n            if (typeof stateRef.current.error !== 'undefined') {\n              // we don't have an error\n              newState.error = undefined;\n            }\n\n            if (!config.compare(stateRef.current.data, newData)) {\n              // deep compare to avoid extra re-render\n              // data changed\n              newState.data = newData;\n            } // merge the new state\n\n\n            dispatch(newState);\n\n            if (!shouldDeduping) {\n              // also update other hooks\n              broadcastState(key, newData, undefined);\n            }\n\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            err_3 = _a.sent();\n            delete CONCURRENT_PROMISES[key];\n            delete CONCURRENT_PROMISES_TS[key];\n            cache.set(keyErr, err_3, false); // get a new error\n            // don't use deep equal for errors\n\n            if (stateRef.current.error !== err_3) {\n              // we keep the stale data\n              dispatch({\n                isValidating: false,\n                error: err_3\n              });\n\n              if (!shouldDeduping) {\n                // also broadcast to update other hooks\n                broadcastState(key, undefined, err_3);\n              }\n            } // events and retry\n\n\n            eventsRef.current.emit('onError', err_3, key, config);\n\n            if (config.shouldRetryOnError) {\n              retryCount = (revalidateOpts.retryCount || 0) + 1;\n              eventsRef.current.emit('onErrorRetry', err_3, key, config, revalidate, Object.assign({\n                dedupe: true\n              }, revalidateOpts, {\n                retryCount: retryCount\n              }));\n            }\n\n            return [3\n            /*break*/\n            , 7];\n\n          case 7:\n            loading = false;\n            return [2\n            /*return*/\n            , true];\n        }\n      });\n    });\n  }, [key]); // mounted (client side rendering)\n\n  useIsomorphicLayoutEffect(function () {\n    if (!key) return undefined; // after `key` updates, we need to mark it as mounted\n\n    unmountedRef.current = false; // after the component is mounted (hydrated),\n    // we need to update the data from the cache\n    // and trigger a revalidation\n\n    var currentHookData = stateRef.current.data;\n    var latestKeyedData = cache.get(key) || config.initialData; // update the state if the key changed (not the inital render) or cache updated\n\n    if (keyRef.current !== key || !config.compare(currentHookData, latestKeyedData)) {\n      dispatch({\n        data: latestKeyedData\n      });\n      keyRef.current = key;\n    } // revalidate with deduping\n\n\n    var softRevalidate = function () {\n      return revalidate({\n        dedupe: true\n      });\n    }; // trigger a revalidation\n\n\n    if (config.revalidateOnMount || !config.initialData && config.revalidateOnMount === undefined) {\n      if (typeof latestKeyedData !== 'undefined' && !IS_SERVER && window['requestIdleCallback']) {\n        // delay revalidate if there's cache\n        // to not block the rendering\n        window['requestIdleCallback'](softRevalidate);\n      } else {\n        softRevalidate();\n      }\n    } // whenever the window gets focused, revalidate\n\n\n    var onFocus;\n\n    if (config.revalidateOnFocus) {\n      // throttle: avoid being called twice from both listeners\n      // and tabs being switched quickly\n      onFocus = throttle(softRevalidate, config.focusThrottleInterval);\n\n      if (!FOCUS_REVALIDATORS[key]) {\n        FOCUS_REVALIDATORS[key] = [onFocus];\n      } else {\n        FOCUS_REVALIDATORS[key].push(onFocus);\n      }\n    } // register global cache update listener\n\n\n    var onUpdate = function (shouldRevalidate, updatedData, updatedError, dedupe) {\n      if (shouldRevalidate === void 0) {\n        shouldRevalidate = true;\n      }\n\n      if (dedupe === void 0) {\n        dedupe = true;\n      } // update hook state\n\n\n      var newState = {};\n      var needUpdate = false;\n\n      if (typeof updatedData !== 'undefined' && !config.compare(stateRef.current.data, updatedData)) {\n        newState.data = updatedData;\n        needUpdate = true;\n      } // always update error\n      // because it can be `undefined`\n\n\n      if (stateRef.current.error !== updatedError) {\n        newState.error = updatedError;\n        needUpdate = true;\n      }\n\n      if (needUpdate) {\n        dispatch(newState);\n      }\n\n      if (shouldRevalidate) {\n        if (dedupe) {\n          return softRevalidate();\n        } else {\n          return revalidate();\n        }\n      }\n\n      return false;\n    }; // add updater to listeners\n\n\n    if (!CACHE_REVALIDATORS[key]) {\n      CACHE_REVALIDATORS[key] = [onUpdate];\n    } else {\n      CACHE_REVALIDATORS[key].push(onUpdate);\n    } // set up reconnecting when the browser regains network connection\n\n\n    var reconnect = null;\n\n    if (!IS_SERVER && window.addEventListener && config.revalidateOnReconnect) {\n      window.addEventListener('online', reconnect = softRevalidate);\n    }\n\n    return function () {\n      // cleanup\n      dispatch = function () {\n        return null;\n      }; // mark it as unmounted\n\n\n      unmountedRef.current = true;\n\n      if (onFocus && FOCUS_REVALIDATORS[key]) {\n        var revalidators = FOCUS_REVALIDATORS[key];\n        var index = revalidators.indexOf(onFocus);\n\n        if (index >= 0) {\n          // 10x faster than splice\n          // https://jsperf.com/array-remove-by-index\n          revalidators[index] = revalidators[revalidators.length - 1];\n          revalidators.pop();\n        }\n      }\n\n      if (CACHE_REVALIDATORS[key]) {\n        var revalidators = CACHE_REVALIDATORS[key];\n        var index = revalidators.indexOf(onUpdate);\n\n        if (index >= 0) {\n          revalidators[index] = revalidators[revalidators.length - 1];\n          revalidators.pop();\n        }\n      }\n\n      if (!IS_SERVER && window.removeEventListener && reconnect !== null) {\n        window.removeEventListener('online', reconnect);\n      }\n    };\n  }, [key, revalidate]); // set up polling\n\n  useIsomorphicLayoutEffect(function () {\n    var timer = null;\n\n    var tick = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!(!stateRef.current.error && (config.refreshWhenHidden || isDocumentVisible()) && (config.refreshWhenOffline || isOnline()))) return [3\n              /*break*/\n              , 2]; // only revalidate when the page is visible\n              // if API request errored, we stop polling in this round\n              // and let the error retry function handle it\n\n              return [4\n              /*yield*/\n              , revalidate({\n                dedupe: true\n              })];\n\n            case 1:\n              // only revalidate when the page is visible\n              // if API request errored, we stop polling in this round\n              // and let the error retry function handle it\n              _a.sent();\n\n              _a.label = 2;\n\n            case 2:\n              if (config.refreshInterval) {\n                timer = setTimeout(tick, config.refreshInterval);\n              }\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    if (config.refreshInterval) {\n      timer = setTimeout(tick, config.refreshInterval);\n    }\n\n    return function () {\n      if (timer) clearTimeout(timer);\n    };\n  }, [config.refreshInterval, config.refreshWhenHidden, config.refreshWhenOffline, revalidate]); // suspense\n\n  if (config.suspense) {\n    // in suspense mode, we can't return empty state\n    // (it should be suspended)\n    // try to get data and error from cache\n    var latestData = cache.get(key) || initialData;\n    var latestError = cache.get(keyErr) || initialError;\n\n    if (typeof latestData === 'undefined' && typeof latestError === 'undefined') {\n      // need to start the request if it hasn't\n      if (!CONCURRENT_PROMISES[key]) {\n        // trigger revalidate immediately\n        // to get the promise\n        revalidate();\n      }\n\n      if (CONCURRENT_PROMISES[key] && typeof CONCURRENT_PROMISES[key].then === 'function') {\n        // if it is a promise\n        throw CONCURRENT_PROMISES[key];\n      } // it's a value, return it directly (override)\n\n\n      latestData = CONCURRENT_PROMISES[key];\n    }\n\n    if (typeof latestData === 'undefined' && latestError) {\n      // in suspense mode, throw error if there's no content\n      throw latestError;\n    } // return the latest data / error from cache\n    // in case `key` has changed\n\n\n    return {\n      error: latestError,\n      data: latestData,\n      revalidate: revalidate,\n      mutate: boundMutate,\n      isValidating: stateRef.current.isValidating\n    };\n  } // define returned state\n  // can be memorized since the state is a ref\n\n\n  return useMemo(function () {\n    var state = {\n      revalidate: revalidate,\n      mutate: boundMutate\n    };\n    Object.defineProperties(state, {\n      error: {\n        // `key` might be changed in the upcoming hook re-render,\n        // but the previous state will stay\n        // so we need to match the latest key and data (fallback to `initialData`)\n        get: function () {\n          stateDependencies.current.error = true;\n          return keyRef.current === key ? stateRef.current.error : initialError;\n        },\n        enumerable: true\n      },\n      data: {\n        get: function () {\n          stateDependencies.current.data = true;\n          return keyRef.current === key ? stateRef.current.data : initialData;\n        },\n        enumerable: true\n      },\n      isValidating: {\n        get: function () {\n          stateDependencies.current.isValidating = true;\n          return stateRef.current.isValidating;\n        },\n        enumerable: true\n      }\n    });\n    return state;\n  }, [revalidate]);\n}\n\nvar SWRConfig = SWRConfigContext.Provider;\nexport { trigger, mutate, SWRConfig };\nexport default useSWR;","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/swr/esm/use-swr.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","useCallback","useContext","useEffect","useLayoutEffect","useState","useRef","useMemo","defaultConfig","CACHE_REVALIDATORS","CONCURRENT_PROMISES","CONCURRENT_PROMISES_TS","FOCUS_REVALIDATORS","MUTATION_TS","cache","isDocumentVisible","isOnline","throttle","SWRConfigContext","IS_SERVER","window","useIsomorphicLayoutEffect","trigger","_key","shouldRevalidate","_a","serializeKey","key","keyErr","updaters","currentData","get","currentError","promises","i","all","broadcastState","data","error","mutate","_data","beforeMutationTs","beforeConcurrentPromisesTs","err_1","err_2","Date","now","set","useSWR","_this","args","_i","arguments","fn","config","fnArgs","Object","assign","fetcher","initialData","initialError","stateDependencies","isValidating","stateRef","rerender","dispatch","payload","shouldUpdateState","k","current","suspense","unmountedRef","keyRef","eventsRef","emit","event","params","boundMutate","revalidate","revalidateOpts","loading","shouldDeduping","newData","startAt","newState","err_3","retryCount","dedupe","loadingTimeout","setTimeout","dedupingInterval","undefined","compare","shouldRetryOnError","currentHookData","latestKeyedData","softRevalidate","revalidateOnMount","onFocus","revalidateOnFocus","focusThrottleInterval","onUpdate","updatedData","updatedError","needUpdate","reconnect","addEventListener","revalidateOnReconnect","revalidators","index","indexOf","removeEventListener","timer","tick","refreshWhenHidden","refreshWhenOffline","refreshInterval","clearTimeout","latestData","latestError","state","defineProperties","enumerable","SWRConfig","Provider"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { useCallback, useContext, useEffect, useLayoutEffect, useState, useRef, useMemo } from 'react';\nimport defaultConfig, { CACHE_REVALIDATORS, CONCURRENT_PROMISES, CONCURRENT_PROMISES_TS, FOCUS_REVALIDATORS, MUTATION_TS, cache } from './config';\nimport isDocumentVisible from './libs/is-document-visible';\nimport isOnline from './libs/is-online';\nimport throttle from './libs/throttle';\nimport SWRConfigContext from './swr-config-context';\nvar IS_SERVER = typeof window === 'undefined';\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nvar useIsomorphicLayoutEffect = IS_SERVER ? useEffect : useLayoutEffect;\nvar trigger = function (_key, shouldRevalidate) {\n    if (shouldRevalidate === void 0) { shouldRevalidate = true; }\n    // we are ignoring the second argument which correspond to the arguments\n    // the fetcher will receive when key is an array\n    var _a = cache.serializeKey(_key), key = _a[0], keyErr = _a[2];\n    if (!key)\n        return Promise.resolve();\n    var updaters = CACHE_REVALIDATORS[key];\n    if (key && updaters) {\n        var currentData = cache.get(key);\n        var currentError = cache.get(keyErr);\n        var promises = [];\n        for (var i = 0; i < updaters.length; ++i) {\n            promises.push(updaters[i](shouldRevalidate, currentData, currentError, i > 0));\n        }\n        // return new updated value\n        return Promise.all(promises).then(function () { return cache.get(key); });\n    }\n    return Promise.resolve(cache.get(key));\n};\nvar broadcastState = function (key, data, error) {\n    var updaters = CACHE_REVALIDATORS[key];\n    if (key && updaters) {\n        for (var i = 0; i < updaters.length; ++i) {\n            updaters[i](false, data, error);\n        }\n    }\n};\nvar mutate = function (_key, _data, shouldRevalidate) {\n    if (shouldRevalidate === void 0) { shouldRevalidate = true; }\n    return __awaiter(void 0, void 0, void 0, function () {\n        var key, data, error, beforeMutationTs, beforeConcurrentPromisesTs, err_1, err_2, updaters, promises, i;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    key = cache.serializeKey(_key)[0];\n                    if (!key)\n                        return [2 /*return*/];\n                    // if there is no new data, call revalidate against the key\n                    if (typeof _data === 'undefined')\n                        return [2 /*return*/, trigger(_key, shouldRevalidate)\n                            // update timestamp\n                        ];\n                    // update timestamp\n                    MUTATION_TS[key] = Date.now() - 1;\n                    beforeMutationTs = MUTATION_TS[key];\n                    beforeConcurrentPromisesTs = CONCURRENT_PROMISES_TS[key];\n                    if (!(_data && typeof _data === 'function')) return [3 /*break*/, 5];\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, _data(cache.get(key))];\n                case 2:\n                    data = _a.sent();\n                    return [3 /*break*/, 4];\n                case 3:\n                    err_1 = _a.sent();\n                    error = err_1;\n                    return [3 /*break*/, 4];\n                case 4: return [3 /*break*/, 11];\n                case 5:\n                    if (!(_data && typeof _data.then === 'function')) return [3 /*break*/, 10];\n                    _a.label = 6;\n                case 6:\n                    _a.trys.push([6, 8, , 9]);\n                    return [4 /*yield*/, _data];\n                case 7:\n                    data = _a.sent();\n                    return [3 /*break*/, 9];\n                case 8:\n                    err_2 = _a.sent();\n                    error = err_2;\n                    return [3 /*break*/, 9];\n                case 9: return [3 /*break*/, 11];\n                case 10:\n                    data = _data;\n                    _a.label = 11;\n                case 11:\n                    // Check if other mutations have occurred since we've started awaiting, if so then do not persist this change\n                    if (beforeMutationTs !== MUTATION_TS[key] ||\n                        beforeConcurrentPromisesTs !== CONCURRENT_PROMISES_TS[key]) {\n                        if (error)\n                            throw error;\n                        return [2 /*return*/, data];\n                    }\n                    if (typeof data !== 'undefined') {\n                        // update cached data, avoid notifying from the cache\n                        cache.set(key, data, false);\n                    }\n                    updaters = CACHE_REVALIDATORS[key];\n                    if (updaters) {\n                        promises = [];\n                        for (i = 0; i < updaters.length; ++i) {\n                            promises.push(updaters[i](!!shouldRevalidate, data, error, i > 0));\n                        }\n                        // return new updated value\n                        return [2 /*return*/, Promise.all(promises).then(function () { return cache.get(key); })];\n                    }\n                    // throw error or return data to be used by caller of mutate\n                    if (error)\n                        throw error;\n                    return [2 /*return*/, data];\n            }\n        });\n    });\n};\nfunction useSWR() {\n    var _this = this;\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var _key, fn, config = {};\n    if (args.length >= 1) {\n        _key = args[0];\n    }\n    if (args.length > 2) {\n        fn = args[1];\n        config = args[2];\n    }\n    else {\n        if (typeof args[1] === 'function') {\n            fn = args[1];\n        }\n        else if (typeof args[1] === 'object') {\n            config = args[1];\n        }\n    }\n    // we assume `key` as the identifier of the request\n    // `key` can change but `fn` shouldn't\n    // (because `revalidate` only depends on `key`)\n    // `keyErr` is the cache key for error objects\n    var _a = cache.serializeKey(_key), key = _a[0], fnArgs = _a[1], keyErr = _a[2];\n    config = Object.assign({}, defaultConfig, useContext(SWRConfigContext), config);\n    if (typeof fn === 'undefined') {\n        // use a global fetcher\n        fn = config.fetcher;\n    }\n    var initialData = cache.get(key) || config.initialData;\n    var initialError = cache.get(keyErr);\n    // if a state is accessed (data, error or isValidating),\n    // we add the state to dependencies so if the state is\n    // updated in the future, we can trigger a rerender\n    var stateDependencies = useRef({\n        data: false,\n        error: false,\n        isValidating: false\n    });\n    var stateRef = useRef({\n        data: initialData,\n        error: initialError,\n        isValidating: false\n    });\n    var rerender = useState(null)[1];\n    var dispatch = useCallback(function (payload) {\n        var shouldUpdateState = false;\n        for (var k in payload) {\n            stateRef.current[k] = payload[k];\n            if (stateDependencies.current[k]) {\n                shouldUpdateState = true;\n            }\n        }\n        if (shouldUpdateState || config.suspense) {\n            rerender({});\n        }\n    }, []);\n    // error ref inside revalidate (is last request errored?)\n    var unmountedRef = useRef(false);\n    var keyRef = useRef(key);\n    // do unmount check for callbacks\n    var eventsRef = useRef({\n        emit: function (event) {\n            var params = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                params[_i - 1] = arguments[_i];\n            }\n            if (unmountedRef.current)\n                return;\n            config[event].apply(config, params);\n        }\n    });\n    var boundMutate = useCallback(function (data, shouldRevalidate) {\n        return mutate(key, data, shouldRevalidate);\n    }, [key]);\n    // start a revalidation\n    var revalidate = useCallback(function (revalidateOpts) {\n        if (revalidateOpts === void 0) { revalidateOpts = {}; }\n        return __awaiter(_this, void 0, void 0, function () {\n            var loading, shouldDeduping, newData, startAt, newState, err_3, retryCount;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!key || !fn)\n                            return [2 /*return*/, false];\n                        if (unmountedRef.current)\n                            return [2 /*return*/, false];\n                        revalidateOpts = Object.assign({ dedupe: false }, revalidateOpts);\n                        loading = true;\n                        shouldDeduping = typeof CONCURRENT_PROMISES[key] !== 'undefined' && revalidateOpts.dedupe;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 6, , 7]);\n                        dispatch({\n                            isValidating: true\n                        });\n                        newData = void 0;\n                        startAt = void 0;\n                        if (!shouldDeduping) return [3 /*break*/, 3];\n                        // there's already an ongoing request,\n                        // this one needs to be deduplicated.\n                        startAt = CONCURRENT_PROMISES_TS[key];\n                        return [4 /*yield*/, CONCURRENT_PROMISES[key]];\n                    case 2:\n                        newData = _a.sent();\n                        return [3 /*break*/, 5];\n                    case 3:\n                        // if not deduping the request (hard revalidate) but\n                        // there're other ongoing request(s) at the same time,\n                        // we need to ignore the other result(s) to avoid\n                        // possible race conditions:\n                        // req1------------------>res1\n                        //      req2-------->res2\n                        // in that case, the second response should not be overridden\n                        // by the first one.\n                        if (CONCURRENT_PROMISES[key]) {\n                            // we can mark it as a mutation to ignore\n                            // all requests which are fired before this one\n                            MUTATION_TS[key] = Date.now() - 1;\n                        }\n                        // if no cache being rendered currently (it shows a blank page),\n                        // we trigger the loading slow event.\n                        if (config.loadingTimeout && !cache.get(key)) {\n                            setTimeout(function () {\n                                if (loading)\n                                    eventsRef.current.emit('onLoadingSlow', key, config);\n                            }, config.loadingTimeout);\n                        }\n                        if (fnArgs !== null) {\n                            CONCURRENT_PROMISES[key] = fn.apply(void 0, fnArgs);\n                        }\n                        else {\n                            CONCURRENT_PROMISES[key] = fn(key);\n                        }\n                        CONCURRENT_PROMISES_TS[key] = startAt = Date.now();\n                        return [4 /*yield*/, CONCURRENT_PROMISES[key]];\n                    case 4:\n                        newData = _a.sent();\n                        setTimeout(function () {\n                            delete CONCURRENT_PROMISES[key];\n                            delete CONCURRENT_PROMISES_TS[key];\n                        }, config.dedupingInterval);\n                        // trigger the success event,\n                        // only do this for the original request.\n                        eventsRef.current.emit('onSuccess', newData, key, config);\n                        _a.label = 5;\n                    case 5:\n                        // if the revalidation happened earlier than the local mutation,\n                        // we have to ignore the result because it could override.\n                        // meanwhile, a new revalidation should be triggered by the mutation.\n                        if (MUTATION_TS[key] && startAt <= MUTATION_TS[key]) {\n                            dispatch({ isValidating: false });\n                            return [2 /*return*/, false];\n                        }\n                        cache.set(key, newData, false);\n                        cache.set(keyErr, undefined, false);\n                        newState = {\n                            isValidating: false\n                        };\n                        if (typeof stateRef.current.error !== 'undefined') {\n                            // we don't have an error\n                            newState.error = undefined;\n                        }\n                        if (!config.compare(stateRef.current.data, newData)) {\n                            // deep compare to avoid extra re-render\n                            // data changed\n                            newState.data = newData;\n                        }\n                        // merge the new state\n                        dispatch(newState);\n                        if (!shouldDeduping) {\n                            // also update other hooks\n                            broadcastState(key, newData, undefined);\n                        }\n                        return [3 /*break*/, 7];\n                    case 6:\n                        err_3 = _a.sent();\n                        delete CONCURRENT_PROMISES[key];\n                        delete CONCURRENT_PROMISES_TS[key];\n                        cache.set(keyErr, err_3, false);\n                        // get a new error\n                        // don't use deep equal for errors\n                        if (stateRef.current.error !== err_3) {\n                            // we keep the stale data\n                            dispatch({\n                                isValidating: false,\n                                error: err_3\n                            });\n                            if (!shouldDeduping) {\n                                // also broadcast to update other hooks\n                                broadcastState(key, undefined, err_3);\n                            }\n                        }\n                        // events and retry\n                        eventsRef.current.emit('onError', err_3, key, config);\n                        if (config.shouldRetryOnError) {\n                            retryCount = (revalidateOpts.retryCount || 0) + 1;\n                            eventsRef.current.emit('onErrorRetry', err_3, key, config, revalidate, Object.assign({ dedupe: true }, revalidateOpts, { retryCount: retryCount }));\n                        }\n                        return [3 /*break*/, 7];\n                    case 7:\n                        loading = false;\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    }, [key]);\n    // mounted (client side rendering)\n    useIsomorphicLayoutEffect(function () {\n        if (!key)\n            return undefined;\n        // after `key` updates, we need to mark it as mounted\n        unmountedRef.current = false;\n        // after the component is mounted (hydrated),\n        // we need to update the data from the cache\n        // and trigger a revalidation\n        var currentHookData = stateRef.current.data;\n        var latestKeyedData = cache.get(key) || config.initialData;\n        // update the state if the key changed (not the inital render) or cache updated\n        if (keyRef.current !== key ||\n            !config.compare(currentHookData, latestKeyedData)) {\n            dispatch({ data: latestKeyedData });\n            keyRef.current = key;\n        }\n        // revalidate with deduping\n        var softRevalidate = function () { return revalidate({ dedupe: true }); };\n        // trigger a revalidation\n        if (config.revalidateOnMount ||\n            (!config.initialData && config.revalidateOnMount === undefined)) {\n            if (typeof latestKeyedData !== 'undefined' &&\n                !IS_SERVER &&\n                window['requestIdleCallback']) {\n                // delay revalidate if there's cache\n                // to not block the rendering\n                window['requestIdleCallback'](softRevalidate);\n            }\n            else {\n                softRevalidate();\n            }\n        }\n        // whenever the window gets focused, revalidate\n        var onFocus;\n        if (config.revalidateOnFocus) {\n            // throttle: avoid being called twice from both listeners\n            // and tabs being switched quickly\n            onFocus = throttle(softRevalidate, config.focusThrottleInterval);\n            if (!FOCUS_REVALIDATORS[key]) {\n                FOCUS_REVALIDATORS[key] = [onFocus];\n            }\n            else {\n                FOCUS_REVALIDATORS[key].push(onFocus);\n            }\n        }\n        // register global cache update listener\n        var onUpdate = function (shouldRevalidate, updatedData, updatedError, dedupe) {\n            if (shouldRevalidate === void 0) { shouldRevalidate = true; }\n            if (dedupe === void 0) { dedupe = true; }\n            // update hook state\n            var newState = {};\n            var needUpdate = false;\n            if (typeof updatedData !== 'undefined' &&\n                !config.compare(stateRef.current.data, updatedData)) {\n                newState.data = updatedData;\n                needUpdate = true;\n            }\n            // always update error\n            // because it can be `undefined`\n            if (stateRef.current.error !== updatedError) {\n                newState.error = updatedError;\n                needUpdate = true;\n            }\n            if (needUpdate) {\n                dispatch(newState);\n            }\n            if (shouldRevalidate) {\n                if (dedupe) {\n                    return softRevalidate();\n                }\n                else {\n                    return revalidate();\n                }\n            }\n            return false;\n        };\n        // add updater to listeners\n        if (!CACHE_REVALIDATORS[key]) {\n            CACHE_REVALIDATORS[key] = [onUpdate];\n        }\n        else {\n            CACHE_REVALIDATORS[key].push(onUpdate);\n        }\n        // set up reconnecting when the browser regains network connection\n        var reconnect = null;\n        if (!IS_SERVER && window.addEventListener && config.revalidateOnReconnect) {\n            window.addEventListener('online', (reconnect = softRevalidate));\n        }\n        return function () {\n            // cleanup\n            dispatch = function () { return null; };\n            // mark it as unmounted\n            unmountedRef.current = true;\n            if (onFocus && FOCUS_REVALIDATORS[key]) {\n                var revalidators = FOCUS_REVALIDATORS[key];\n                var index = revalidators.indexOf(onFocus);\n                if (index >= 0) {\n                    // 10x faster than splice\n                    // https://jsperf.com/array-remove-by-index\n                    revalidators[index] = revalidators[revalidators.length - 1];\n                    revalidators.pop();\n                }\n            }\n            if (CACHE_REVALIDATORS[key]) {\n                var revalidators = CACHE_REVALIDATORS[key];\n                var index = revalidators.indexOf(onUpdate);\n                if (index >= 0) {\n                    revalidators[index] = revalidators[revalidators.length - 1];\n                    revalidators.pop();\n                }\n            }\n            if (!IS_SERVER && window.removeEventListener && reconnect !== null) {\n                window.removeEventListener('online', reconnect);\n            }\n        };\n    }, [key, revalidate]);\n    // set up polling\n    useIsomorphicLayoutEffect(function () {\n        var timer = null;\n        var tick = function () { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(!stateRef.current.error &&\n                            (config.refreshWhenHidden || isDocumentVisible()) &&\n                            (config.refreshWhenOffline || isOnline()))) return [3 /*break*/, 2];\n                        // only revalidate when the page is visible\n                        // if API request errored, we stop polling in this round\n                        // and let the error retry function handle it\n                        return [4 /*yield*/, revalidate({ dedupe: true })];\n                    case 1:\n                        // only revalidate when the page is visible\n                        // if API request errored, we stop polling in this round\n                        // and let the error retry function handle it\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        if (config.refreshInterval) {\n                            timer = setTimeout(tick, config.refreshInterval);\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        if (config.refreshInterval) {\n            timer = setTimeout(tick, config.refreshInterval);\n        }\n        return function () {\n            if (timer)\n                clearTimeout(timer);\n        };\n    }, [\n        config.refreshInterval,\n        config.refreshWhenHidden,\n        config.refreshWhenOffline,\n        revalidate\n    ]);\n    // suspense\n    if (config.suspense) {\n        // in suspense mode, we can't return empty state\n        // (it should be suspended)\n        // try to get data and error from cache\n        var latestData = cache.get(key) || initialData;\n        var latestError = cache.get(keyErr) || initialError;\n        if (typeof latestData === 'undefined' &&\n            typeof latestError === 'undefined') {\n            // need to start the request if it hasn't\n            if (!CONCURRENT_PROMISES[key]) {\n                // trigger revalidate immediately\n                // to get the promise\n                revalidate();\n            }\n            if (CONCURRENT_PROMISES[key] &&\n                typeof CONCURRENT_PROMISES[key].then === 'function') {\n                // if it is a promise\n                throw CONCURRENT_PROMISES[key];\n            }\n            // it's a value, return it directly (override)\n            latestData = CONCURRENT_PROMISES[key];\n        }\n        if (typeof latestData === 'undefined' && latestError) {\n            // in suspense mode, throw error if there's no content\n            throw latestError;\n        }\n        // return the latest data / error from cache\n        // in case `key` has changed\n        return {\n            error: latestError,\n            data: latestData,\n            revalidate: revalidate,\n            mutate: boundMutate,\n            isValidating: stateRef.current.isValidating\n        };\n    }\n    // define returned state\n    // can be memorized since the state is a ref\n    return useMemo(function () {\n        var state = { revalidate: revalidate, mutate: boundMutate };\n        Object.defineProperties(state, {\n            error: {\n                // `key` might be changed in the upcoming hook re-render,\n                // but the previous state will stay\n                // so we need to match the latest key and data (fallback to `initialData`)\n                get: function () {\n                    stateDependencies.current.error = true;\n                    return keyRef.current === key ? stateRef.current.error : initialError;\n                },\n                enumerable: true\n            },\n            data: {\n                get: function () {\n                    stateDependencies.current.data = true;\n                    return keyRef.current === key ? stateRef.current.data : initialData;\n                },\n                enumerable: true\n            },\n            isValidating: {\n                get: function () {\n                    stateDependencies.current.isValidating = true;\n                    return stateRef.current.isValidating;\n                },\n                enumerable: true\n            }\n        });\n        return state;\n    }, [revalidate]);\n}\nvar SWRConfig = SWRConfigContext.Provider;\nexport { trigger, mutate, SWRConfig };\nexport default useSWR;\n"]},"metadata":{},"sourceType":"module"}