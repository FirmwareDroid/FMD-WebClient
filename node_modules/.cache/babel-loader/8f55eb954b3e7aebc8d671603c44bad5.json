{"ast":null,"code":"import _mapValues from 'lodash/mapValues';\nimport _isFunction from 'lodash/isFunction';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionMotion, spring } from 'react-motion';\nimport { format as d3Format } from 'd3-format';\nimport compose from 'recompose/compose';\nimport withPropsOnChange from 'recompose/withPropsOnChange';\nimport pure from 'recompose/pure';\nimport { colorMotionSpring, getInterpolatedColor } from '../../../lib/colors';\nimport { midAngle } from '../../../lib/polar';\nimport TableTooltip from '../../tooltip/TableTooltip';\nimport Chip from '../../tooltip/Chip';\n/**\n * Used to get ribbon angles, instead of using source and target arcs,\n * we sort arcs by value to have smooth transitions, otherwise,\n * if source|target arc value becomes greater than the other,\n * the ribbon will be reversed.\n *\n * @param {Object}  source\n * @param {Object}  target\n * @param {boolean} useMiddleAngle\n * @param {Object}  [springConfig]\n * @return {Object}\n */\n\nvar getRibbonAngles = function getRibbonAngles(_ref, useMiddleAngle, springConfig) {\n  var source = _ref.source,\n      target = _ref.target;\n  var firstArc = void 0;\n  var secondArc = void 0;\n\n  if (source.startAngle < target.startAngle) {\n    firstArc = source;\n    secondArc = target;\n  } else {\n    firstArc = target;\n    secondArc = source;\n  }\n\n  var angles = void 0;\n\n  if (useMiddleAngle === true) {\n    var firstMiddleAngle = midAngle(firstArc);\n    var secondMiddleAngle = midAngle(secondArc);\n    angles = {\n      sourceStartAngle: firstMiddleAngle,\n      sourceEndAngle: firstMiddleAngle,\n      targetStartAngle: secondMiddleAngle,\n      targetEndAngle: secondMiddleAngle\n    };\n  } else {\n    angles = {\n      sourceStartAngle: firstArc.startAngle,\n      sourceEndAngle: firstArc.endAngle,\n      targetStartAngle: secondArc.startAngle,\n      targetEndAngle: secondArc.endAngle\n    };\n  }\n\n  if (!springConfig) return angles;\n  return _mapValues(angles, function (angle) {\n    return spring(angle, springConfig);\n  });\n};\n\nvar ribbonWillEnter = function ribbonWillEnter(_ref2) {\n  var ribbon = _ref2.data;\n  return _extends({}, getRibbonAngles(ribbon, true), {\n    opacity: 0\n  }, colorMotionSpring(ribbon.source.color));\n};\n\nvar ribbonWillLeave = function ribbonWillLeave(springConfig) {\n  return function (_ref3) {\n    var ribbon = _ref3.data;\n    return _extends({}, getRibbonAngles(ribbon, true, springConfig), {\n      opacity: 0\n    }, colorMotionSpring(ribbon.source.color, springConfig));\n  };\n};\n\nvar ChordRibbons = function ChordRibbons(_ref4) {\n  var ribbons = _ref4.ribbons,\n      shapeGenerator = _ref4.shapeGenerator,\n      borderWidth = _ref4.borderWidth,\n      getBorderColor = _ref4.getBorderColor,\n      getOpacity = _ref4.getOpacity,\n      theme = _ref4.theme,\n      tooltipFormat = _ref4.tooltipFormat,\n      setCurrent = _ref4.setCurrent,\n      showTooltip = _ref4.showTooltip,\n      hideTooltip = _ref4.hideTooltip,\n      animate = _ref4.animate,\n      motionDamping = _ref4.motionDamping,\n      motionStiffness = _ref4.motionStiffness;\n\n  var commonProps = function commonProps(ribbon) {\n    var ribbonTooltip = React.createElement(TableTooltip, {\n      theme: theme,\n      rows: [[React.createElement(Chip, {\n        color: ribbon.source.color\n      }), React.createElement('strong', null, ribbon.source.id), tooltipFormat ? tooltipFormat(ribbon.source.value) : ribbon.source.value], [React.createElement(Chip, {\n        color: ribbon.target.color\n      }), React.createElement('strong', null, ribbon.target.id), tooltipFormat ? tooltipFormat(ribbon.target.value) : ribbon.target.value]]\n    });\n    return {\n      strokeWidth: borderWidth,\n      onMouseEnter: function onMouseEnter(e) {\n        setCurrent(ribbon);\n        showTooltip(ribbonTooltip, e);\n      },\n      onMouseMove: function onMouseMove(e) {\n        showTooltip(ribbonTooltip, e);\n      },\n      onMouseLeave: function onMouseLeave() {\n        setCurrent(null);\n        hideTooltip();\n      }\n    };\n  };\n\n  if (animate !== true) {\n    return React.createElement('g', null, ribbons.map(function (ribbon) {\n      var opacity = getOpacity(ribbon);\n      return React.createElement('path', _extends({\n        key: ribbon.key,\n        d: shapeGenerator(ribbon),\n        fill: ribbon.source.color,\n        fillOpacity: opacity,\n        stroke: getBorderColor(_extends({}, ribbon, {\n          color: ribbon.source.color\n        })),\n        strokeOpacity: opacity\n      }, commonProps(ribbon)));\n    }));\n  }\n\n  var springConfig = {\n    damping: motionDamping,\n    stiffness: motionStiffness,\n    precision: 0.001\n  };\n  return React.createElement(TransitionMotion, {\n    willEnter: ribbonWillEnter,\n    willLeave: ribbonWillLeave(springConfig),\n    styles: ribbons.map(function (ribbon) {\n      return {\n        key: ribbon.key,\n        data: ribbon,\n        style: _extends({}, getRibbonAngles(ribbon, false, springConfig), {\n          opacity: spring(getOpacity(ribbon), springConfig)\n        }, colorMotionSpring(ribbon.source.color, springConfig))\n      };\n    })\n  }, function (interpolatedStyles) {\n    return React.createElement('g', null, interpolatedStyles.map(function (_ref5) {\n      var key = _ref5.key,\n          style = _ref5.style,\n          ribbon = _ref5.data;\n      var color = getInterpolatedColor(style);\n      return React.createElement('path', _extends({\n        key: key,\n        d: shapeGenerator({\n          source: {\n            startAngle: style.sourceStartAngle,\n            endAngle: Math.max(style.sourceEndAngle, style.sourceStartAngle)\n          },\n          target: {\n            startAngle: style.targetStartAngle,\n            endAngle: Math.max(style.targetEndAngle, style.targetStartAngle)\n          }\n        }),\n        fill: color,\n        fillOpacity: style.opacity,\n        stroke: getBorderColor(_extends({}, ribbon, {\n          color: color\n        })),\n        strokeOpacity: style.opacity\n      }, commonProps(ribbon)));\n    }));\n  });\n};\n\nChordRibbons.propTypes = {\n  ribbons: PropTypes.array.isRequired,\n  shapeGenerator: PropTypes.func.isRequired,\n  borderWidth: PropTypes.number.isRequired,\n  getBorderColor: PropTypes.func.isRequired,\n  getOpacity: PropTypes.func.isRequired,\n  setCurrent: PropTypes.func.isRequired,\n  theme: PropTypes.object.isRequired,\n  showTooltip: PropTypes.func.isRequired,\n  hideTooltip: PropTypes.func.isRequired\n};\nvar enhance = compose(withPropsOnChange(['tooltipFormat'], function (_ref6) {\n  var tooltipFormat = _ref6.tooltipFormat;\n  if (!tooltipFormat || _isFunction(tooltipFormat)) return {\n    tooltipFormat: tooltipFormat\n  };\n  return {\n    tooltipFormat: d3Format(tooltipFormat)\n  };\n}), pure);\nexport default enhance(ChordRibbons);","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/components/charts/chord/ChordRibbons.js"],"names":["_mapValues","_isFunction","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","React","PropTypes","TransitionMotion","spring","format","d3Format","compose","withPropsOnChange","pure","colorMotionSpring","getInterpolatedColor","midAngle","TableTooltip","Chip","getRibbonAngles","_ref","useMiddleAngle","springConfig","firstArc","secondArc","startAngle","angles","firstMiddleAngle","secondMiddleAngle","sourceStartAngle","sourceEndAngle","targetStartAngle","targetEndAngle","endAngle","angle","ribbonWillEnter","_ref2","ribbon","data","opacity","color","ribbonWillLeave","_ref3","ChordRibbons","_ref4","ribbons","shapeGenerator","borderWidth","getBorderColor","getOpacity","theme","tooltipFormat","setCurrent","showTooltip","hideTooltip","animate","motionDamping","motionStiffness","commonProps","ribbonTooltip","createElement","rows","id","value","strokeWidth","onMouseEnter","e","onMouseMove","onMouseLeave","map","d","fill","fillOpacity","stroke","strokeOpacity","damping","stiffness","precision","willEnter","willLeave","styles","style","interpolatedStyles","_ref5","Math","max","propTypes","array","isRequired","func","number","object","enhance","_ref6"],"mappings":"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","sourcesContent":["import _mapValues from 'lodash/mapValues';\nimport _isFunction from 'lodash/isFunction';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TransitionMotion, spring } from 'react-motion';\nimport { format as d3Format } from 'd3-format';\nimport compose from 'recompose/compose';\nimport withPropsOnChange from 'recompose/withPropsOnChange';\nimport pure from 'recompose/pure';\nimport { colorMotionSpring, getInterpolatedColor } from '../../../lib/colors';\nimport { midAngle } from '../../../lib/polar';\nimport TableTooltip from '../../tooltip/TableTooltip';\nimport Chip from '../../tooltip/Chip';\n\n/**\n * Used to get ribbon angles, instead of using source and target arcs,\n * we sort arcs by value to have smooth transitions, otherwise,\n * if source|target arc value becomes greater than the other,\n * the ribbon will be reversed.\n *\n * @param {Object}  source\n * @param {Object}  target\n * @param {boolean} useMiddleAngle\n * @param {Object}  [springConfig]\n * @return {Object}\n */\nvar getRibbonAngles = function getRibbonAngles(_ref, useMiddleAngle, springConfig) {\n    var source = _ref.source,\n        target = _ref.target;\n\n    var firstArc = void 0;\n    var secondArc = void 0;\n    if (source.startAngle < target.startAngle) {\n        firstArc = source;\n        secondArc = target;\n    } else {\n        firstArc = target;\n        secondArc = source;\n    }\n\n    var angles = void 0;\n    if (useMiddleAngle === true) {\n        var firstMiddleAngle = midAngle(firstArc);\n        var secondMiddleAngle = midAngle(secondArc);\n\n        angles = {\n            sourceStartAngle: firstMiddleAngle,\n            sourceEndAngle: firstMiddleAngle,\n            targetStartAngle: secondMiddleAngle,\n            targetEndAngle: secondMiddleAngle\n        };\n    } else {\n        angles = {\n            sourceStartAngle: firstArc.startAngle,\n            sourceEndAngle: firstArc.endAngle,\n            targetStartAngle: secondArc.startAngle,\n            targetEndAngle: secondArc.endAngle\n        };\n    }\n\n    if (!springConfig) return angles;\n\n    return _mapValues(angles, function (angle) {\n        return spring(angle, springConfig);\n    });\n};\n\nvar ribbonWillEnter = function ribbonWillEnter(_ref2) {\n    var ribbon = _ref2.data;\n    return _extends({}, getRibbonAngles(ribbon, true), {\n        opacity: 0\n    }, colorMotionSpring(ribbon.source.color));\n};\n\nvar ribbonWillLeave = function ribbonWillLeave(springConfig) {\n    return function (_ref3) {\n        var ribbon = _ref3.data;\n        return _extends({}, getRibbonAngles(ribbon, true, springConfig), {\n            opacity: 0\n        }, colorMotionSpring(ribbon.source.color, springConfig));\n    };\n};\n\nvar ChordRibbons = function ChordRibbons(_ref4) {\n    var ribbons = _ref4.ribbons,\n        shapeGenerator = _ref4.shapeGenerator,\n        borderWidth = _ref4.borderWidth,\n        getBorderColor = _ref4.getBorderColor,\n        getOpacity = _ref4.getOpacity,\n        theme = _ref4.theme,\n        tooltipFormat = _ref4.tooltipFormat,\n        setCurrent = _ref4.setCurrent,\n        showTooltip = _ref4.showTooltip,\n        hideTooltip = _ref4.hideTooltip,\n        animate = _ref4.animate,\n        motionDamping = _ref4.motionDamping,\n        motionStiffness = _ref4.motionStiffness;\n\n    var commonProps = function commonProps(ribbon) {\n        var ribbonTooltip = React.createElement(TableTooltip, {\n            theme: theme,\n            rows: [[React.createElement(Chip, { color: ribbon.source.color }), React.createElement(\n                'strong',\n                null,\n                ribbon.source.id\n            ), tooltipFormat ? tooltipFormat(ribbon.source.value) : ribbon.source.value], [React.createElement(Chip, { color: ribbon.target.color }), React.createElement(\n                'strong',\n                null,\n                ribbon.target.id\n            ), tooltipFormat ? tooltipFormat(ribbon.target.value) : ribbon.target.value]]\n        });\n\n        return {\n            strokeWidth: borderWidth,\n            onMouseEnter: function onMouseEnter(e) {\n                setCurrent(ribbon);\n                showTooltip(ribbonTooltip, e);\n            },\n            onMouseMove: function onMouseMove(e) {\n                showTooltip(ribbonTooltip, e);\n            },\n            onMouseLeave: function onMouseLeave() {\n                setCurrent(null);\n                hideTooltip();\n            }\n        };\n    };\n\n    if (animate !== true) {\n        return React.createElement(\n            'g',\n            null,\n            ribbons.map(function (ribbon) {\n                var opacity = getOpacity(ribbon);\n\n                return React.createElement('path', _extends({\n                    key: ribbon.key,\n                    d: shapeGenerator(ribbon),\n                    fill: ribbon.source.color,\n                    fillOpacity: opacity,\n                    stroke: getBorderColor(_extends({}, ribbon, { color: ribbon.source.color })),\n                    strokeOpacity: opacity\n                }, commonProps(ribbon)));\n            })\n        );\n    }\n\n    var springConfig = {\n        damping: motionDamping,\n        stiffness: motionStiffness,\n        precision: 0.001\n    };\n\n    return React.createElement(\n        TransitionMotion,\n        {\n            willEnter: ribbonWillEnter,\n            willLeave: ribbonWillLeave(springConfig),\n            styles: ribbons.map(function (ribbon) {\n                return {\n                    key: ribbon.key,\n                    data: ribbon,\n                    style: _extends({}, getRibbonAngles(ribbon, false, springConfig), {\n                        opacity: spring(getOpacity(ribbon), springConfig)\n                    }, colorMotionSpring(ribbon.source.color, springConfig))\n                };\n            })\n        },\n        function (interpolatedStyles) {\n            return React.createElement(\n                'g',\n                null,\n                interpolatedStyles.map(function (_ref5) {\n                    var key = _ref5.key,\n                        style = _ref5.style,\n                        ribbon = _ref5.data;\n\n                    var color = getInterpolatedColor(style);\n\n                    return React.createElement('path', _extends({\n                        key: key,\n                        d: shapeGenerator({\n                            source: {\n                                startAngle: style.sourceStartAngle,\n                                endAngle: Math.max(style.sourceEndAngle, style.sourceStartAngle)\n                            },\n                            target: {\n                                startAngle: style.targetStartAngle,\n                                endAngle: Math.max(style.targetEndAngle, style.targetStartAngle)\n                            }\n                        }),\n                        fill: color,\n                        fillOpacity: style.opacity,\n                        stroke: getBorderColor(_extends({}, ribbon, { color: color })),\n                        strokeOpacity: style.opacity\n                    }, commonProps(ribbon)));\n                })\n            );\n        }\n    );\n};\n\nChordRibbons.propTypes = {\n    ribbons: PropTypes.array.isRequired,\n    shapeGenerator: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    getBorderColor: PropTypes.func.isRequired,\n    getOpacity: PropTypes.func.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    theme: PropTypes.object.isRequired,\n    showTooltip: PropTypes.func.isRequired,\n    hideTooltip: PropTypes.func.isRequired\n};\n\nvar enhance = compose(withPropsOnChange(['tooltipFormat'], function (_ref6) {\n    var tooltipFormat = _ref6.tooltipFormat;\n\n    if (!tooltipFormat || _isFunction(tooltipFormat)) return { tooltipFormat: tooltipFormat };\n    return { tooltipFormat: d3Format(tooltipFormat) };\n}), pure);\n\nexport default enhance(ChordRibbons);"]},"metadata":{},"sourceType":"module"}