{"ast":null,"code":"var React = require('react');\n\nvar PropTypes = require('prop-types');\n\nvar merge = require('object-assign');\n\nvar NotificationContainer = require('./NotificationContainer');\n\nvar Constants = require('./constants');\n\nvar Styles = require('./styles');\n\nclass NotificationSystem extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      notifications: []\n    };\n    this.uid = 3400;\n    this._isMounted = false;\n    this.overrideWidth = null;\n    this.overrideStyle = {};\n    this.elements = {\n      notification: 'NotificationItem',\n      title: 'Title',\n      messageWrapper: 'MessageWrapper',\n      dismiss: 'Dismiss',\n      action: 'Action',\n      actionWrapper: 'ActionWrapper'\n    };\n    this.setOverrideStyle = this.setOverrideStyle.bind(this);\n    this.wrapper = this.wrapper.bind(this);\n    this.container = this.container.bind(this);\n    this.byElement = this.byElement.bind(this);\n    this._didNotificationRemoved = this._didNotificationRemoved.bind(this);\n    this.addNotification = this.addNotification.bind(this);\n    this.getNotificationRef = this.getNotificationRef.bind(this);\n    this.removeNotification = this.removeNotification.bind(this);\n    this.editNotification = this.editNotification.bind(this);\n    this.clearNotifications = this.clearNotifications.bind(this);\n    this._getStyles = {\n      overrideWidth: this.overrideWidth,\n      overrideStyle: this.overrideStyle,\n      elements: this.elements,\n      setOverrideStyle: this.setOverrideStyle,\n      wrapper: this.wrapper,\n      container: this.container,\n      byElement: this.byElement\n    };\n  }\n\n  componentDidMount() {\n    this.setOverrideStyle(this.props.style);\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  setOverrideStyle(style) {\n    this.overrideStyle = style;\n  }\n\n  wrapper() {\n    if (!this.overrideStyle) return {};\n    return merge({}, Styles.Wrapper, this.overrideStyle.Wrapper);\n  }\n\n  container(position) {\n    var override = this.overrideStyle.Containers || {};\n    if (!this.overrideStyle) return {};\n    this.overrideWidth = Styles.Containers.DefaultStyle.width;\n\n    if (override.DefaultStyle && override.DefaultStyle.width) {\n      this.overrideWidth = override.DefaultStyle.width;\n    }\n\n    if (override[position] && override[position].width) {\n      this.overrideWidth = override[position].width;\n    }\n\n    return merge({}, Styles.Containers.DefaultStyle, Styles.Containers[position], override.DefaultStyle, override[position]);\n  }\n\n  byElement(element) {\n    return level => {\n      var _element = this.elements[element];\n      var override = this.overrideStyle[_element] || {};\n      if (!this.overrideStyle) return {};\n      return merge({}, Styles[_element].DefaultStyle, Styles[_element][level], override.DefaultStyle, override[level]);\n    };\n  }\n\n  _didNotificationRemoved(uid) {\n    var notification;\n    var notifications = this.state.notifications.filter(function (toCheck) {\n      if (toCheck.uid === uid) {\n        notification = toCheck;\n        return false;\n      }\n\n      return true;\n    });\n\n    if (this._isMounted) {\n      this.setState({\n        notifications: notifications\n      });\n    }\n\n    if (notification && notification.onRemove) {\n      notification.onRemove(notification);\n    }\n  }\n\n  addNotification(notification) {\n    var _notification = merge({}, Constants.notification, notification);\n\n    var notifications = this.state.notifications;\n    var i;\n\n    if (!_notification.level) {\n      throw new Error('notification level is required.');\n    }\n\n    if (Object.keys(Constants.levels).indexOf(_notification.level) === -1) {\n      throw new Error(\"'\" + _notification.level + \"' is not a valid level.\");\n    } // eslint-disable-next-line\n\n\n    if (isNaN(_notification.autoDismiss)) {\n      throw new Error(\"'autoDismiss' must be a number.\");\n    }\n\n    if (Object.keys(Constants.positions).indexOf(_notification.position) === -1) {\n      throw new Error(\"'\" + _notification.position + \"' is not a valid position.\");\n    } // Some preparations\n\n\n    _notification.position = _notification.position.toLowerCase();\n    _notification.level = _notification.level.toLowerCase();\n    _notification.autoDismiss = parseInt(_notification.autoDismiss, 10);\n    _notification.uid = _notification.uid || this.uid;\n    _notification.ref = 'notification-' + _notification.uid;\n    this.uid += 1; // do not add if the notification already exists based on supplied uid\n\n    for (i = 0; i < notifications.length; i += 1) {\n      if (notifications[i].uid === _notification.uid) {\n        return false;\n      }\n    }\n\n    if (this.props.newOnTop) {\n      notifications.unshift(_notification);\n    } else {\n      notifications.push(_notification);\n    }\n\n    if (typeof _notification.onAdd === 'function') {\n      notification.onAdd(_notification);\n    }\n\n    this.setState({\n      notifications: notifications\n    });\n    return _notification;\n  }\n\n  getNotificationRef(notification) {\n    var foundNotification = null;\n    Object.keys(this.refs).forEach(container => {\n      if (container.indexOf('container') > -1) {\n        Object.keys(this.refs[container].refs).forEach(_notification => {\n          var uid = notification.uid ? notification.uid : notification;\n\n          if (_notification === 'notification-' + uid) {\n            // NOTE: Stop iterating further and return the found notification.\n            // Since UIDs are uniques and there won't be another notification found.\n            foundNotification = this.refs[container].refs[_notification];\n          }\n        });\n      }\n    });\n    return foundNotification;\n  }\n\n  removeNotification(notification) {\n    var foundNotification = this.getNotificationRef(notification);\n    return foundNotification && foundNotification._hideNotification();\n  }\n\n  editNotification(notification, newNotification) {\n    var foundNotification = null; // NOTE: Find state notification to update by using\n    // `setState` and forcing React to re-render the component.\n\n    var uid = notification.uid ? notification.uid : notification;\n    var newNotifications = this.state.notifications.filter(function (stateNotification) {\n      if (uid === stateNotification.uid) {\n        foundNotification = stateNotification;\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!foundNotification) {\n      return;\n    }\n\n    newNotifications.push(merge({}, foundNotification, newNotification));\n    this.setState({\n      notifications: newNotifications\n    });\n  }\n\n  clearNotifications() {\n    Object.keys(this.refs).forEach(container => {\n      if (container.indexOf('container') > -1) {\n        Object.keys(this.refs[container].refs).forEach(_notification => {\n          this.refs[container].refs[_notification]._hideNotification();\n        });\n      }\n    });\n  }\n\n  render() {\n    var containers = null;\n    var notifications = this.state.notifications;\n\n    if (notifications.length) {\n      containers = Object.keys(Constants.positions).map(position => {\n        var _notifications = notifications.filter(notification => {\n          return position === notification.position;\n        });\n\n        if (!_notifications.length) {\n          return null;\n        }\n\n        return React.createElement(NotificationContainer, {\n          ref: 'container-' + position,\n          key: position,\n          position: position,\n          notifications: _notifications,\n          getStyles: this._getStyles,\n          onRemove: this._didNotificationRemoved,\n          noAnimation: this.props.noAnimation,\n          allowHTML: this.props.allowHTML\n        });\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"notifications-wrapper\",\n      style: this.wrapper()\n    }, containers);\n  }\n\n}\n\nNotificationSystem.propTypes = {\n  style: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  noAnimation: PropTypes.bool,\n  allowHTML: PropTypes.bool,\n  newOnTop: PropTypes.bool\n};\nNotificationSystem.defaultProps = {\n  style: {},\n  noAnimation: false,\n  allowHTML: false,\n  newOnTop: false\n};\nmodule.exports = NotificationSystem;","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/react-notification-system/dist/NotificationSystem.js"],"names":["React","require","PropTypes","merge","NotificationContainer","Constants","Styles","NotificationSystem","Component","constructor","state","notifications","uid","_isMounted","overrideWidth","overrideStyle","elements","notification","title","messageWrapper","dismiss","action","actionWrapper","setOverrideStyle","bind","wrapper","container","byElement","_didNotificationRemoved","addNotification","getNotificationRef","removeNotification","editNotification","clearNotifications","_getStyles","componentDidMount","props","style","componentWillUnmount","Wrapper","position","override","Containers","DefaultStyle","width","element","level","_element","filter","toCheck","setState","onRemove","_notification","i","Error","Object","keys","levels","indexOf","isNaN","autoDismiss","positions","toLowerCase","parseInt","ref","length","newOnTop","unshift","push","onAdd","foundNotification","refs","forEach","_hideNotification","newNotification","newNotifications","stateNotification","render","containers","map","_notifications","createElement","key","getStyles","noAnimation","allowHTML","className","propTypes","oneOfType","bool","object","defaultProps","module","exports"],"mappings":"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","sourcesContent":["var React = require('react');\nvar PropTypes = require('prop-types');\nvar merge = require('object-assign');\nvar NotificationContainer = require('./NotificationContainer');\nvar Constants = require('./constants');\nvar Styles = require('./styles');\n\nclass NotificationSystem extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      notifications: []\n    };\n    this.uid = 3400;\n    this._isMounted = false;\n    this.overrideWidth = null;\n    this.overrideStyle = {};\n    this.elements = {\n      notification: 'NotificationItem',\n      title: 'Title',\n      messageWrapper: 'MessageWrapper',\n      dismiss: 'Dismiss',\n      action: 'Action',\n      actionWrapper: 'ActionWrapper'\n    };\n\n    this.setOverrideStyle = this.setOverrideStyle.bind(this);\n    this.wrapper = this.wrapper.bind(this);\n    this.container = this.container.bind(this);\n    this.byElement = this.byElement.bind(this);\n    this._didNotificationRemoved = this._didNotificationRemoved.bind(this);\n    this.addNotification = this.addNotification.bind(this);\n    this.getNotificationRef = this.getNotificationRef.bind(this);\n    this.removeNotification = this.removeNotification.bind(this);\n    this.editNotification = this.editNotification.bind(this);\n    this.clearNotifications = this.clearNotifications.bind(this);\n\n    this._getStyles = {\n      overrideWidth: this.overrideWidth,\n      overrideStyle: this.overrideStyle,\n      elements: this.elements,\n      setOverrideStyle: this.setOverrideStyle,\n      wrapper: this.wrapper,\n      container: this.container,\n      byElement: this.byElement\n    };\n  }\n\n  componentDidMount() {\n    this.setOverrideStyle(this.props.style);\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  setOverrideStyle(style) {\n    this.overrideStyle = style;\n  }\n\n  wrapper() {\n    if (!this.overrideStyle) return {};\n    return merge({}, Styles.Wrapper, this.overrideStyle.Wrapper);\n  }\n\n  container(position) {\n    var override = this.overrideStyle.Containers || {};\n    if (!this.overrideStyle) return {};\n\n    this.overrideWidth = Styles.Containers.DefaultStyle.width;\n\n    if (override.DefaultStyle && override.DefaultStyle.width) {\n      this.overrideWidth = override.DefaultStyle.width;\n    }\n\n    if (override[position] && override[position].width) {\n      this.overrideWidth = override[position].width;\n    }\n\n    return merge(\n      {},\n      Styles.Containers.DefaultStyle,\n      Styles.Containers[position],\n      override.DefaultStyle,\n      override[position]\n    );\n  }\n\n  byElement(element) {\n    return (level) => {\n      var _element = this.elements[element];\n      var override = this.overrideStyle[_element] || {};\n      if (!this.overrideStyle) return {};\n      return merge(\n        {},\n        Styles[_element].DefaultStyle,\n        Styles[_element][level],\n        override.DefaultStyle,\n        override[level]\n      );\n    };\n  }\n\n  _didNotificationRemoved(uid) {\n    var notification;\n    var notifications = this.state.notifications.filter(function(toCheck) {\n      if (toCheck.uid === uid) {\n        notification = toCheck;\n        return false;\n      }\n      return true;\n    });\n\n    if (this._isMounted) {\n      this.setState({ notifications: notifications });\n    }\n\n    if (notification && notification.onRemove) {\n      notification.onRemove(notification);\n    }\n  }\n\n  addNotification(notification) {\n    var _notification = merge({}, Constants.notification, notification);\n    var notifications = this.state.notifications;\n    var i;\n\n\n    if (!_notification.level) {\n      throw new Error('notification level is required.');\n    }\n\n    if (Object.keys(Constants.levels).indexOf(_notification.level) === -1) {\n      throw new Error(\"'\" + _notification.level + \"' is not a valid level.\");\n    }\n\n    // eslint-disable-next-line\n    if (isNaN(_notification.autoDismiss)) {\n      throw new Error(\"'autoDismiss' must be a number.\");\n    }\n\n    if (\n      Object.keys(Constants.positions).indexOf(_notification.position) === -1\n    ) {\n      throw new Error(\"'\" + _notification.position + \"' is not a valid position.\");\n    }\n\n    // Some preparations\n    _notification.position = _notification.position.toLowerCase();\n    _notification.level = _notification.level.toLowerCase();\n    _notification.autoDismiss = parseInt(_notification.autoDismiss, 10);\n\n    _notification.uid = _notification.uid || this.uid;\n    _notification.ref = 'notification-' + _notification.uid;\n    this.uid += 1;\n\n\n    // do not add if the notification already exists based on supplied uid\n    for (i = 0; i < notifications.length; i += 1) {\n      if (notifications[i].uid === _notification.uid) {\n        return false;\n      }\n    }\n\n    if (this.props.newOnTop) {\n      notifications.unshift(_notification);\n    } else {\n      notifications.push(_notification);\n    }\n\n\n    if (typeof _notification.onAdd === 'function') {\n      notification.onAdd(_notification);\n    }\n\n    this.setState({\n      notifications: notifications\n    });\n\n    return _notification;\n  }\n\n  getNotificationRef(notification) {\n    var foundNotification = null;\n\n    Object.keys(this.refs).forEach((container) => {\n      if (container.indexOf('container') > -1) {\n        Object.keys(this.refs[container].refs).forEach((_notification) => {\n          var uid = notification.uid ? notification.uid : notification;\n          if (_notification === 'notification-' + uid) {\n            // NOTE: Stop iterating further and return the found notification.\n            // Since UIDs are uniques and there won't be another notification found.\n            foundNotification = this.refs[container].refs[_notification];\n          }\n        });\n      }\n    });\n\n    return foundNotification;\n  }\n\n  removeNotification(notification) {\n    var foundNotification = this.getNotificationRef(notification);\n    return foundNotification && foundNotification._hideNotification();\n  }\n\n  editNotification(notification, newNotification) {\n    var foundNotification = null;\n    // NOTE: Find state notification to update by using\n    // `setState` and forcing React to re-render the component.\n    var uid = notification.uid ? notification.uid : notification;\n\n    var newNotifications = this.state.notifications.filter(function(stateNotification) {\n      if (uid === stateNotification.uid) {\n        foundNotification = stateNotification;\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!foundNotification) {\n      return;\n    }\n\n    newNotifications.push(merge({}, foundNotification, newNotification));\n\n    this.setState({\n      notifications: newNotifications\n    });\n  }\n\n  clearNotifications() {\n    Object.keys(this.refs).forEach((container) => {\n      if (container.indexOf('container') > -1) {\n        Object.keys(this.refs[container].refs).forEach((_notification) => {\n          this.refs[container].refs[_notification]._hideNotification();\n        });\n      }\n    });\n  }\n\n  render() {\n    var containers = null;\n    var notifications = this.state.notifications;\n\n    if (notifications.length) {\n      containers = Object.keys(Constants.positions).map((position) => {\n        var _notifications = notifications.filter((notification) => {\n          return position === notification.position;\n        });\n\n        if (!_notifications.length) {\n          return null;\n        }\n\n        return (\n          React.createElement(NotificationContainer, {\n            ref:  'container-' + position, \n            key:  position, \n            position:  position, \n            notifications:  _notifications, \n            getStyles:  this._getStyles, \n            onRemove:  this._didNotificationRemoved, \n            noAnimation:  this.props.noAnimation, \n            allowHTML:  this.props.allowHTML}\n          )\n        );\n      });\n    }\n\n    return (\n      React.createElement(\"div\", {className: \"notifications-wrapper\", style:  this.wrapper() }, \n        containers\n      )\n    );\n  }\n}\n\nNotificationSystem.propTypes = {\n  style: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  noAnimation: PropTypes.bool,\n  allowHTML: PropTypes.bool,\n  newOnTop: PropTypes.bool\n};\n\nNotificationSystem.defaultProps = {\n  style: {},\n  noAnimation: false,\n  allowHTML: false,\n  newOnTop: false\n};\n\nmodule.exports = NotificationSystem;\n"]},"metadata":{},"sourceType":"script"}