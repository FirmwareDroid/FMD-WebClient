{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar TreeMapHtmlNode = function TreeMapHtmlNode(_ref) {\n  var node = _ref.node,\n      style = _ref.style,\n      handlers = _ref.handlers;\n  if (style.width <= 0 || style.height <= 0) return null;\n  var rotate = node.label && style.orientLabel && style.height > style.width;\n  return React.createElement('div', _extends({\n    style: {\n      boxSizing: 'border-box',\n      position: 'absolute',\n      top: style.y,\n      left: style.x,\n      width: style.width,\n      height: style.height,\n      background: style.color,\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderWidth: style.borderWidth,\n      borderStyle: 'solid',\n      borderColor: style.borderColor\n    }\n  }, handlers), node.label !== false && React.createElement('span', {\n    style: {\n      color: style.labelTextColor,\n      transform: 'rotate(' + (rotate ? '-90' : '0') + 'deg)',\n      WebkitUserSelect: 'none',\n      MozUserSelect: 'none',\n      MsUserSelect: 'none',\n      userSelect: 'none'\n    }\n  }, node.label));\n};\n\nTreeMapHtmlNode.propTypes = {\n  node: PropTypes.object.isRequired,\n  style: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    labelTextColor: PropTypes.string.isRequired,\n    orientLabel: PropTypes.bool.isRequired\n  }).isRequired,\n  handlers: PropTypes.object.isRequired\n};\nexport default TreeMapHtmlNode;","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/components/charts/treemap/TreeMapHtmlNode.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","React","PropTypes","TreeMapHtmlNode","_ref","node","style","handlers","width","height","rotate","label","orientLabel","createElement","boxSizing","position","top","y","left","x","background","color","overflow","display","alignItems","justifyContent","borderWidth","borderStyle","borderColor","labelTextColor","transform","WebkitUserSelect","MozUserSelect","MsUserSelect","userSelect","propTypes","object","isRequired","shape","number","string","bool"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar TreeMapHtmlNode = function TreeMapHtmlNode(_ref) {\n    var node = _ref.node,\n        style = _ref.style,\n        handlers = _ref.handlers;\n\n    if (style.width <= 0 || style.height <= 0) return null;\n\n    var rotate = node.label && style.orientLabel && style.height > style.width;\n\n    return React.createElement(\n        'div',\n        _extends({\n            style: {\n                boxSizing: 'border-box',\n                position: 'absolute',\n                top: style.y,\n                left: style.x,\n                width: style.width,\n                height: style.height,\n                background: style.color,\n                overflow: 'hidden',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                borderWidth: style.borderWidth,\n                borderStyle: 'solid',\n                borderColor: style.borderColor\n            }\n        }, handlers),\n        node.label !== false && React.createElement(\n            'span',\n            {\n                style: {\n                    color: style.labelTextColor,\n                    transform: 'rotate(' + (rotate ? '-90' : '0') + 'deg)',\n                    WebkitUserSelect: 'none',\n                    MozUserSelect: 'none',\n                    MsUserSelect: 'none',\n                    userSelect: 'none'\n                }\n            },\n            node.label\n        )\n    );\n};\n\nTreeMapHtmlNode.propTypes = {\n    node: PropTypes.object.isRequired,\n    style: PropTypes.shape({\n        x: PropTypes.number.isRequired,\n        y: PropTypes.number.isRequired,\n        width: PropTypes.number.isRequired,\n        height: PropTypes.number.isRequired,\n        color: PropTypes.string.isRequired,\n        borderWidth: PropTypes.number.isRequired,\n        borderColor: PropTypes.string.isRequired,\n        labelTextColor: PropTypes.string.isRequired,\n        orientLabel: PropTypes.bool.isRequired\n    }).isRequired,\n    handlers: PropTypes.object.isRequired\n};\n\nexport default TreeMapHtmlNode;"]},"metadata":{},"sourceType":"module"}