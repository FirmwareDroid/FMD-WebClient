{"ast":null,"code":"var _jsxFileName=\"/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/src/components/Diagrams/PieChart.jsx\";import React from'react';import ChartistGraph from\"react-chartist\";import Legend from\"chartist-plugin-legend\";import{Spinner}from\"react-bootstrap\";/**\n * Creates a\n * @param data\n * @returns {{labels: Array, series: Array}}\n */function create_labels_and_series(data){let labels=[];let series=[];for(let key in data){if(data.hasOwnProperty(key)){labels.push(key);series.push(data[key]);}}return{labels:labels,series:series};}/**\n * Creates a ChartistGraph pie chart.\n * @param data: the data to generate the chart from.\n * @param labelOffset: offset of the labels.\n * @param legendPosition: Position of the chart legend. Examples: 'top', 'bottom'\n * @returns {*}\n * @constructor\n */function PieChart({data,labelOffset,legendPosition}){if(!data||data.length===0)return/*#__PURE__*/React.createElement(Spinner,{animation:\"border\",variant:\"primary\",size:\"mg\",__self:this,__source:{fileName:_jsxFileName,lineNumber:32,columnNumber:42}});const pieData=create_labels_and_series(data);const plugins=[Legend({position:legendPosition})];const sum=function(a,b){return a+b;};const total=pieData.series.reduce(sum);return/*#__PURE__*/React.createElement(ChartistGraph,{options:{chartPadding:0,labelOffset:labelOffset,labelDirection:'explode',plugins,labelInterpolationFnc:function(label){const index=pieData.labels.indexOf(label);console.log(\"pieData.series\",pieData.series,\"labels\",pieData.labels,\"total\",total,\"index\",index);//return Math.round(pieData.series[index].value / total * 100) + '%';\nreturn(pieData.series[index].value/total*100).toFixed(2)+'%';}},data:pieData,type:\"Pie\",__self:this,__source:{fileName:_jsxFileName,lineNumber:38,columnNumber:10}});}export default PieChart;","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/src/components/Diagrams/PieChart.jsx"],"names":["React","ChartistGraph","Legend","Spinner","create_labels_and_series","data","labels","series","key","hasOwnProperty","push","PieChart","labelOffset","legendPosition","length","pieData","plugins","position","sum","a","b","total","reduce","chartPadding","labelDirection","labelInterpolationFnc","label","index","indexOf","console","log","value","toFixed"],"mappings":"wIAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,gBAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,OAASC,OAAT,KAAwB,iBAAxB,CAEA;;;;GAKA,QAASC,CAAAA,wBAAT,CAAkCC,IAAlC,CAAuC,CACrC,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACA,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACA,IAAK,GAAIC,CAAAA,GAAT,GAAgBH,CAAAA,IAAhB,CAAsB,CACpB,GAAIA,IAAI,CAACI,cAAL,CAAoBD,GAApB,CAAJ,CAA8B,CAC5BF,MAAM,CAACI,IAAP,CAAYF,GAAZ,EACAD,MAAM,CAACG,IAAP,CAAYL,IAAI,CAACG,GAAD,CAAhB,EACD,CACF,CACD,MAAO,CAACF,MAAM,CAAEA,MAAT,CAAiBC,MAAM,CAAEA,MAAzB,CAAP,CACD,CAED;;;;;;;GAQA,QAASI,CAAAA,QAAT,CAAkB,CAACN,IAAD,CAAOO,WAAP,CAAoBC,cAApB,CAAlB,CAAuD,CACrD,GAAI,CAACR,IAAD,EAASA,IAAI,CAACS,MAAL,GAAgB,CAA7B,CAAgC,mBAAO,oBAAC,OAAD,EAAS,SAAS,CAAC,QAAnB,CAA4B,OAAO,CAAC,SAApC,CAA8C,IAAI,CAAC,IAAnD,6EAAP,CAChC,KAAMC,CAAAA,OAAO,CAAGX,wBAAwB,CAACC,IAAD,CAAxC,CACA,KAAMW,CAAAA,OAAO,CAAG,CAACd,MAAM,CAAC,CAACe,QAAQ,CAAEJ,cAAX,CAAD,CAAP,CAAhB,CACA,KAAMK,CAAAA,GAAG,CAAG,SAASC,CAAT,CAAYC,CAAZ,CAAe,CAAE,MAAOD,CAAAA,CAAC,CAAGC,CAAX,CAAc,CAA3C,CACA,KAAMC,CAAAA,KAAK,CAAGN,OAAO,CAACR,MAAR,CAAee,MAAf,CAAsBJ,GAAtB,CAAd,CAEA,mBAAO,oBAAC,aAAD,EACG,OAAO,CACP,CACEK,YAAY,CAAE,CADhB,CAEEX,WAAW,CAAEA,WAFf,CAGEY,cAAc,CAAE,SAHlB,CAIER,OAJF,CAKES,qBAAqB,CAAE,SAASC,KAAT,CAAgB,CACrC,KAAMC,CAAAA,KAAK,CAAGZ,OAAO,CAACT,MAAR,CAAesB,OAAf,CAAuBF,KAAvB,CAAd,CACAG,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA8Bf,OAAO,CAACR,MAAtC,CAA8C,QAA9C,CAAwDQ,OAAO,CAACT,MAAhE,CAAwE,OAAxE,CAAiFe,KAAjF,CAAwF,OAAxF,CAAiGM,KAAjG,EACA;AACA,MAAO,CAACZ,OAAO,CAACR,MAAR,CAAeoB,KAAf,EAAsBI,KAAtB,CAA8BV,KAA9B,CAAsC,GAAvC,EAA4CW,OAA5C,CAAoD,CAApD,EAAyD,GAAhE,CACD,CAVH,CAFH,CAeG,IAAI,CAAEjB,OAfT,CAgBG,IAAI,CAAC,KAhBR,6EAAP,CAiBD,CAED,cAAeJ,CAAAA,QAAf","sourcesContent":["import React from 'react';\nimport ChartistGraph from \"react-chartist\";\nimport Legend from \"chartist-plugin-legend\";\nimport { Spinner } from \"react-bootstrap\";\n\n/**\n * Creates a\n * @param data\n * @returns {{labels: Array, series: Array}}\n */\nfunction create_labels_and_series(data){\n  let labels = [];\n  let series = [];\n  for (let key in data) {\n    if (data.hasOwnProperty(key)) {\n      labels.push(key);\n      series.push(data[key]);\n    }\n  }\n  return {labels: labels, series: series}\n}\n\n/**\n * Creates a ChartistGraph pie chart.\n * @param data: the data to generate the chart from.\n * @param labelOffset: offset of the labels.\n * @param legendPosition: Position of the chart legend. Examples: 'top', 'bottom'\n * @returns {*}\n * @constructor\n */\nfunction PieChart({data, labelOffset, legendPosition}) {\n  if (!data || data.length === 0) return <Spinner animation=\"border\" variant=\"primary\" size=\"mg\"/>;\n  const pieData = create_labels_and_series(data);\n  const plugins = [Legend({position: legendPosition})];\n  const sum = function(a, b) { return a + b };\n  const total = pieData.series.reduce(sum);\n\n  return <ChartistGraph\n            options={\n            {\n              chartPadding: 0,\n              labelOffset: labelOffset,\n              labelDirection: 'explode',\n              plugins,\n              labelInterpolationFnc: function(label) {\n                const index = pieData.labels.indexOf(label);\n                console.log(\"pieData.series\", pieData.series, \"labels\", pieData.labels, \"total\", total, \"index\", index);\n                //return Math.round(pieData.series[index].value / total * 100) + '%';\n                return (pieData.series[index].value / total * 100).toFixed(2) + '%';\n              }\n            }\n          }\n            data={pieData}\n            type=\"Pie\"/>;\n}\n\nexport default PieChart;\n"]},"metadata":{},"sourceType":"module"}