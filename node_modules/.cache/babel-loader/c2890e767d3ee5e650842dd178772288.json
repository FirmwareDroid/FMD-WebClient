{"ast":null,"code":"/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types';\nimport { quantizeColorScalePropType } from '../../../props';\nexport var HeatMapPropTypes = {\n  // data\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  indexBy: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  getIndex: PropTypes.func.isRequired,\n  // computed\n  keys: PropTypes.arrayOf(PropTypes.string).isRequired,\n  minValue: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  maxValue: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  forceSquare: PropTypes.bool.isRequired,\n  sizeVariation: PropTypes.number.isRequired,\n  padding: PropTypes.number.isRequired,\n  // cells\n  cellShape: PropTypes.oneOfType([PropTypes.oneOf(['rect', 'circle']), PropTypes.func]).isRequired,\n  cellOpacity: PropTypes.number.isRequired,\n  cellBorderWidth: PropTypes.number.isRequired,\n  cellBorderColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  getCellBorderColor: PropTypes.func.isRequired,\n  // computed\n  // axes & grid\n  axisTop: PropTypes.object,\n  axisRight: PropTypes.object,\n  axisBottom: PropTypes.object,\n  axisLeft: PropTypes.object,\n  enableGridX: PropTypes.bool.isRequired,\n  enableGridY: PropTypes.bool.isRequired,\n  // labels\n  enableLabels: PropTypes.bool.isRequired,\n  labelTextColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  getLabelTextColor: PropTypes.func.isRequired,\n  // computed\n  // theming\n  colors: quantizeColorScalePropType.isRequired,\n  colorScale: PropTypes.func.isRequired,\n  // computed\n  // interactivity\n  isInteractive: PropTypes.bool,\n  hoverTarget: PropTypes.oneOf(['cell', 'row', 'column', 'rowColumn']).isRequired,\n  cellHoverOpacity: PropTypes.number.isRequired,\n  cellHoverOthersOpacity: PropTypes.number.isRequired,\n  tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  // canvas specific\n  pixelRatio: PropTypes.number.isRequired\n};\nexport var HeatMapDefaultProps = {\n  indexBy: 'id',\n  minValue: 'auto',\n  maxValue: 'auto',\n  forceSquare: false,\n  sizeVariation: 0,\n  padding: 0,\n  // cells\n  cellShape: 'rect',\n  cellOpacity: 0.85,\n  cellBorderWidth: 0,\n  cellBorderColor: 'inherit',\n  // axes & grid\n  axisTop: {},\n  axisLeft: {},\n  enableGridX: false,\n  enableGridY: false,\n  // labels\n  enableLabels: true,\n  labelTextColor: 'inherit:darker(1.4)',\n  // theming\n  colors: 'nivo',\n  // interactivity\n  isInteractive: true,\n  hoverTarget: 'rowColumn',\n  cellHoverOpacity: 1,\n  cellHoverOthersOpacity: 0.35,\n  // canvas specific\n  pixelRatio: global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1\n};","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/components/charts/heatmap/props.js"],"names":["PropTypes","quantizeColorScalePropType","HeatMapPropTypes","data","arrayOf","object","isRequired","indexBy","oneOfType","string","func","getIndex","keys","minValue","oneOf","number","maxValue","forceSquare","bool","sizeVariation","padding","cellShape","cellOpacity","cellBorderWidth","cellBorderColor","getCellBorderColor","axisTop","axisRight","axisBottom","axisLeft","enableGridX","enableGridY","enableLabels","labelTextColor","getLabelTextColor","colors","colorScale","isInteractive","hoverTarget","cellHoverOpacity","cellHoverOthersOpacity","tooltipFormat","pixelRatio","HeatMapDefaultProps","global","window","devicePixelRatio"],"mappings":"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","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types';\nimport { quantizeColorScalePropType } from '../../../props';\n\nexport var HeatMapPropTypes = {\n    // data\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    indexBy: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    getIndex: PropTypes.func.isRequired, // computed\n    keys: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n    minValue: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n    maxValue: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n\n    forceSquare: PropTypes.bool.isRequired,\n    sizeVariation: PropTypes.number.isRequired,\n    padding: PropTypes.number.isRequired,\n\n    // cells\n    cellShape: PropTypes.oneOfType([PropTypes.oneOf(['rect', 'circle']), PropTypes.func]).isRequired,\n    cellOpacity: PropTypes.number.isRequired,\n    cellBorderWidth: PropTypes.number.isRequired,\n    cellBorderColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    getCellBorderColor: PropTypes.func.isRequired, // computed\n\n    // axes & grid\n    axisTop: PropTypes.object,\n    axisRight: PropTypes.object,\n    axisBottom: PropTypes.object,\n    axisLeft: PropTypes.object,\n    enableGridX: PropTypes.bool.isRequired,\n    enableGridY: PropTypes.bool.isRequired,\n\n    // labels\n    enableLabels: PropTypes.bool.isRequired,\n    labelTextColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    getLabelTextColor: PropTypes.func.isRequired, // computed\n\n    // theming\n    colors: quantizeColorScalePropType.isRequired,\n    colorScale: PropTypes.func.isRequired, // computed\n\n    // interactivity\n    isInteractive: PropTypes.bool,\n    hoverTarget: PropTypes.oneOf(['cell', 'row', 'column', 'rowColumn']).isRequired,\n    cellHoverOpacity: PropTypes.number.isRequired,\n    cellHoverOthersOpacity: PropTypes.number.isRequired,\n    tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    // canvas specific\n    pixelRatio: PropTypes.number.isRequired\n};\n\nexport var HeatMapDefaultProps = {\n    indexBy: 'id',\n\n    minValue: 'auto',\n    maxValue: 'auto',\n\n    forceSquare: false,\n    sizeVariation: 0,\n    padding: 0,\n\n    // cells\n    cellShape: 'rect',\n    cellOpacity: 0.85,\n    cellBorderWidth: 0,\n    cellBorderColor: 'inherit',\n\n    // axes & grid\n    axisTop: {},\n    axisLeft: {},\n    enableGridX: false,\n    enableGridY: false,\n\n    // labels\n    enableLabels: true,\n    labelTextColor: 'inherit:darker(1.4)',\n\n    // theming\n    colors: 'nivo',\n\n    // interactivity\n    isInteractive: true,\n    hoverTarget: 'rowColumn',\n    cellHoverOpacity: 1,\n    cellHoverOthersOpacity: 0.35,\n\n    // canvas specific\n    pixelRatio: global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1\n};"]},"metadata":{},"sourceType":"module"}