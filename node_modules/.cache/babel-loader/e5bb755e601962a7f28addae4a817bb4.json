{"ast":null,"code":"var _jsxFileName=\"/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/src/components/Diagrams/PieChart.jsx\";import React from'react';import useSWR from'swr';import ChartistGraph from\"react-chartist\";import{Spinner}from\"react-bootstrap\";const fetcher=url=>fetch(url).then(r=>r.json());/*\n * Creates a data object for ChartistGraph Pie chart.\n * @param: data: json\n */function createPieChartData(data){let total_samples=0;for(let key in data){if(data.hasOwnProperty(key)){total_samples=total_samples+data[key];}}let labels=[];let series=[];for(let key in data){if(data.hasOwnProperty(key)){labels.push(key);let value=total_samples/100*data[key];value=Math.round((value+Number.EPSILON)*100)/100;series.push(value);}}console.log(\"labels\",JSON.stringify(labels));console.log(\"Series\",JSON.stringify(series));return{labels:labels,series:series};}function PieChart({dataUrl}){const{data,error}=useSWR(dataUrl,{fetcher:fetcher,refreshInterval:3000});if(error)return/*#__PURE__*/React.createElement(\"h1\",{__self:this,__source:{fileName:_jsxFileName,lineNumber:37,columnNumber:21}},\"Something went wrong!\");if(!data)return/*#__PURE__*/React.createElement(Spinner,{animation:\"border\",variant:\"primary\",size:\"mg\",__self:this,__source:{fileName:_jsxFileName,lineNumber:38,columnNumber:21}});return/*#__PURE__*/React.createElement(ChartistGraph,{data:createPieChartData(data.number_of_firmware_by_android_version),type:\"Pie\",__self:this,__source:{fileName:_jsxFileName,lineNumber:40,columnNumber:10}});}export default PieChart;","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/src/components/Diagrams/PieChart.jsx"],"names":["React","useSWR","ChartistGraph","Spinner","fetcher","url","fetch","then","r","json","createPieChartData","data","total_samples","key","hasOwnProperty","labels","series","push","value","Math","round","Number","EPSILON","console","log","JSON","stringify","PieChart","dataUrl","error","refreshInterval","number_of_firmware_by_android_version"],"mappings":"wIAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,KAAnB,CACA,MAAOC,CAAAA,aAAP,KAA0B,gBAA1B,CACA,OAASC,OAAT,KAAwB,iBAAxB,CAGA,KAAMC,CAAAA,OAAO,CAAGC,GAAG,EAAIC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,CAAC,EAAIA,CAAC,CAACC,IAAF,EAArB,CAAvB,CACA;;;GAIA,QAASC,CAAAA,kBAAT,CAA4BC,IAA5B,CAAiC,CAC/B,GAAIC,CAAAA,aAAa,CAAG,CAApB,CACA,IAAK,GAAIC,CAAAA,GAAT,GAAgBF,CAAAA,IAAhB,CAAsB,CACpB,GAAIA,IAAI,CAACG,cAAL,CAAoBD,GAApB,CAAJ,CAA8B,CAC5BD,aAAa,CAAGA,aAAa,CAAGD,IAAI,CAACE,GAAD,CAApC,CACD,CACF,CACD,GAAIE,CAAAA,MAAM,CAAG,EAAb,CACA,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACA,IAAK,GAAIH,CAAAA,GAAT,GAAgBF,CAAAA,IAAhB,CAAsB,CACpB,GAAIA,IAAI,CAACG,cAAL,CAAoBD,GAApB,CAAJ,CAA8B,CAC5BE,MAAM,CAACE,IAAP,CAAYJ,GAAZ,EACA,GAAIK,CAAAA,KAAK,CAAIN,aAAa,CAAC,GAAf,CAAsBD,IAAI,CAACE,GAAD,CAAtC,CACAK,KAAK,CAAGC,IAAI,CAACC,KAAL,CAAW,CAACF,KAAK,CAAGG,MAAM,CAACC,OAAhB,EAA2B,GAAtC,EAA6C,GAArD,CACAN,MAAM,CAACC,IAAP,CAAYC,KAAZ,EACD,CACF,CACDK,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAsBC,IAAI,CAACC,SAAL,CAAeX,MAAf,CAAtB,EACAQ,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAsBC,IAAI,CAACC,SAAL,CAAeV,MAAf,CAAtB,EACA,MAAO,CAACD,MAAM,CAAEA,MAAT,CAAiBC,MAAM,CAAEA,MAAzB,CAAP,CACD,CAGD,QAASW,CAAAA,QAAT,CAAkB,CAACC,OAAD,CAAlB,CAA6B,CAC3B,KAAM,CAAEjB,IAAF,CAAQkB,KAAR,EAAkB5B,MAAM,CAAC2B,OAAD,CAAU,CAACxB,OAAO,CAACA,OAAT,CAAkB0B,eAAe,CAAE,IAAnC,CAAV,CAA9B,CACA,GAAID,KAAJ,CAAW,mBAAO,8HAAP,CACX,GAAI,CAAClB,IAAL,CAAW,mBAAO,oBAAC,OAAD,EAAS,SAAS,CAAC,QAAnB,CAA4B,OAAO,CAAC,SAApC,CAA8C,IAAI,CAAC,IAAnD,6EAAP,CAEX,mBAAO,oBAAC,aAAD,EAAe,IAAI,CAAED,kBAAkB,CAACC,IAAI,CAACoB,qCAAN,CAAvC,CAAqF,IAAI,CAAC,KAA1F,6EAAP,CACD,CAED,cAAeJ,CAAAA,QAAf","sourcesContent":["import React from 'react';\nimport useSWR from 'swr';\nimport ChartistGraph from \"react-chartist\";\nimport { Spinner } from \"react-bootstrap\";\n\n\nconst fetcher = url => fetch(url).then(r => r.json())\n/*\n * Creates a data object for ChartistGraph Pie chart.\n * @param: data: json\n */\nfunction createPieChartData(data){\n  let total_samples = 0;\n  for (let key in data) {\n    if (data.hasOwnProperty(key)) {\n      total_samples = total_samples + data[key];\n    }\n  }\n  let labels = [];\n  let series = [];\n  for (let key in data) {\n    if (data.hasOwnProperty(key)) {\n      labels.push(key);\n      let value = (total_samples/100) * data[key];\n      value = Math.round((value + Number.EPSILON) * 100) / 100;\n      series.push(value);\n    }\n  }\n  console.log(\"labels\", JSON.stringify(labels));\n  console.log(\"Series\", JSON.stringify(series));\n  return {labels: labels, series: series}\n}\n\n\nfunction PieChart({dataUrl}) {\n  const { data, error } = useSWR(dataUrl, {fetcher:fetcher, refreshInterval: 3000});\n  if (error) return <h1>Something went wrong!</h1>;\n  if (!data) return <Spinner animation=\"border\" variant=\"primary\" size=\"mg\"/>;\n\n  return <ChartistGraph data={createPieChartData(data.number_of_firmware_by_android_version)} type=\"Pie\" />;\n}\n\nexport default PieChart;\n"]},"metadata":{},"sourceType":"module"}