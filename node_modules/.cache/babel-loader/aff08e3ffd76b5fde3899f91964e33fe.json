{"ast":null,"code":"var React = require('react');\n\nvar PropTypes = require('prop-types');\n\nvar ReactDOM = require('react-dom');\n\nvar Constants = require('./constants');\n\nvar Helpers = require('./helpers');\n\nvar merge = require('object-assign');\n/* From Modernizr */\n\n\nvar whichTransitionEvent = function () {\n  var el = document.createElement('fakeelement');\n  var transition;\n  var transitions = {\n    transition: 'transitionend',\n    OTransition: 'oTransitionEnd',\n    MozTransition: 'transitionend',\n    WebkitTransition: 'webkitTransitionEnd'\n  };\n  Object.keys(transitions).forEach(function (transitionKey) {\n    if (el.style[transitionKey] !== undefined) {\n      transition = transitions[transitionKey];\n    }\n  });\n  return transition;\n};\n\nfunction _allowHTML(string) {\n  return {\n    __html: string\n  };\n}\n\nclass NotificationItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this._notificationTimer = null;\n    this._height = 0;\n    this._noAnimation = null;\n    this._isMounted = false;\n    this._removeCount = 0;\n    this.state = {\n      visible: undefined,\n      removed: false\n    };\n    const getStyles = props.getStyles;\n    const level = props.notification.level;\n    const dismissible = props.notification.dismissible;\n    this._noAnimation = props.noAnimation;\n    this._styles = {\n      notification: getStyles.byElement('notification')(level),\n      title: getStyles.byElement('title')(level),\n      dismiss: getStyles.byElement('dismiss')(level),\n      messageWrapper: getStyles.byElement('messageWrapper')(level),\n      actionWrapper: getStyles.byElement('actionWrapper')(level),\n      action: getStyles.byElement('action')(level)\n    };\n\n    if (!dismissible || dismissible === 'none' || dismissible === 'button') {\n      this._styles.notification.cursor = 'default';\n    }\n\n    this._getCssPropertyByPosition = this._getCssPropertyByPosition.bind(this);\n    this._defaultAction = this._defaultAction.bind(this);\n    this._hideNotification = this._hideNotification.bind(this);\n    this._removeNotification = this._removeNotification.bind(this);\n    this._dismiss = this._dismiss.bind(this);\n    this._showNotification = this._showNotification.bind(this);\n    this._onTransitionEnd = this._onTransitionEnd.bind(this);\n    this._handleMouseEnter = this._handleMouseEnter.bind(this);\n    this._handleMouseLeave = this._handleMouseLeave.bind(this);\n    this._handleNotificationClick = this._handleNotificationClick.bind(this);\n  }\n\n  _getCssPropertyByPosition() {\n    var position = this.props.notification.position;\n    var css = {};\n\n    switch (position) {\n      case Constants.positions.tl:\n      case Constants.positions.bl:\n        css = {\n          property: 'left',\n          value: -200\n        };\n        break;\n\n      case Constants.positions.tr:\n      case Constants.positions.br:\n        css = {\n          property: 'right',\n          value: -200\n        };\n        break;\n\n      case Constants.positions.tc:\n        css = {\n          property: 'top',\n          value: -100\n        };\n        break;\n\n      case Constants.positions.bc:\n        css = {\n          property: 'bottom',\n          value: -100\n        };\n        break;\n\n      default:\n    }\n\n    return css;\n  }\n\n  _defaultAction(event) {\n    var notification = this.props.notification;\n    event.preventDefault();\n\n    this._hideNotification();\n\n    if (typeof notification.action.callback === 'function') {\n      notification.action.callback();\n    }\n  }\n\n  _hideNotification() {\n    if (this._notificationTimer) {\n      this._notificationTimer.clear();\n    }\n\n    if (this._isMounted) {\n      this.setState({\n        visible: false,\n        removed: true\n      });\n    }\n\n    if (this._noAnimation) {\n      this._removeNotification();\n    }\n  }\n\n  _removeNotification() {\n    this.props.onRemove(this.props.notification.uid);\n  }\n\n  _dismiss() {\n    if (!this.props.notification.dismissible) {\n      return;\n    }\n\n    this._hideNotification();\n  }\n\n  _showNotification() {\n    setTimeout(() => {\n      if (this._isMounted) {\n        this.setState({\n          visible: true\n        });\n      }\n    }, 50);\n  }\n\n  _onTransitionEnd() {\n    if (this._removeCount > 0) return;\n\n    if (this.state.removed) {\n      this._removeCount += 1;\n\n      this._removeNotification();\n    }\n  }\n\n  componentDidMount() {\n    var self = this;\n    var transitionEvent = whichTransitionEvent();\n    var notification = this.props.notification;\n    var element = ReactDOM.findDOMNode(this);\n    this._height = element.offsetHeight;\n    this._isMounted = true; // Watch for transition end\n\n    if (!this._noAnimation) {\n      if (transitionEvent) {\n        element.addEventListener(transitionEvent, this._onTransitionEnd);\n      } else {\n        this._noAnimation = true;\n      }\n    }\n\n    if (notification.autoDismiss) {\n      this._notificationTimer = new Helpers.Timer(function () {\n        self._hideNotification();\n      }, notification.autoDismiss * 1000);\n    }\n\n    this._showNotification();\n  }\n\n  _handleMouseEnter() {\n    var notification = this.props.notification;\n\n    if (notification.autoDismiss) {\n      this._notificationTimer.pause();\n    }\n  }\n\n  _handleMouseLeave() {\n    var notification = this.props.notification;\n\n    if (notification.autoDismiss) {\n      this._notificationTimer.resume();\n    }\n  }\n\n  _handleNotificationClick() {\n    var dismissible = this.props.notification.dismissible;\n\n    if (dismissible === 'both' || dismissible === 'click' || dismissible === true) {\n      this._dismiss();\n    }\n  }\n\n  componentWillUnmount() {\n    var element = ReactDOM.findDOMNode(this);\n    var transitionEvent = whichTransitionEvent();\n    element.removeEventListener(transitionEvent, this._onTransitionEnd);\n    this._isMounted = false;\n  }\n\n  render() {\n    var notification = this.props.notification;\n    var className = 'notification notification-' + notification.level;\n    var notificationStyle = merge({}, this._styles.notification);\n\n    var cssByPos = this._getCssPropertyByPosition();\n\n    var dismiss = null;\n    var actionButton = null;\n    var title = null;\n    var message = null;\n\n    if (this.props.notification.className) {\n      className += ' ' + this.props.notification.className;\n    }\n\n    if (this.state.visible) {\n      className += ' notification-visible';\n    } else if (this.state.visible === false) {\n      className += ' notification-hidden';\n    }\n\n    if (notification.dismissible === 'none') {\n      className += ' notification-not-dismissible';\n    }\n\n    if (this.props.getStyles.overrideStyle) {\n      if (!this.state.visible && !this.state.removed) {\n        notificationStyle[cssByPos.property] = cssByPos.value;\n      }\n\n      if (this.state.visible && !this.state.removed) {\n        notificationStyle.height = this._height;\n        notificationStyle[cssByPos.property] = 0;\n      }\n\n      if (this.state.removed) {\n        notificationStyle.overlay = 'hidden';\n        notificationStyle.height = 0;\n        notificationStyle.marginTop = 0;\n        notificationStyle.paddingTop = 0;\n        notificationStyle.paddingBottom = 0;\n      }\n\n      if (this._styles.notification.isVisible && this._styles.notification.isHidden) {\n        notificationStyle.opacity = this.state.visible ? this._styles.notification.isVisible.opacity : this._styles.notification.isHidden.opacity;\n      }\n    }\n\n    if (notification.title) {\n      title = React.createElement(\"h4\", {\n        className: \"notification-title\",\n        style: this._styles.title\n      }, notification.title);\n    }\n\n    if (notification.message) {\n      if (this.props.allowHTML) {\n        message = React.createElement(\"div\", {\n          className: \"notification-message\",\n          style: this._styles.messageWrapper,\n          dangerouslySetInnerHTML: _allowHTML(notification.message)\n        });\n      } else {\n        message = React.createElement(\"div\", {\n          className: \"notification-message\",\n          style: this._styles.messageWrapper\n        }, notification.message);\n      }\n    }\n\n    if (notification.dismissible === 'both' || notification.dismissible === 'button' || notification.dismissible === true) {\n      dismiss = React.createElement(\"span\", {\n        className: \"notification-dismiss\",\n        onClick: this._dismiss,\n        style: this._styles.dismiss,\n        \"aria-hidden\": true\n      }, \"Ã—\");\n    }\n\n    if (notification.action) {\n      actionButton = React.createElement(\"div\", {\n        className: \"notification-action-wrapper\",\n        style: this._styles.actionWrapper\n      }, React.createElement(\"button\", {\n        className: \"notification-action-button\",\n        onClick: this._defaultAction,\n        style: this._styles.action\n      }, notification.action.label));\n    }\n\n    if (notification.children) {\n      actionButton = notification.children;\n    }\n\n    return React.createElement(\"div\", {\n      className: className,\n      onClick: this._handleNotificationClick,\n      onMouseEnter: this._handleMouseEnter,\n      onMouseLeave: this._handleMouseLeave,\n      style: notificationStyle,\n      role: \"alert\"\n    }, title, message, dismiss, actionButton);\n  }\n\n}\n\nNotificationItem.propTypes = {\n  notification: PropTypes.object,\n  getStyles: PropTypes.object,\n  onRemove: PropTypes.func,\n  allowHTML: PropTypes.bool,\n  noAnimation: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n};\nNotificationItem.defaultProps = {\n  noAnimation: false,\n  onRemove: function () {},\n  allowHTML: false\n};\nmodule.exports = NotificationItem;","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/react-notification-system/dist/NotificationItem.js"],"names":["React","require","PropTypes","ReactDOM","Constants","Helpers","merge","whichTransitionEvent","el","document","createElement","transition","transitions","OTransition","MozTransition","WebkitTransition","Object","keys","forEach","transitionKey","style","undefined","_allowHTML","string","__html","NotificationItem","Component","constructor","props","_notificationTimer","_height","_noAnimation","_isMounted","_removeCount","state","visible","removed","getStyles","level","notification","dismissible","noAnimation","_styles","byElement","title","dismiss","messageWrapper","actionWrapper","action","cursor","_getCssPropertyByPosition","bind","_defaultAction","_hideNotification","_removeNotification","_dismiss","_showNotification","_onTransitionEnd","_handleMouseEnter","_handleMouseLeave","_handleNotificationClick","position","css","positions","tl","bl","property","value","tr","br","tc","bc","event","preventDefault","callback","clear","setState","onRemove","uid","setTimeout","componentDidMount","self","transitionEvent","element","findDOMNode","offsetHeight","addEventListener","autoDismiss","Timer","pause","resume","componentWillUnmount","removeEventListener","render","className","notificationStyle","cssByPos","actionButton","message","overrideStyle","height","overlay","marginTop","paddingTop","paddingBottom","isVisible","isHidden","opacity","allowHTML","dangerouslySetInnerHTML","onClick","label","children","onMouseEnter","onMouseLeave","role","propTypes","object","func","bool","oneOfType","defaultProps","module","exports"],"mappings":"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","sourcesContent":["var React = require('react');\nvar PropTypes = require('prop-types');\nvar ReactDOM = require('react-dom');\nvar Constants = require('./constants');\nvar Helpers = require('./helpers');\nvar merge = require('object-assign');\n\n/* From Modernizr */\nvar whichTransitionEvent = function() {\n  var el = document.createElement('fakeelement');\n  var transition;\n  var transitions = {\n    transition: 'transitionend',\n    OTransition: 'oTransitionEnd',\n    MozTransition: 'transitionend',\n    WebkitTransition: 'webkitTransitionEnd'\n  };\n\n  Object.keys(transitions).forEach(function(transitionKey) {\n    if (el.style[transitionKey] !== undefined) {\n      transition = transitions[transitionKey];\n    }\n  });\n\n  return transition;\n};\n\nfunction _allowHTML(string) {\n  return { __html: string };\n}\n\nclass NotificationItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this._notificationTimer = null;\n    this._height = 0;\n    this._noAnimation = null;\n    this._isMounted = false;\n    this._removeCount = 0;\n\n    this.state = {\n      visible: undefined,\n      removed: false\n    };\n\n    const getStyles = props.getStyles;\n    const level = props.notification.level;\n    const dismissible = props.notification.dismissible;\n\n    this._noAnimation = props.noAnimation;\n\n    this._styles = {\n      notification: getStyles.byElement('notification')(level),\n      title: getStyles.byElement('title')(level),\n      dismiss: getStyles.byElement('dismiss')(level),\n      messageWrapper: getStyles.byElement('messageWrapper')(level),\n      actionWrapper: getStyles.byElement('actionWrapper')(level),\n      action: getStyles.byElement('action')(level)\n    };\n\n    if (!dismissible || dismissible === 'none' || dismissible === 'button') {\n      this._styles.notification.cursor = 'default';\n    }\n\n    this._getCssPropertyByPosition = this._getCssPropertyByPosition.bind(this);\n    this._defaultAction = this._defaultAction.bind(this);\n    this._hideNotification = this._hideNotification.bind(this);\n    this._removeNotification = this._removeNotification.bind(this);\n    this._dismiss = this._dismiss.bind(this);\n    this._showNotification = this._showNotification.bind(this);\n    this._onTransitionEnd = this._onTransitionEnd.bind(this);\n    this._handleMouseEnter = this._handleMouseEnter.bind(this);\n    this._handleMouseLeave = this._handleMouseLeave.bind(this);\n    this._handleNotificationClick = this._handleNotificationClick.bind(this);\n  }\n\n  _getCssPropertyByPosition() {\n    var position = this.props.notification.position;\n    var css = {};\n\n    switch (position) {\n    case Constants.positions.tl:\n    case Constants.positions.bl:\n      css = {\n        property: 'left',\n        value: -200\n      };\n      break;\n\n    case Constants.positions.tr:\n    case Constants.positions.br:\n      css = {\n        property: 'right',\n        value: -200\n      };\n      break;\n\n    case Constants.positions.tc:\n      css = {\n        property: 'top',\n        value: -100\n      };\n      break;\n\n    case Constants.positions.bc:\n      css = {\n        property: 'bottom',\n        value: -100\n      };\n      break;\n\n    default:\n    }\n\n    return css;\n  }\n\n  _defaultAction(event) {\n    var notification = this.props.notification;\n\n    event.preventDefault();\n    this._hideNotification();\n    if (typeof notification.action.callback === 'function') {\n      notification.action.callback();\n    }\n  }\n\n  _hideNotification() {\n    if (this._notificationTimer) {\n      this._notificationTimer.clear();\n    }\n\n    if (this._isMounted) {\n      this.setState({\n        visible: false,\n        removed: true\n      });\n    }\n\n    if (this._noAnimation) {\n      this._removeNotification();\n    }\n  }\n\n  _removeNotification() {\n    this.props.onRemove(this.props.notification.uid);\n  }\n\n  _dismiss() {\n    if (!this.props.notification.dismissible) {\n      return;\n    }\n\n    this._hideNotification();\n  }\n\n  _showNotification() {\n    setTimeout(() => {\n      if (this._isMounted) {\n        this.setState({\n          visible: true\n        });\n      }\n    }, 50);\n  }\n\n  _onTransitionEnd() {\n    if (this._removeCount > 0) return;\n    if (this.state.removed) {\n      this._removeCount += 1;\n      this._removeNotification();\n    }\n  }\n\n  componentDidMount() {\n    var self = this;\n    var transitionEvent = whichTransitionEvent();\n    var notification = this.props.notification;\n    var element = ReactDOM.findDOMNode(this);\n\n    this._height = element.offsetHeight;\n\n    this._isMounted = true;\n\n    // Watch for transition end\n    if (!this._noAnimation) {\n      if (transitionEvent) {\n        element.addEventListener(transitionEvent, this._onTransitionEnd);\n      } else {\n        this._noAnimation = true;\n      }\n    }\n\n    if (notification.autoDismiss) {\n      this._notificationTimer = new Helpers.Timer(function() {\n        self._hideNotification();\n      }, notification.autoDismiss * 1000);\n    }\n\n    this._showNotification();\n  }\n\n  _handleMouseEnter() {\n    var notification = this.props.notification;\n    if (notification.autoDismiss) {\n      this._notificationTimer.pause();\n    }\n  }\n\n  _handleMouseLeave() {\n    var notification = this.props.notification;\n    if (notification.autoDismiss) {\n      this._notificationTimer.resume();\n    }\n  }\n\n  _handleNotificationClick() {\n    var dismissible = this.props.notification.dismissible;\n    if (\n      dismissible === 'both' ||\n      dismissible === 'click' ||\n      dismissible === true\n    ) {\n      this._dismiss();\n    }\n  }\n\n  componentWillUnmount() {\n    var element = ReactDOM.findDOMNode(this);\n    var transitionEvent = whichTransitionEvent();\n    element.removeEventListener(transitionEvent, this._onTransitionEnd);\n    this._isMounted = false;\n  }\n\n  render() {\n    var notification = this.props.notification;\n    var className = 'notification notification-' + notification.level;\n    var notificationStyle = merge({}, this._styles.notification);\n    var cssByPos = this._getCssPropertyByPosition();\n    var dismiss = null;\n    var actionButton = null;\n    var title = null;\n    var message = null;\n\n    if (this.props.notification.className) {\n      className += ' ' + this.props.notification.className;\n    }\n\n    if (this.state.visible) {\n      className += ' notification-visible';\n    } else if (this.state.visible === false) {\n      className += ' notification-hidden';\n    }\n\n    if (notification.dismissible === 'none') {\n      className += ' notification-not-dismissible';\n    }\n\n    if (this.props.getStyles.overrideStyle) {\n      if (!this.state.visible && !this.state.removed) {\n        notificationStyle[cssByPos.property] = cssByPos.value;\n      }\n\n      if (this.state.visible && !this.state.removed) {\n        notificationStyle.height = this._height;\n        notificationStyle[cssByPos.property] = 0;\n      }\n\n      if (this.state.removed) {\n        notificationStyle.overlay = 'hidden';\n        notificationStyle.height = 0;\n        notificationStyle.marginTop = 0;\n        notificationStyle.paddingTop = 0;\n        notificationStyle.paddingBottom = 0;\n      }\n\n      if (this._styles.notification.isVisible && this._styles.notification.isHidden) {\n        notificationStyle.opacity = this.state.visible\n          ? this._styles.notification.isVisible.opacity\n          : this._styles.notification.isHidden.opacity;\n      }\n    }\n\n    if (notification.title) {\n      title = (\n        React.createElement(\"h4\", {className: \"notification-title\", style:  this._styles.title}, \n          notification.title\n        )\n      );\n    }\n\n    if (notification.message) {\n      if (this.props.allowHTML) {\n        message = (\n          React.createElement(\"div\", {\n            className: \"notification-message\", \n            style:  this._styles.messageWrapper, \n            dangerouslySetInnerHTML:  _allowHTML(notification.message) }\n          )\n        );\n      } else {\n        message = (\n          React.createElement(\"div\", {\n            className: \"notification-message\", \n            style:  this._styles.messageWrapper\n          }, \n            notification.message\n          )\n        );\n      }\n    }\n\n    if (\n      notification.dismissible === 'both' ||\n      notification.dismissible === 'button' ||\n      notification.dismissible === true\n    ) {\n      dismiss = (\n        React.createElement(\"span\", {\n          className: \"notification-dismiss\", \n          onClick:  this._dismiss, \n          style:  this._styles.dismiss, \n          \"aria-hidden\":  true \n        }, \n          \"Ã—\"\n        )\n      );\n    }\n\n    if (notification.action) {\n      actionButton = (\n        React.createElement(\"div\", {\n          className: \"notification-action-wrapper\", \n          style:  this._styles.actionWrapper\n        }, \n          React.createElement(\"button\", {\n            className: \"notification-action-button\", \n            onClick:  this._defaultAction, \n            style:  this._styles.action\n          }, \n            notification.action.label\n          )\n        )\n      );\n    }\n\n    if (notification.children) {\n      actionButton = notification.children;\n    }\n\n    return (\n      React.createElement(\"div\", {\n        className:  className, \n        onClick:  this._handleNotificationClick, \n        onMouseEnter:  this._handleMouseEnter, \n        onMouseLeave:  this._handleMouseLeave, \n        style:  notificationStyle, \n        role: \"alert\"\n      }, \n        title, \n        message, \n        dismiss, \n        actionButton\n      )\n    );\n  }\n}\n\nNotificationItem.propTypes = {\n  notification: PropTypes.object,\n  getStyles: PropTypes.object,\n  onRemove: PropTypes.func,\n  allowHTML: PropTypes.bool,\n  noAnimation: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n};\n\nNotificationItem.defaultProps = {\n  noAnimation: false,\n  onRemove: function() {},\n  allowHTML: false\n};\n\nmodule.exports = NotificationItem;\n"]},"metadata":{},"sourceType":"script"}