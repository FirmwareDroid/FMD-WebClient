{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionMotion, spring } from 'react-motion';\nimport pure from 'recompose/pure';\nimport { colorMotionSpring, getInterpolatedColor } from '../../../lib/colors';\nimport ChordArcTooltip from './ChordArcTooltip';\n\nvar ChordArcs = function ChordArcs(_ref) {\n  var arcs = _ref.arcs,\n      borderWidth = _ref.borderWidth,\n      getBorderColor = _ref.getBorderColor,\n      getOpacity = _ref.getOpacity,\n      shapeGenerator = _ref.shapeGenerator,\n      theme = _ref.theme,\n      tooltipFormat = _ref.tooltipFormat,\n      setCurrent = _ref.setCurrent,\n      showTooltip = _ref.showTooltip,\n      hideTooltip = _ref.hideTooltip,\n      animate = _ref.animate,\n      motionDamping = _ref.motionDamping,\n      motionStiffness = _ref.motionStiffness;\n\n  var commonProps = function commonProps(arc) {\n    var arcTooltip = React.createElement(ChordArcTooltip, {\n      arc: arc,\n      theme: theme,\n      format: tooltipFormat\n    });\n    return {\n      strokeWidth: borderWidth,\n      onMouseEnter: function onMouseEnter(e) {\n        setCurrent(arc);\n        showTooltip(arcTooltip, e);\n      },\n      onMouseMove: function onMouseMove(e) {\n        showTooltip(arcTooltip, e);\n      },\n      onMouseLeave: function onMouseLeave() {\n        setCurrent(null);\n        hideTooltip();\n      }\n    };\n  };\n\n  if (animate !== true) {\n    return React.createElement('g', null, arcs.map(function (arc) {\n      var opacity = getOpacity(arc);\n      return React.createElement('path', _extends({\n        key: arc.key,\n        d: shapeGenerator(arc),\n        fill: arc.color,\n        fillOpacity: opacity,\n        stroke: getBorderColor(arc),\n        strokeOpacity: opacity\n      }, commonProps(arc)));\n    }));\n  }\n\n  var springConfig = {\n    damping: motionDamping,\n    stiffness: motionStiffness,\n    precision: 0.001\n  };\n  return React.createElement(TransitionMotion, {\n    styles: arcs.map(function (arc) {\n      return {\n        key: arc.key,\n        data: arc,\n        style: _extends({\n          startAngle: spring(arc.startAngle, springConfig),\n          endAngle: spring(arc.endAngle, springConfig),\n          opacity: spring(getOpacity(arc), springConfig)\n        }, colorMotionSpring(arc.color, springConfig))\n      };\n    })\n  }, function (interpolatedStyles) {\n    return React.createElement('g', null, interpolatedStyles.map(function (_ref2) {\n      var key = _ref2.key,\n          style = _ref2.style,\n          arc = _ref2.data;\n      var color = getInterpolatedColor(style);\n      return React.createElement('path', _extends({\n        key: key,\n        d: shapeGenerator({\n          startAngle: style.startAngle,\n          endAngle: style.endAngle\n        }),\n        fill: color,\n        fillOpacity: style.opacity,\n        stroke: getBorderColor(_extends({}, arc, {\n          color: color\n        })),\n        strokeOpacity: style.opacity\n      }, commonProps(arc)));\n    }));\n  });\n};\n\nChordArcs.propTypes = {\n  arcs: PropTypes.array.isRequired,\n  shapeGenerator: PropTypes.func.isRequired,\n  borderWidth: PropTypes.number.isRequired,\n  getOpacity: PropTypes.func.isRequired,\n  setCurrent: PropTypes.func.isRequired,\n  theme: PropTypes.object.isRequired,\n  showTooltip: PropTypes.func.isRequired,\n  hideTooltip: PropTypes.func.isRequired\n};\nexport default pure(ChordArcs);","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/components/charts/chord/ChordArcs.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","React","PropTypes","TransitionMotion","spring","pure","colorMotionSpring","getInterpolatedColor","ChordArcTooltip","ChordArcs","_ref","arcs","borderWidth","getBorderColor","getOpacity","shapeGenerator","theme","tooltipFormat","setCurrent","showTooltip","hideTooltip","animate","motionDamping","motionStiffness","commonProps","arc","arcTooltip","createElement","format","strokeWidth","onMouseEnter","e","onMouseMove","onMouseLeave","map","opacity","d","fill","color","fillOpacity","stroke","strokeOpacity","springConfig","damping","stiffness","precision","styles","data","style","startAngle","endAngle","interpolatedStyles","_ref2","propTypes","array","isRequired","func","number","object"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionMotion, spring } from 'react-motion';\nimport pure from 'recompose/pure';\nimport { colorMotionSpring, getInterpolatedColor } from '../../../lib/colors';\nimport ChordArcTooltip from './ChordArcTooltip';\n\nvar ChordArcs = function ChordArcs(_ref) {\n    var arcs = _ref.arcs,\n        borderWidth = _ref.borderWidth,\n        getBorderColor = _ref.getBorderColor,\n        getOpacity = _ref.getOpacity,\n        shapeGenerator = _ref.shapeGenerator,\n        theme = _ref.theme,\n        tooltipFormat = _ref.tooltipFormat,\n        setCurrent = _ref.setCurrent,\n        showTooltip = _ref.showTooltip,\n        hideTooltip = _ref.hideTooltip,\n        animate = _ref.animate,\n        motionDamping = _ref.motionDamping,\n        motionStiffness = _ref.motionStiffness;\n\n    var commonProps = function commonProps(arc) {\n        var arcTooltip = React.createElement(ChordArcTooltip, { arc: arc, theme: theme, format: tooltipFormat });\n\n        return {\n            strokeWidth: borderWidth,\n            onMouseEnter: function onMouseEnter(e) {\n                setCurrent(arc);\n                showTooltip(arcTooltip, e);\n            },\n            onMouseMove: function onMouseMove(e) {\n                showTooltip(arcTooltip, e);\n            },\n            onMouseLeave: function onMouseLeave() {\n                setCurrent(null);\n                hideTooltip();\n            }\n        };\n    };\n\n    if (animate !== true) {\n        return React.createElement(\n            'g',\n            null,\n            arcs.map(function (arc) {\n                var opacity = getOpacity(arc);\n\n                return React.createElement('path', _extends({\n                    key: arc.key,\n                    d: shapeGenerator(arc),\n                    fill: arc.color,\n                    fillOpacity: opacity,\n                    stroke: getBorderColor(arc),\n                    strokeOpacity: opacity\n                }, commonProps(arc)));\n            })\n        );\n    }\n\n    var springConfig = {\n        damping: motionDamping,\n        stiffness: motionStiffness,\n        precision: 0.001\n    };\n\n    return React.createElement(\n        TransitionMotion,\n        {\n            styles: arcs.map(function (arc) {\n                return {\n                    key: arc.key,\n                    data: arc,\n                    style: _extends({\n                        startAngle: spring(arc.startAngle, springConfig),\n                        endAngle: spring(arc.endAngle, springConfig),\n                        opacity: spring(getOpacity(arc), springConfig)\n                    }, colorMotionSpring(arc.color, springConfig))\n                };\n            })\n        },\n        function (interpolatedStyles) {\n            return React.createElement(\n                'g',\n                null,\n                interpolatedStyles.map(function (_ref2) {\n                    var key = _ref2.key,\n                        style = _ref2.style,\n                        arc = _ref2.data;\n\n                    var color = getInterpolatedColor(style);\n\n                    return React.createElement('path', _extends({\n                        key: key,\n                        d: shapeGenerator({\n                            startAngle: style.startAngle,\n                            endAngle: style.endAngle\n                        }),\n                        fill: color,\n                        fillOpacity: style.opacity,\n                        stroke: getBorderColor(_extends({}, arc, { color: color })),\n                        strokeOpacity: style.opacity\n                    }, commonProps(arc)));\n                })\n            );\n        }\n    );\n};\n\nChordArcs.propTypes = {\n    arcs: PropTypes.array.isRequired,\n    shapeGenerator: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    getOpacity: PropTypes.func.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    theme: PropTypes.object.isRequired,\n    showTooltip: PropTypes.func.isRequired,\n    hideTooltip: PropTypes.func.isRequired\n};\n\nexport default pure(ChordArcs);"]},"metadata":{},"sourceType":"module"}