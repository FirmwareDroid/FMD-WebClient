{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n\nimport { textPropsByEngine } from './bridge';\nvar horizontalPositions = ['top', 'bottom'];\nvar verticalPositions = ['left', 'right'];\n\nvar centerScale = function centerScale(scale) {\n  var bandwidth = scale.bandwidth();\n  if (bandwidth === 0) return scale;\n  var offset = bandwidth / 2;\n\n  if (scale.round()) {\n    offset = Math.round(offset);\n  }\n\n  return function (d) {\n    return scale(d) + offset;\n  };\n};\n/**\n * @typedef {Object} AxisTick\n * @param {number} x\n * @param {number} y\n * @param {number} lineX\n * @param {number} lineY\n * @param {number} textX\n * @param {number} textY\n */\n\n/**\n * @param {number}                width\n * @param {number}                height\n * @param {string}                _position\n * @param {Function}              scale\n * @param {Array.<string|number>} [tickValues]\n * @param {number}                [tickCount]\n * @param {number}                [tickSize=5]\n * @param {number}                [tickPadding=5]\n * @param {number}                [tickRotation=0]\n * @parem {string}                [engine='svg']\n * @return {{ x: number, y: number, ticks: Array.<AxisTick>, textAlign: string, textBaseline: string }}\n */\n\n\nexport var computeAxisTicks = function computeAxisTicks(_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      _position = _ref.position,\n      scale = _ref.scale,\n      tickValues = _ref.tickValues,\n      tickCount = _ref.tickCount,\n      _ref$tickSize = _ref.tickSize,\n      tickSize = _ref$tickSize === undefined ? 5 : _ref$tickSize,\n      _ref$tickPadding = _ref.tickPadding,\n      tickPadding = _ref$tickPadding === undefined ? 5 : _ref$tickPadding,\n      _ref$tickRotation = _ref.tickRotation,\n      tickRotation = _ref$tickRotation === undefined ? 0 : _ref$tickRotation,\n      _ref$engine = _ref.engine,\n      engine = _ref$engine === undefined ? 'svg' : _ref$engine;\n  var values = void 0;\n  if (tickValues) values = tickValues;else if (scale.ticks) values = scale.ticks(tickCount);else values = scale.domain();\n  var textProps = textPropsByEngine[engine];\n  var orient = _position;\n  var position = scale.bandwidth ? centerScale(scale) : scale;\n  var line = {\n    lineX: 0,\n    lineY: 0\n  };\n  var text = {\n    textX: 0,\n    textY: 0\n  };\n  var x = 0;\n  var y = 0;\n  var translate = void 0;\n  var textAlign = textProps.align.center;\n  var textBaseline = textProps.baseline.center;\n\n  if (horizontalPositions.includes(orient)) {\n    translate = function translate(d) {\n      return {\n        x: position(d),\n        y: 0\n      };\n    };\n\n    line.lineY = tickSize * (orient === 'bottom' ? 1 : -1);\n    text.textY = (tickSize + tickPadding) * (orient === 'bottom' ? 1 : -1);\n\n    if (orient === 'bottom') {\n      y = height;\n      textBaseline = textProps.baseline.top;\n    } else {\n      textBaseline = textProps.baseline.bottom;\n    }\n\n    if (tickRotation === 0) {\n      textAlign = textProps.align.center;\n    } else if (orient === 'bottom' && tickRotation < 0 || orient === 'top' && tickRotation > 0) {\n      textAlign = textProps.align.right;\n      textBaseline = textProps.baseline.center;\n    } else if (orient === 'bottom' && tickRotation > 0 || orient === 'top' && tickRotation < 0) {\n      textAlign = textProps.align.left;\n      textBaseline = textProps.baseline.center;\n    }\n  } else if (verticalPositions.includes(orient)) {\n    translate = function translate(d) {\n      return {\n        x: 0,\n        y: position(d)\n      };\n    };\n\n    line.lineX = tickSize * (orient === 'right' ? 1 : -1);\n    text.textX = (tickSize + tickPadding) * (orient === 'right' ? 1 : -1);\n\n    if (orient === 'right') {\n      x = width;\n      textAlign = textProps.align.left;\n    } else {\n      textAlign = textProps.align.right;\n    }\n  }\n\n  var ticks = values.map(function (value) {\n    return _extends({\n      key: value,\n      value: value\n    }, translate(value), line, text);\n  });\n  return {\n    x: x,\n    y: y,\n    ticks: ticks,\n    textAlign: textAlign,\n    textBaseline: textBaseline\n  };\n};","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/lib/axes.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","textPropsByEngine","horizontalPositions","verticalPositions","centerScale","scale","bandwidth","offset","round","Math","d","computeAxisTicks","_ref","width","height","_position","position","tickValues","tickCount","_ref$tickSize","tickSize","undefined","_ref$tickPadding","tickPadding","_ref$tickRotation","tickRotation","_ref$engine","engine","values","ticks","domain","textProps","orient","line","lineX","lineY","text","textX","textY","x","y","translate","textAlign","align","center","textBaseline","baseline","includes","top","bottom","right","left","map","value"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { textPropsByEngine } from './bridge';\n\nvar horizontalPositions = ['top', 'bottom'];\nvar verticalPositions = ['left', 'right'];\n\nvar centerScale = function centerScale(scale) {\n    var bandwidth = scale.bandwidth();\n\n    if (bandwidth === 0) return scale;\n\n    var offset = bandwidth / 2;\n    if (scale.round()) {\n        offset = Math.round(offset);\n    }\n\n    return function (d) {\n        return scale(d) + offset;\n    };\n};\n\n/**\n * @typedef {Object} AxisTick\n * @param {number} x\n * @param {number} y\n * @param {number} lineX\n * @param {number} lineY\n * @param {number} textX\n * @param {number} textY\n */\n\n/**\n * @param {number}                width\n * @param {number}                height\n * @param {string}                _position\n * @param {Function}              scale\n * @param {Array.<string|number>} [tickValues]\n * @param {number}                [tickCount]\n * @param {number}                [tickSize=5]\n * @param {number}                [tickPadding=5]\n * @param {number}                [tickRotation=0]\n * @parem {string}                [engine='svg']\n * @return {{ x: number, y: number, ticks: Array.<AxisTick>, textAlign: string, textBaseline: string }}\n */\nexport var computeAxisTicks = function computeAxisTicks(_ref) {\n    var width = _ref.width,\n        height = _ref.height,\n        _position = _ref.position,\n        scale = _ref.scale,\n        tickValues = _ref.tickValues,\n        tickCount = _ref.tickCount,\n        _ref$tickSize = _ref.tickSize,\n        tickSize = _ref$tickSize === undefined ? 5 : _ref$tickSize,\n        _ref$tickPadding = _ref.tickPadding,\n        tickPadding = _ref$tickPadding === undefined ? 5 : _ref$tickPadding,\n        _ref$tickRotation = _ref.tickRotation,\n        tickRotation = _ref$tickRotation === undefined ? 0 : _ref$tickRotation,\n        _ref$engine = _ref.engine,\n        engine = _ref$engine === undefined ? 'svg' : _ref$engine;\n\n    var values = void 0;\n    if (tickValues) values = tickValues;else if (scale.ticks) values = scale.ticks(tickCount);else values = scale.domain();\n\n    var textProps = textPropsByEngine[engine];\n\n    var orient = _position;\n    var position = scale.bandwidth ? centerScale(scale) : scale;\n    var line = { lineX: 0, lineY: 0 };\n    var text = { textX: 0, textY: 0 };\n\n    var x = 0;\n    var y = 0;\n    var translate = void 0;\n    var textAlign = textProps.align.center;\n    var textBaseline = textProps.baseline.center;\n\n    if (horizontalPositions.includes(orient)) {\n        translate = function translate(d) {\n            return { x: position(d), y: 0 };\n        };\n\n        line.lineY = tickSize * (orient === 'bottom' ? 1 : -1);\n        text.textY = (tickSize + tickPadding) * (orient === 'bottom' ? 1 : -1);\n\n        if (orient === 'bottom') {\n            y = height;\n            textBaseline = textProps.baseline.top;\n        } else {\n            textBaseline = textProps.baseline.bottom;\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center;\n        } else if (orient === 'bottom' && tickRotation < 0 || orient === 'top' && tickRotation > 0) {\n            textAlign = textProps.align.right;\n            textBaseline = textProps.baseline.center;\n        } else if (orient === 'bottom' && tickRotation > 0 || orient === 'top' && tickRotation < 0) {\n            textAlign = textProps.align.left;\n            textBaseline = textProps.baseline.center;\n        }\n    } else if (verticalPositions.includes(orient)) {\n        translate = function translate(d) {\n            return { x: 0, y: position(d) };\n        };\n\n        line.lineX = tickSize * (orient === 'right' ? 1 : -1);\n        text.textX = (tickSize + tickPadding) * (orient === 'right' ? 1 : -1);\n\n        if (orient === 'right') {\n            x = width;\n            textAlign = textProps.align.left;\n        } else {\n            textAlign = textProps.align.right;\n        }\n    }\n\n    var ticks = values.map(function (value) {\n        return _extends({\n            key: value,\n            value: value\n        }, translate(value), line, text);\n    });\n\n    return {\n        x: x,\n        y: y,\n        ticks: ticks,\n        textAlign: textAlign,\n        textBaseline: textBaseline\n    };\n};"]},"metadata":{},"sourceType":"module"}