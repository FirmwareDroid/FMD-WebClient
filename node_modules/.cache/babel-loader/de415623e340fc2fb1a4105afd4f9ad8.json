{"ast":null,"code":"/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { positionFromAngle, radiansToDegrees } from './utils';\nimport { textPropsByEngine } from '../bridge';\n/**\n * @param {number} radius\n * @param {number} angle          angle (radians)\n * @param {number} [rotation=0]   label rotation (degrees)\n * @param {string} [engine='svg'] one of: 'svg', 'canvas'\n * @return {{ x: number, y: number, rotate: number, align: string, baseline: string }}\n */\n\nexport var getPolarLabelProps = function getPolarLabelProps(radius, angle, rotation) {\n  var engine = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'svg';\n  var textProps = textPropsByEngine[engine];\n\n  var _positionFromAngle = positionFromAngle(angle - Math.PI / 2, radius),\n      x = _positionFromAngle.x,\n      y = _positionFromAngle.y;\n\n  var rotate = radiansToDegrees(angle);\n  var align = textProps.align.center;\n  var baseline = textProps.baseline.bottom;\n\n  if (rotation > 0) {\n    align = textProps.align.right;\n    baseline = textProps.baseline.center;\n  } else if (rotation < 0) {\n    align = textProps.align.left;\n    baseline = textProps.baseline.center;\n  } // reverse labels after 180°\n\n\n  if (rotation !== 0 && rotate > 180) {\n    rotate -= 180;\n    align = align === textProps.align.right ? textProps.align.left : textProps.align.right;\n  }\n\n  rotate += rotation;\n  return {\n    x: x,\n    y: y,\n    rotate: rotate,\n    align: align,\n    baseline: baseline\n  };\n};","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/lib/polar/labels.js"],"names":["positionFromAngle","radiansToDegrees","textPropsByEngine","getPolarLabelProps","radius","angle","rotation","engine","arguments","length","undefined","textProps","_positionFromAngle","Math","PI","x","y","rotate","align","center","baseline","bottom","right","left"],"mappings":"AAAA;;;;;;;;AAQA,SAASA,iBAAT,EAA4BC,gBAA5B,QAAoD,SAApD;AACA,SAASC,iBAAT,QAAkC,WAAlC;AAEA;;;;;;;;AAOA,OAAO,IAAIC,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,MAA5B,EAAoCC,KAApC,EAA2CC,QAA3C,EAAqD;AACjF,MAAIC,MAAM,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAjF;AAEA,MAAIG,SAAS,GAAGT,iBAAiB,CAACK,MAAD,CAAjC;;AAEA,MAAIK,kBAAkB,GAAGZ,iBAAiB,CAACK,KAAK,GAAGQ,IAAI,CAACC,EAAL,GAAU,CAAnB,EAAsBV,MAAtB,CAA1C;AAAA,MACIW,CAAC,GAAGH,kBAAkB,CAACG,CAD3B;AAAA,MAEIC,CAAC,GAAGJ,kBAAkB,CAACI,CAF3B;;AAIA,MAAIC,MAAM,GAAGhB,gBAAgB,CAACI,KAAD,CAA7B;AACA,MAAIa,KAAK,GAAGP,SAAS,CAACO,KAAV,CAAgBC,MAA5B;AACA,MAAIC,QAAQ,GAAGT,SAAS,CAACS,QAAV,CAAmBC,MAAlC;;AAEA,MAAIf,QAAQ,GAAG,CAAf,EAAkB;AACdY,IAAAA,KAAK,GAAGP,SAAS,CAACO,KAAV,CAAgBI,KAAxB;AACAF,IAAAA,QAAQ,GAAGT,SAAS,CAACS,QAAV,CAAmBD,MAA9B;AACH,GAHD,MAGO,IAAIb,QAAQ,GAAG,CAAf,EAAkB;AACrBY,IAAAA,KAAK,GAAGP,SAAS,CAACO,KAAV,CAAgBK,IAAxB;AACAH,IAAAA,QAAQ,GAAGT,SAAS,CAACS,QAAV,CAAmBD,MAA9B;AACH,GAnBgF,CAqBjF;;;AACA,MAAIb,QAAQ,KAAK,CAAb,IAAkBW,MAAM,GAAG,GAA/B,EAAoC;AAChCA,IAAAA,MAAM,IAAI,GAAV;AACAC,IAAAA,KAAK,GAAGA,KAAK,KAAKP,SAAS,CAACO,KAAV,CAAgBI,KAA1B,GAAkCX,SAAS,CAACO,KAAV,CAAgBK,IAAlD,GAAyDZ,SAAS,CAACO,KAAV,CAAgBI,KAAjF;AACH;;AAEDL,EAAAA,MAAM,IAAIX,QAAV;AAEA,SAAO;AAAES,IAAAA,CAAC,EAAEA,CAAL;AAAQC,IAAAA,CAAC,EAAEA,CAAX;AAAcC,IAAAA,MAAM,EAAEA,MAAtB;AAA8BC,IAAAA,KAAK,EAAEA,KAArC;AAA4CE,IAAAA,QAAQ,EAAEA;AAAtD,GAAP;AACH,CA9BM","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { positionFromAngle, radiansToDegrees } from './utils';\nimport { textPropsByEngine } from '../bridge';\n\n/**\n * @param {number} radius\n * @param {number} angle          angle (radians)\n * @param {number} [rotation=0]   label rotation (degrees)\n * @param {string} [engine='svg'] one of: 'svg', 'canvas'\n * @return {{ x: number, y: number, rotate: number, align: string, baseline: string }}\n */\nexport var getPolarLabelProps = function getPolarLabelProps(radius, angle, rotation) {\n    var engine = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'svg';\n\n    var textProps = textPropsByEngine[engine];\n\n    var _positionFromAngle = positionFromAngle(angle - Math.PI / 2, radius),\n        x = _positionFromAngle.x,\n        y = _positionFromAngle.y;\n\n    var rotate = radiansToDegrees(angle);\n    var align = textProps.align.center;\n    var baseline = textProps.baseline.bottom;\n\n    if (rotation > 0) {\n        align = textProps.align.right;\n        baseline = textProps.baseline.center;\n    } else if (rotation < 0) {\n        align = textProps.align.left;\n        baseline = textProps.baseline.center;\n    }\n\n    // reverse labels after 180°\n    if (rotation !== 0 && rotate > 180) {\n        rotate -= 180;\n        align = align === textProps.align.right ? textProps.align.left : textProps.align.right;\n    }\n\n    rotate += rotation;\n\n    return { x: x, y: y, rotate: rotate, align: align, baseline: baseline };\n};"]},"metadata":{},"sourceType":"module"}