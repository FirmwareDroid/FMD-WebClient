{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n\nimport React from 'react';\nimport { TransitionMotion, spring } from 'react-motion';\nimport { colorMotionSpring, getInterpolatedColor } from '../../../lib/colors';\nimport Container from '../Container';\nimport enhance from './enhance';\nimport { getNodeHandlers } from './interactivity';\nimport { nodeWillEnter, nodeWillLeave } from './motion';\n\nvar TreeMapHtml = function TreeMapHtml(_ref) {\n  var nodes = _ref.nodes,\n      nodeComponent = _ref.nodeComponent,\n      margin = _ref.margin,\n      outerWidth = _ref.outerWidth,\n      outerHeight = _ref.outerHeight,\n      theme = _ref.theme,\n      borderWidth = _ref.borderWidth,\n      getBorderColor = _ref.getBorderColor,\n      getLabelTextColor = _ref.getLabelTextColor,\n      orientLabel = _ref.orientLabel,\n      animate = _ref.animate,\n      motionStiffness = _ref.motionStiffness,\n      motionDamping = _ref.motionDamping,\n      isInteractive = _ref.isInteractive,\n      onClick = _ref.onClick;\n  var springConfig = {\n    stiffness: motionStiffness,\n    damping: motionDamping\n  };\n\n  var getHandlers = function getHandlers(node, showTooltip, hideTooltip) {\n    return getNodeHandlers(node, {\n      isInteractive: isInteractive,\n      onClick: onClick,\n      showTooltip: showTooltip,\n      hideTooltip: hideTooltip,\n      theme: theme\n    });\n  };\n\n  return React.createElement(Container, {\n    theme: theme\n  }, function (_ref2) {\n    var showTooltip = _ref2.showTooltip,\n        hideTooltip = _ref2.hideTooltip;\n    return React.createElement('div', {\n      style: {\n        position: 'relative',\n        width: outerWidth,\n        height: outerHeight\n      }\n    }, !animate && React.createElement('div', {\n      style: {\n        position: 'absolute',\n        top: margin.top,\n        left: margin.left\n      }\n    }, nodes.map(function (node) {\n      return React.createElement(nodeComponent, {\n        key: node.path,\n        node: node,\n        style: {\n          x: node.x,\n          y: node.y,\n          width: node.width,\n          height: node.height,\n          color: node.color,\n          borderWidth: borderWidth,\n          borderColor: getBorderColor(node),\n          labelTextColor: getLabelTextColor(node),\n          orientLabel: orientLabel\n        },\n        handlers: getHandlers(node, showTooltip, hideTooltip)\n      });\n    })), animate && React.createElement(TransitionMotion, {\n      willEnter: nodeWillEnter,\n      willLeave: nodeWillLeave(springConfig),\n      styles: nodes.map(function (node) {\n        return {\n          key: node.path,\n          data: node,\n          style: _extends({\n            x: spring(node.x, springConfig),\n            y: spring(node.y, springConfig),\n            width: spring(node.width, springConfig),\n            height: spring(node.height, springConfig)\n          }, colorMotionSpring(node.color, springConfig))\n        };\n      })\n    }, function (interpolatedStyles) {\n      return React.createElement('div', {\n        style: {\n          position: 'absolute',\n          top: margin.top,\n          left: margin.left\n        }\n      }, interpolatedStyles.map(function (_ref3) {\n        var style = _ref3.style,\n            node = _ref3.data;\n        style.color = getInterpolatedColor(style);\n        return React.createElement(nodeComponent, {\n          key: node.path,\n          node: node,\n          style: _extends({}, style, {\n            fill: node.fill,\n            borderWidth: borderWidth,\n            borderColor: getBorderColor(style),\n            labelTextColor: getLabelTextColor(style),\n            orientLabel: orientLabel\n          }),\n          handlers: getHandlers(node, showTooltip, hideTooltip)\n        });\n      }));\n    }));\n  });\n};\n\nTreeMapHtml.displayName = 'TreeMapHtml';\nexport default enhance(TreeMapHtml);","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/components/charts/treemap/TreeMapHtml.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","React","TransitionMotion","spring","colorMotionSpring","getInterpolatedColor","Container","enhance","getNodeHandlers","nodeWillEnter","nodeWillLeave","TreeMapHtml","_ref","nodes","nodeComponent","margin","outerWidth","outerHeight","theme","borderWidth","getBorderColor","getLabelTextColor","orientLabel","animate","motionStiffness","motionDamping","isInteractive","onClick","springConfig","stiffness","damping","getHandlers","node","showTooltip","hideTooltip","createElement","_ref2","style","position","width","height","top","left","map","path","x","y","color","borderColor","labelTextColor","handlers","willEnter","willLeave","styles","data","interpolatedStyles","_ref3","fill","displayName"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react';\nimport { TransitionMotion, spring } from 'react-motion';\nimport { colorMotionSpring, getInterpolatedColor } from '../../../lib/colors';\nimport Container from '../Container';\nimport enhance from './enhance';\nimport { getNodeHandlers } from './interactivity';\nimport { nodeWillEnter, nodeWillLeave } from './motion';\n\nvar TreeMapHtml = function TreeMapHtml(_ref) {\n    var nodes = _ref.nodes,\n        nodeComponent = _ref.nodeComponent,\n        margin = _ref.margin,\n        outerWidth = _ref.outerWidth,\n        outerHeight = _ref.outerHeight,\n        theme = _ref.theme,\n        borderWidth = _ref.borderWidth,\n        getBorderColor = _ref.getBorderColor,\n        getLabelTextColor = _ref.getLabelTextColor,\n        orientLabel = _ref.orientLabel,\n        animate = _ref.animate,\n        motionStiffness = _ref.motionStiffness,\n        motionDamping = _ref.motionDamping,\n        isInteractive = _ref.isInteractive,\n        onClick = _ref.onClick;\n\n    var springConfig = {\n        stiffness: motionStiffness,\n        damping: motionDamping\n    };\n\n    var getHandlers = function getHandlers(node, showTooltip, hideTooltip) {\n        return getNodeHandlers(node, {\n            isInteractive: isInteractive,\n            onClick: onClick,\n            showTooltip: showTooltip,\n            hideTooltip: hideTooltip,\n            theme: theme\n        });\n    };\n\n    return React.createElement(\n        Container,\n        { theme: theme },\n        function (_ref2) {\n            var showTooltip = _ref2.showTooltip,\n                hideTooltip = _ref2.hideTooltip;\n            return React.createElement(\n                'div',\n                {\n                    style: {\n                        position: 'relative',\n                        width: outerWidth,\n                        height: outerHeight\n                    }\n                },\n                !animate && React.createElement(\n                    'div',\n                    { style: { position: 'absolute', top: margin.top, left: margin.left } },\n                    nodes.map(function (node) {\n                        return React.createElement(nodeComponent, {\n                            key: node.path,\n                            node: node,\n                            style: {\n                                x: node.x,\n                                y: node.y,\n                                width: node.width,\n                                height: node.height,\n                                color: node.color,\n                                borderWidth: borderWidth,\n                                borderColor: getBorderColor(node),\n                                labelTextColor: getLabelTextColor(node),\n                                orientLabel: orientLabel\n                            },\n                            handlers: getHandlers(node, showTooltip, hideTooltip)\n                        });\n                    })\n                ),\n                animate && React.createElement(\n                    TransitionMotion,\n                    {\n                        willEnter: nodeWillEnter,\n                        willLeave: nodeWillLeave(springConfig),\n                        styles: nodes.map(function (node) {\n                            return {\n                                key: node.path,\n                                data: node,\n                                style: _extends({\n                                    x: spring(node.x, springConfig),\n                                    y: spring(node.y, springConfig),\n                                    width: spring(node.width, springConfig),\n                                    height: spring(node.height, springConfig)\n                                }, colorMotionSpring(node.color, springConfig))\n                            };\n                        })\n                    },\n                    function (interpolatedStyles) {\n                        return React.createElement(\n                            'div',\n                            {\n                                style: {\n                                    position: 'absolute',\n                                    top: margin.top,\n                                    left: margin.left\n                                }\n                            },\n                            interpolatedStyles.map(function (_ref3) {\n                                var style = _ref3.style,\n                                    node = _ref3.data;\n\n                                style.color = getInterpolatedColor(style);\n\n                                return React.createElement(nodeComponent, {\n                                    key: node.path,\n                                    node: node,\n                                    style: _extends({}, style, {\n                                        fill: node.fill,\n                                        borderWidth: borderWidth,\n                                        borderColor: getBorderColor(style),\n                                        labelTextColor: getLabelTextColor(style),\n                                        orientLabel: orientLabel\n                                    }),\n                                    handlers: getHandlers(node, showTooltip, hideTooltip)\n                                });\n                            })\n                        );\n                    }\n                )\n            );\n        }\n    );\n};\n\nTreeMapHtml.displayName = 'TreeMapHtml';\n\nexport default enhance(TreeMapHtml);"]},"metadata":{},"sourceType":"module"}