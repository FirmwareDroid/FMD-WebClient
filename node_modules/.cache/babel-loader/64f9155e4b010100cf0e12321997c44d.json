{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n\nimport { computeAxisTicks } from '../../axes';\nimport { degreesToRadians } from '../../polar';\nvar horizontalPositions = ['top', 'bottom'];\nvar positions = ['top', 'right', 'bottom', 'left'];\nexport var renderAxis = function renderAxis(ctx, _ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      position = _ref.position,\n      scale = _ref.scale,\n      _ref$tickSize = _ref.tickSize,\n      tickSize = _ref$tickSize === undefined ? 5 : _ref$tickSize,\n      _ref$tickPadding = _ref.tickPadding,\n      tickPadding = _ref$tickPadding === undefined ? 5 : _ref$tickPadding,\n      _ref$tickRotation = _ref.tickRotation,\n      tickRotation = _ref$tickRotation === undefined ? 0 : _ref$tickRotation;\n\n  var _computeAxisTicks = computeAxisTicks({\n    width: width,\n    height: height,\n    position: position,\n    scale: scale,\n    tickSize: tickSize,\n    tickPadding: tickPadding,\n    tickRotation: tickRotation,\n    engine: 'canvas'\n  }),\n      x = _computeAxisTicks.x,\n      y = _computeAxisTicks.y,\n      ticks = _computeAxisTicks.ticks,\n      textAlign = _computeAxisTicks.textAlign,\n      textBaseline = _computeAxisTicks.textBaseline;\n\n  ctx.save();\n  ctx.translate(x, y);\n  ctx.textAlign = textAlign;\n  ctx.textBaseline = textBaseline;\n  ticks.forEach(function (tick) {\n    ctx.beginPath();\n    ctx.moveTo(tick.x, tick.y);\n    ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY);\n    ctx.stroke();\n    ctx.save();\n    ctx.translate(tick.x + tick.textX, tick.y + tick.textY);\n    ctx.rotate(degreesToRadians(tickRotation));\n    ctx.fillText(tick.value, 0, 0);\n    ctx.restore();\n  });\n  ctx.restore();\n};\nexport var renderAxes = function renderAxes(ctx, _ref2) {\n  var xScale = _ref2.xScale,\n      yScale = _ref2.yScale,\n      width = _ref2.width,\n      height = _ref2.height,\n      top = _ref2.top,\n      right = _ref2.right,\n      bottom = _ref2.bottom,\n      left = _ref2.left;\n  var axes = {\n    top: top,\n    right: right,\n    bottom: bottom,\n    left: left\n  };\n  positions.map(function (position) {\n    if (!axes[position]) return null;\n    var axis = axes[position];\n    var scale = horizontalPositions.includes(position) ? xScale : yScale;\n    renderAxis(ctx, _extends({}, axis, {\n      width: width,\n      height: height,\n      position: position,\n      scale: scale\n    }));\n  });\n};","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/lib/canvas/axes/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","computeAxisTicks","degreesToRadians","horizontalPositions","positions","renderAxis","ctx","_ref","width","height","position","scale","_ref$tickSize","tickSize","undefined","_ref$tickPadding","tickPadding","_ref$tickRotation","tickRotation","_computeAxisTicks","engine","x","y","ticks","textAlign","textBaseline","save","translate","forEach","tick","beginPath","moveTo","lineTo","lineX","lineY","stroke","textX","textY","rotate","fillText","value","restore","renderAxes","_ref2","xScale","yScale","top","right","bottom","left","axes","map","axis","includes"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { computeAxisTicks } from '../../axes';\nimport { degreesToRadians } from '../../polar';\n\nvar horizontalPositions = ['top', 'bottom'];\nvar positions = ['top', 'right', 'bottom', 'left'];\n\nexport var renderAxis = function renderAxis(ctx, _ref) {\n    var width = _ref.width,\n        height = _ref.height,\n        position = _ref.position,\n        scale = _ref.scale,\n        _ref$tickSize = _ref.tickSize,\n        tickSize = _ref$tickSize === undefined ? 5 : _ref$tickSize,\n        _ref$tickPadding = _ref.tickPadding,\n        tickPadding = _ref$tickPadding === undefined ? 5 : _ref$tickPadding,\n        _ref$tickRotation = _ref.tickRotation,\n        tickRotation = _ref$tickRotation === undefined ? 0 : _ref$tickRotation;\n\n    var _computeAxisTicks = computeAxisTicks({\n        width: width,\n        height: height,\n        position: position,\n        scale: scale,\n        tickSize: tickSize,\n        tickPadding: tickPadding,\n        tickRotation: tickRotation,\n        engine: 'canvas'\n    }),\n        x = _computeAxisTicks.x,\n        y = _computeAxisTicks.y,\n        ticks = _computeAxisTicks.ticks,\n        textAlign = _computeAxisTicks.textAlign,\n        textBaseline = _computeAxisTicks.textBaseline;\n\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.textAlign = textAlign;\n    ctx.textBaseline = textBaseline;\n\n    ticks.forEach(function (tick) {\n        ctx.beginPath();\n        ctx.moveTo(tick.x, tick.y);\n        ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY);\n        ctx.stroke();\n\n        ctx.save();\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY);\n        ctx.rotate(degreesToRadians(tickRotation));\n        ctx.fillText(tick.value, 0, 0);\n        ctx.restore();\n    });\n\n    ctx.restore();\n};\n\nexport var renderAxes = function renderAxes(ctx, _ref2) {\n    var xScale = _ref2.xScale,\n        yScale = _ref2.yScale,\n        width = _ref2.width,\n        height = _ref2.height,\n        top = _ref2.top,\n        right = _ref2.right,\n        bottom = _ref2.bottom,\n        left = _ref2.left;\n\n    var axes = { top: top, right: right, bottom: bottom, left: left };\n\n    positions.map(function (position) {\n        if (!axes[position]) return null;\n\n        var axis = axes[position];\n        var scale = horizontalPositions.includes(position) ? xScale : yScale;\n\n        renderAxis(ctx, _extends({}, axis, {\n            width: width,\n            height: height,\n            position: position,\n            scale: scale\n        }));\n    });\n};"]},"metadata":{},"sourceType":"module"}