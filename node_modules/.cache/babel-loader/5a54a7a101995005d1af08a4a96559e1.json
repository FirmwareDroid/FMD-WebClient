{"ast":null,"code":"/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react';\nimport BasicTooltip from '../../tooltip/BasicTooltip';\nexport var getNodeHandlers = function getNodeHandlers(node, _ref) {\n  var isInteractive = _ref.isInteractive,\n      onClick = _ref.onClick,\n      showTooltip = _ref.showTooltip,\n      hideTooltip = _ref.hideTooltip,\n      isZoomable = _ref.isZoomable,\n      zoomToNode = _ref.zoomToNode,\n      theme = _ref.theme,\n      tooltipFormat = _ref.tooltipFormat;\n  if (!isInteractive) return {};\n\n  var handleTooltip = function handleTooltip(e) {\n    showTooltip(React.createElement(BasicTooltip, {\n      id: node.id,\n      value: node.value,\n      enableChip: true,\n      color: node.color,\n      theme: theme,\n      format: tooltipFormat\n    }), e);\n  };\n\n  var clickHandler = onClick;\n\n  if (isZoomable) {\n    clickHandler = function clickHandler(event) {\n      onClick(node, event);\n      zoomToNode(node.path);\n    };\n  }\n\n  return {\n    onMouseEnter: handleTooltip,\n    onMouseMove: handleTooltip,\n    onMouseLeave: hideTooltip,\n    onClick: clickHandler\n  };\n};","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/components/charts/bubble/interactivity.js"],"names":["React","BasicTooltip","getNodeHandlers","node","_ref","isInteractive","onClick","showTooltip","hideTooltip","isZoomable","zoomToNode","theme","tooltipFormat","handleTooltip","e","createElement","id","value","enableChip","color","format","clickHandler","event","path","onMouseEnter","onMouseMove","onMouseLeave"],"mappings":"AAAA;;;;;;;;AAQA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,OAAO,IAAIC,eAAe,GAAG,SAASA,eAAT,CAAyBC,IAAzB,EAA+BC,IAA/B,EAAqC;AAC9D,MAAIC,aAAa,GAAGD,IAAI,CAACC,aAAzB;AAAA,MACIC,OAAO,GAAGF,IAAI,CAACE,OADnB;AAAA,MAEIC,WAAW,GAAGH,IAAI,CAACG,WAFvB;AAAA,MAGIC,WAAW,GAAGJ,IAAI,CAACI,WAHvB;AAAA,MAIIC,UAAU,GAAGL,IAAI,CAACK,UAJtB;AAAA,MAKIC,UAAU,GAAGN,IAAI,CAACM,UALtB;AAAA,MAMIC,KAAK,GAAGP,IAAI,CAACO,KANjB;AAAA,MAOIC,aAAa,GAAGR,IAAI,CAACQ,aAPzB;AASA,MAAI,CAACP,aAAL,EAAoB,OAAO,EAAP;;AAEpB,MAAIQ,aAAa,GAAG,SAASA,aAAT,CAAuBC,CAAvB,EAA0B;AAC1CP,IAAAA,WAAW,CAACP,KAAK,CAACe,aAAN,CAAoBd,YAApB,EAAkC;AAC1Ce,MAAAA,EAAE,EAAEb,IAAI,CAACa,EADiC;AAE1CC,MAAAA,KAAK,EAAEd,IAAI,CAACc,KAF8B;AAG1CC,MAAAA,UAAU,EAAE,IAH8B;AAI1CC,MAAAA,KAAK,EAAEhB,IAAI,CAACgB,KAJ8B;AAK1CR,MAAAA,KAAK,EAAEA,KALmC;AAM1CS,MAAAA,MAAM,EAAER;AANkC,KAAlC,CAAD,EAOPE,CAPO,CAAX;AAQH,GATD;;AAWA,MAAIO,YAAY,GAAGf,OAAnB;;AACA,MAAIG,UAAJ,EAAgB;AACZY,IAAAA,YAAY,GAAG,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AACxChB,MAAAA,OAAO,CAACH,IAAD,EAAOmB,KAAP,CAAP;AACAZ,MAAAA,UAAU,CAACP,IAAI,CAACoB,IAAN,CAAV;AACH,KAHD;AAIH;;AAED,SAAO;AACHC,IAAAA,YAAY,EAAEX,aADX;AAEHY,IAAAA,WAAW,EAAEZ,aAFV;AAGHa,IAAAA,YAAY,EAAElB,WAHX;AAIHF,IAAAA,OAAO,EAAEe;AAJN,GAAP;AAMH,CArCM","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react';\nimport BasicTooltip from '../../tooltip/BasicTooltip';\n\nexport var getNodeHandlers = function getNodeHandlers(node, _ref) {\n    var isInteractive = _ref.isInteractive,\n        onClick = _ref.onClick,\n        showTooltip = _ref.showTooltip,\n        hideTooltip = _ref.hideTooltip,\n        isZoomable = _ref.isZoomable,\n        zoomToNode = _ref.zoomToNode,\n        theme = _ref.theme,\n        tooltipFormat = _ref.tooltipFormat;\n\n    if (!isInteractive) return {};\n\n    var handleTooltip = function handleTooltip(e) {\n        showTooltip(React.createElement(BasicTooltip, {\n            id: node.id,\n            value: node.value,\n            enableChip: true,\n            color: node.color,\n            theme: theme,\n            format: tooltipFormat\n        }), e);\n    };\n\n    var clickHandler = onClick;\n    if (isZoomable) {\n        clickHandler = function clickHandler(event) {\n            onClick(node, event);\n            zoomToNode(node.path);\n        };\n    }\n\n    return {\n        onMouseEnter: handleTooltip,\n        onMouseMove: handleTooltip,\n        onMouseLeave: hideTooltip,\n        onClick: clickHandler\n    };\n};"]},"metadata":{},"sourceType":"module"}