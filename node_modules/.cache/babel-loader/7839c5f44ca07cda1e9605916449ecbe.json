{"ast":null,"code":"/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types';\nimport without from 'lodash/without';\nimport { curveBasis, curveBasisClosed, curveBasisOpen, curveBundle, curveCardinal, curveCardinalClosed, curveCardinalOpen, curveCatmullRom, curveCatmullRomClosed, curveCatmullRomOpen, curveLinear, curveLinearClosed, curveMonotoneX, curveMonotoneY, curveNatural, curveStep, curveStepAfter, curveStepBefore } from 'd3-shape';\nexport var curvePropMapping = {\n  basis: curveBasis,\n  basisClosed: curveBasisClosed,\n  basisOpen: curveBasisOpen,\n  bundle: curveBundle,\n  cardinal: curveCardinal,\n  cardinalClosed: curveCardinalClosed,\n  cardinalOpen: curveCardinalOpen,\n  catmullRom: curveCatmullRom,\n  catmullRomClosed: curveCatmullRomClosed,\n  catmullRomOpen: curveCatmullRomOpen,\n  linear: curveLinear,\n  linearClosed: curveLinearClosed,\n  monotoneX: curveMonotoneX,\n  monotoneY: curveMonotoneY,\n  natural: curveNatural,\n  step: curveStep,\n  stepAfter: curveStepAfter,\n  stepBefore: curveStepBefore\n};\nexport var curvePropKeys = Object.keys(curvePropMapping);\nexport var curvePropType = PropTypes.oneOf(curvePropKeys);\nexport var closedCurvePropKeys = curvePropKeys.filter(function (c) {\n  return c.endsWith('Closed');\n});\nexport var closedCurvePropType = PropTypes.oneOf(closedCurvePropKeys); // Safe curves to be used with d3 area shape generator\n\nexport var areaCurvePropKeys = without(curvePropKeys, 'bundle', 'basisClosed', 'basisOpen', 'cardinalClosed', 'cardinalOpen', 'catmullRomClosed', 'catmullRomOpen', 'linearClosed');\nexport var areaCurvePropType = PropTypes.oneOf(areaCurvePropKeys); // Safe curves to be used with d3 line shape generator\n\nexport var lineCurvePropKeys = without(curvePropKeys, 'bundle', 'basisClosed', 'basisOpen', 'cardinalClosed', 'cardinalOpen', 'catmullRomClosed', 'catmullRomOpen', 'linearClosed');\nexport var lineCurvePropType = PropTypes.oneOf(lineCurvePropKeys);\n/**\n * Returns curve interpolator from given identifier.\n *\n * @param {string} id - Curve interpolator identifier\n * @return {Function}\n */\n\nexport var curveFromProp = function curveFromProp(id) {\n  var curveInterpolator = curvePropMapping[id];\n\n  if (!curveInterpolator) {\n    throw new TypeError('\\'' + id + '\\', is not a valid curve interpolator identifier.');\n  }\n\n  return curvePropMapping[id];\n};","map":{"version":3,"sources":["/Users/tom/Documents/MSE/zz_MasterThesis/06_FirmwareDroid/firmware-droid-client/node_modules/nivo/es/props/curve.js"],"names":["PropTypes","without","curveBasis","curveBasisClosed","curveBasisOpen","curveBundle","curveCardinal","curveCardinalClosed","curveCardinalOpen","curveCatmullRom","curveCatmullRomClosed","curveCatmullRomOpen","curveLinear","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","curvePropMapping","basis","basisClosed","basisOpen","bundle","cardinal","cardinalClosed","cardinalOpen","catmullRom","catmullRomClosed","catmullRomOpen","linear","linearClosed","monotoneX","monotoneY","natural","step","stepAfter","stepBefore","curvePropKeys","Object","keys","curvePropType","oneOf","closedCurvePropKeys","filter","c","endsWith","closedCurvePropType","areaCurvePropKeys","areaCurvePropType","lineCurvePropKeys","lineCurvePropType","curveFromProp","id","curveInterpolator","TypeError"],"mappings":"AAAA;;;;;;;;AAQA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,UAAT,EAAqBC,gBAArB,EAAuCC,cAAvC,EAAuDC,WAAvD,EAAoEC,aAApE,EAAmFC,mBAAnF,EAAwGC,iBAAxG,EAA2HC,eAA3H,EAA4IC,qBAA5I,EAAmKC,mBAAnK,EAAwLC,WAAxL,EAAqMC,iBAArM,EAAwNC,cAAxN,EAAwOC,cAAxO,EAAwPC,YAAxP,EAAsQC,SAAtQ,EAAiRC,cAAjR,EAAiSC,eAAjS,QAAwT,UAAxT;AAEA,OAAO,IAAIC,gBAAgB,GAAG;AAC1BC,EAAAA,KAAK,EAAEnB,UADmB;AAE1BoB,EAAAA,WAAW,EAAEnB,gBAFa;AAG1BoB,EAAAA,SAAS,EAAEnB,cAHe;AAI1BoB,EAAAA,MAAM,EAAEnB,WAJkB;AAK1BoB,EAAAA,QAAQ,EAAEnB,aALgB;AAM1BoB,EAAAA,cAAc,EAAEnB,mBANU;AAO1BoB,EAAAA,YAAY,EAAEnB,iBAPY;AAQ1BoB,EAAAA,UAAU,EAAEnB,eARc;AAS1BoB,EAAAA,gBAAgB,EAAEnB,qBATQ;AAU1BoB,EAAAA,cAAc,EAAEnB,mBAVU;AAW1BoB,EAAAA,MAAM,EAAEnB,WAXkB;AAY1BoB,EAAAA,YAAY,EAAEnB,iBAZY;AAa1BoB,EAAAA,SAAS,EAAEnB,cAbe;AAc1BoB,EAAAA,SAAS,EAAEnB,cAde;AAe1BoB,EAAAA,OAAO,EAAEnB,YAfiB;AAgB1BoB,EAAAA,IAAI,EAAEnB,SAhBoB;AAiB1BoB,EAAAA,SAAS,EAAEnB,cAjBe;AAkB1BoB,EAAAA,UAAU,EAAEnB;AAlBc,CAAvB;AAqBP,OAAO,IAAIoB,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYrB,gBAAZ,CAApB;AAEP,OAAO,IAAIsB,aAAa,GAAG1C,SAAS,CAAC2C,KAAV,CAAgBJ,aAAhB,CAApB;AAEP,OAAO,IAAIK,mBAAmB,GAAGL,aAAa,CAACM,MAAd,CAAqB,UAAUC,CAAV,EAAa;AAC/D,SAAOA,CAAC,CAACC,QAAF,CAAW,QAAX,CAAP;AACH,CAFgC,CAA1B;AAIP,OAAO,IAAIC,mBAAmB,GAAGhD,SAAS,CAAC2C,KAAV,CAAgBC,mBAAhB,CAA1B,C,CAEP;;AACA,OAAO,IAAIK,iBAAiB,GAAGhD,OAAO,CAACsC,aAAD,EAAgB,QAAhB,EAA0B,aAA1B,EAAyC,WAAzC,EAAsD,gBAAtD,EAAwE,cAAxE,EAAwF,kBAAxF,EAA4G,gBAA5G,EAA8H,cAA9H,CAA/B;AAEP,OAAO,IAAIW,iBAAiB,GAAGlD,SAAS,CAAC2C,KAAV,CAAgBM,iBAAhB,CAAxB,C,CAEP;;AACA,OAAO,IAAIE,iBAAiB,GAAGlD,OAAO,CAACsC,aAAD,EAAgB,QAAhB,EAA0B,aAA1B,EAAyC,WAAzC,EAAsD,gBAAtD,EAAwE,cAAxE,EAAwF,kBAAxF,EAA4G,gBAA5G,EAA8H,cAA9H,CAA/B;AAEP,OAAO,IAAIa,iBAAiB,GAAGpD,SAAS,CAAC2C,KAAV,CAAgBQ,iBAAhB,CAAxB;AAEP;;;;;;;AAMA,OAAO,IAAIE,aAAa,GAAG,SAASA,aAAT,CAAuBC,EAAvB,EAA2B;AAClD,MAAIC,iBAAiB,GAAGnC,gBAAgB,CAACkC,EAAD,CAAxC;;AACA,MAAI,CAACC,iBAAL,EAAwB;AACpB,UAAM,IAAIC,SAAJ,CAAc,OAAOF,EAAP,GAAY,mDAA1B,CAAN;AACH;;AAED,SAAOlC,gBAAgB,CAACkC,EAAD,CAAvB;AACH,CAPM","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types';\nimport without from 'lodash/without';\nimport { curveBasis, curveBasisClosed, curveBasisOpen, curveBundle, curveCardinal, curveCardinalClosed, curveCardinalOpen, curveCatmullRom, curveCatmullRomClosed, curveCatmullRomOpen, curveLinear, curveLinearClosed, curveMonotoneX, curveMonotoneY, curveNatural, curveStep, curveStepAfter, curveStepBefore } from 'd3-shape';\n\nexport var curvePropMapping = {\n    basis: curveBasis,\n    basisClosed: curveBasisClosed,\n    basisOpen: curveBasisOpen,\n    bundle: curveBundle,\n    cardinal: curveCardinal,\n    cardinalClosed: curveCardinalClosed,\n    cardinalOpen: curveCardinalOpen,\n    catmullRom: curveCatmullRom,\n    catmullRomClosed: curveCatmullRomClosed,\n    catmullRomOpen: curveCatmullRomOpen,\n    linear: curveLinear,\n    linearClosed: curveLinearClosed,\n    monotoneX: curveMonotoneX,\n    monotoneY: curveMonotoneY,\n    natural: curveNatural,\n    step: curveStep,\n    stepAfter: curveStepAfter,\n    stepBefore: curveStepBefore\n};\n\nexport var curvePropKeys = Object.keys(curvePropMapping);\n\nexport var curvePropType = PropTypes.oneOf(curvePropKeys);\n\nexport var closedCurvePropKeys = curvePropKeys.filter(function (c) {\n    return c.endsWith('Closed');\n});\n\nexport var closedCurvePropType = PropTypes.oneOf(closedCurvePropKeys);\n\n// Safe curves to be used with d3 area shape generator\nexport var areaCurvePropKeys = without(curvePropKeys, 'bundle', 'basisClosed', 'basisOpen', 'cardinalClosed', 'cardinalOpen', 'catmullRomClosed', 'catmullRomOpen', 'linearClosed');\n\nexport var areaCurvePropType = PropTypes.oneOf(areaCurvePropKeys);\n\n// Safe curves to be used with d3 line shape generator\nexport var lineCurvePropKeys = without(curvePropKeys, 'bundle', 'basisClosed', 'basisOpen', 'cardinalClosed', 'cardinalOpen', 'catmullRomClosed', 'catmullRomOpen', 'linearClosed');\n\nexport var lineCurvePropType = PropTypes.oneOf(lineCurvePropKeys);\n\n/**\n * Returns curve interpolator from given identifier.\n *\n * @param {string} id - Curve interpolator identifier\n * @return {Function}\n */\nexport var curveFromProp = function curveFromProp(id) {\n    var curveInterpolator = curvePropMapping[id];\n    if (!curveInterpolator) {\n        throw new TypeError('\\'' + id + '\\', is not a valid curve interpolator identifier.');\n    }\n\n    return curvePropMapping[id];\n};"]},"metadata":{},"sourceType":"module"}